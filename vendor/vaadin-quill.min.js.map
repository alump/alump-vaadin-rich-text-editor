{"version":3,"sources":["webpack://Quill/webpack/universalModuleDefinition","webpack://Quill/webpack/bootstrap","webpack://Quill/./core/editor.js","webpack://Quill/./core/quill.js","webpack://Quill/./node_modules/parchment/src/scope.ts","webpack://Quill/./node_modules/parchment/src/collection/linked-list.ts","webpack://Quill/./node_modules/parchment/src/error.ts","webpack://Quill/./node_modules/parchment/src/registry.ts","webpack://Quill/./node_modules/parchment/src/blot/abstract/shadow.ts","webpack://Quill/./node_modules/parchment/src/blot/abstract/parent.ts","webpack://Quill/./node_modules/parchment/src/blot/abstract/container.ts","webpack://Quill/./node_modules/parchment/src/blot/abstract/leaf.ts","webpack://Quill/./node_modules/parchment/src/attributor/attributor.ts","webpack://Quill/./node_modules/parchment/src/attributor/class.ts","webpack://Quill/./node_modules/parchment/src/attributor/style.ts","webpack://Quill/./node_modules/parchment/src/attributor/store.ts","webpack://Quill/./node_modules/parchment/src/blot/inline.ts","webpack://Quill/./node_modules/parchment/src/blot/block.ts","webpack://Quill/./node_modules/parchment/src/blot/embed.ts","webpack://Quill/./node_modules/parchment/src/blot/scroll.ts","webpack://Quill/./node_modules/parchment/src/blot/text.ts","webpack://Quill/./node_modules/parchment/src/parchment.ts","webpack://Quill/./node_modules/quill-delta/dist/Delta.js","webpack://Quill/./core/emitter.js","webpack://Quill/./blots/block.js","webpack://Quill/./node_modules/extend/index.js","webpack://Quill/./blots/text.js","webpack://Quill/./blots/inline.js","webpack://Quill/./core/module.js","webpack://Quill/./blots/break.js","webpack://Quill/./formats/code.js","webpack://Quill/./core/logger.js","webpack://Quill/./blots/container.js","webpack://Quill/./node_modules/clone/clone.js","webpack://Quill/./node_modules/deep-equal/index.js","webpack://Quill/./blots/cursor.js","webpack://Quill/./core/selection.js","webpack://Quill/./formats/color.js","webpack://Quill/./formats/direction.js","webpack://Quill/./core/shadow-selection-polyfill.js","webpack://Quill/./formats/align.js","webpack://Quill/./formats/link.js","webpack://Quill/./formats/background.js","webpack://Quill/./formats/font.js","webpack://Quill/./formats/size.js","webpack://Quill/./core/theme.js","webpack://Quill/./core/instances.js","webpack://Quill/./modules/clipboard.js","webpack://Quill/./formats/bold.js","webpack://Quill/./blots/scroll.js","webpack://Quill/./modules/history.js","webpack://Quill/./modules/keyboard.js","webpack://Quill/./modules/uploader.js","webpack://Quill/./core.js","webpack://Quill/./blots/embed.js","webpack://Quill/./node_modules/quill-delta/dist/Op.js","webpack://Quill/./node_modules/eventemitter3/index.js","webpack://Quill/./formats/indent.js","webpack://Quill/./formats/blockquote.js","webpack://Quill/./formats/header.js","webpack://Quill/./formats/list.js","webpack://Quill/./formats/italic.js","webpack://Quill/./formats/script.js","webpack://Quill/./formats/strike.js","webpack://Quill/./formats/underline.js","webpack://Quill/./formats/image.js","webpack://Quill/./modules/syntax.js","webpack://Quill/./modules/toolbar.js","webpack://Quill/./formats/table.js","webpack://Quill/./modules/table.js","webpack://Quill/./node_modules/deep-equal/lib/keys.js","webpack://Quill/./node_modules/deep-equal/lib/is_arguments.js","webpack://Quill/./node_modules/fast-diff/diff.js","webpack://Quill/./node_modules/quill-delta/dist/AttributeMap.js","webpack://Quill/./node_modules/quill-delta/dist/Iterator.js","webpack://Quill/./vaadin-quill.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ASCII","convertHTML","blot","index","length","isRoot","arguments","undefined","html","TextBlot","escapeText","slice","children","statics","blotName","items","forEachAt","child","offset","childLength","formats","push","indent","type","list","convertListHTML","lastIndent","types","endTag","_slicedToArray","getListType","pop","concat","_items","_toArray","_items$","rest","_getListType4","tag","attribute","previousType","parts","join","_blot$domNode","domNode","outerHTML","innerHTML","_outerHTML$split2","split","start","end","combineFormats","combined","keys","reduce","merged","Array","isArray","indexOf","shiftRange","_ref","amount","Range","Editor","constructor","scroll","this","delta","getDelta","applyDelta","consumeNextNewline","update","scrollLength","batchStart","normalizedDelta","op","insert","text","replace","attributes","Delta","normalizeDelta","retain","delete","endsWith","descendant","BlockEmbed","insertAt","_this$scroll$line2","line","extend","bubbleFormats","Block","leaf","LeafBlot","AttributeMap","diff","forEach","formatAt","deleteAt","batchEnd","optimize","deleteText","formatLine","format","lines","Math","max","clone","formatText","getContents","getFormat","leaves","path","descendants","formatsArr","map","blots","shift","apply","getHTML","_this$scroll$line4","lineOffset","getText","filter","insertEmbed","embed","[object Object]","insertText","isBlank","block","head","Break","removeFormat","_this$scroll$line6","suffixLength","suffix","change","mutations","selectionInfo","oldDelta","target","data","match","find","textBlot","oldValue","CursorBlot","CONTENTS","oldText","newText","relativeSelectionInfo","oldRange","newRange","compose","equal","debug","logger","globalRegistry","Parchment","uiClass","Quill","limit","level","node","instances","imports","error","overwrite","attrName","register","warn","startsWith","container","options","userConfig","clipboard","keyboard","history","uploader","theme","DEFAULTS","import","Error","Theme","themeConfig","config","moduleConfig","moduleClass","toolbar","document","querySelector","expandConfig","trim","classList","add","set","addContainer","setAttribute","scrollingContainer","emitter","Emitter","ScrollBlot","registry","query","editor","selection","Selection","addModule","init","on","events","EDITOR_CHANGE","TEXT_CHANGE","toggle","SCROLL_UPDATE","source","lastRange","quill_slicedToArray","getRange","modify","contents","convert","setContents","clear","placeholder","readOnly","disable","allowReadOnlyEdits","refNode","className","createElement","insertBefore","blur","setRange","_overload2","overload","enable","editReadOnly","modifier","enabled","focus","scrollTop","scrollIntoView","sources","API","range","getSelection","BLOCK","setSelection","SILENT","_overload4","_overload6","getBounds","bounds","containerBounds","getBoundingClientRect","bottom","top","height","left","right","width","getLength","_overload8","getIndex","getLeaf","getLine","getLines","Number","MAX_VALUE","getModule","getSemanticHTML","_overload10","_overload12","hasFocus","_overload14","isEnabled","off","once","_overload16","deleted","applied","lastOp","ops","_overload18","setText","USER","updateContents","args","emit","_map2","pos","transformPosition","_map4","version","QUILL_VERSION","parchment","core/module","Module","core/theme","Scope","src_scope","linked_list","tail","nodes","append","next","iterator","cur","remove","prev","contains","curNode","ret","inclusive","callback","startNode","curIndex","curLength","min","memo","ParchmentError","message","super","registry_Registry","classes","tags","bubble","has","parentNode","input","blotClass","Node","nodeType","TEXT_NODE","scope","ANY","Text","LEVEL","INLINE","inline","HTMLElement","getAttribute","some","tagName","TYPE","definitions","definition","keyName","toUpperCase","WeakMap","shadow_ShadowBlot","parseInt","toString","cloneNode","parent","removeChild","isolate","BLOT","wrap","ATTRIBUTE","def","ref","_context","requiredContainer","detach","replacement","_force","_mutations","wrapper","appendChild","shadow","parent_ParentBlot","uiNode","build","other","attach","firstChild","from","childNodes","reverse","makeAttachedBlot","err","criteria","lengthLeft","childIndex","done","allowedChildren","BLOCK_BLOT","splitAfter","unwrap","childBlot","refBlot","refDomNode","nextSibling","targetParent","context","enforceAllowedChildren","defaultChild","position","moveChildren","replaceWith","force","after","_length","addedNodes","removedNodes","mutation","body","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","sort","a","b","DOCUMENT_POSITION_FOLLOWING","e","replaceChild","abstract_parent","container_ContainerBlot","checkMerge","leaf_LeafBlot","_domNode","_inclusive","INLINE_BLOT","attributor_Attributor","item","attributeBit","whitelist","canAdd","_node","removeAttribute","class_match","prefix","attributor_class","camelize","part","style","store","styles","attr","copy","inline_InlineBlot","toLowerCase","values","obj1","obj2","prop","isEqual","move","block_BlockBlot","blot_embed","_scroll","OBSERVER_CONFIG","characterData","characterDataOldValue","childList","subtree","MAX_OPTIMIZE_ITERATIONS","scroll_ScrollBlot","observer","MutationObserver","observe","disconnect","mutationsMap","records","takeRecords","mark","markParent","remaining","previousSibling","grandChild","blot_scroll","text_TextBlot","createTextNode","splitText","blot_text","__webpack_exports__","__importDefault","mod","default","deep_equal_1","extend_1","fast_diff_1","AttributeMap_1","Op_1","NULL_CHARACTER","String","fromCharCode","arg","newOp","unshift","splice","chop","predicate","partition","passed","failed","initialValue","changeLength","elem","Infinity","iter","hasNext","nextOp","thisIter","otherIter","firstOther","peek","firstLeft","peekType","peekLength","length_1","thisOp","otherOp","cursor","strings","retDelta","diffResult","component","opLength","INSERT","DELETE","EQUAL","eachLine","newline","invert","base","inverted","baseIndex","length_2","baseOp","transform","priority","length_3","length_4","nextType","Op","eventemitter3__WEBPACK_IMPORTED_MODULE_0__","eventemitter3__WEBPACK_IMPORTED_MODULE_0___default","_logger__WEBPACK_IMPORTED_MODULE_2__","_shadow_selection_polyfill__WEBPACK_IMPORTED_MODULE_3__","EVENTS","SHADOW_SELECTIONCHANGE","EMITTERS","eventName","addEventListener","_len","_key","handleDOM","EventEmitter","listeners","_len2","_key2","log","event","_len3","_key3","composedPath","handler","getRootNode","host","containsNode","listenDOM","SCROLL_BEFORE_UPDATE","SCROLL_BLOT_MOUNT","SCROLL_BLOT_UNMOUNT","SCROLL_OPTIMIZE","SELECTION_CHANGE","blockDelta","extend__WEBPACK_IMPORTED_MODULE_0__","extend__WEBPACK_IMPORTED_MODULE_0___default","quill_delta__WEBPACK_IMPORTED_MODULE_1__","quill_delta__WEBPACK_IMPORTED_MODULE_1___default","parchment__WEBPACK_IMPORTED_MODULE_2__","_break__WEBPACK_IMPORTED_MODULE_3__","_inline__WEBPACK_IMPORTED_MODULE_4__","_text__WEBPACK_IMPORTED_MODULE_5__","NEWLINE_LENGTH","BlockBlot","cache","lineIndex","Inline","EmbedBlot","AttributorStore","BLOCK_ATTRIBUTE","hasOwn","toStr","gOPD","getOwnPropertyDescriptor","arr","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","setProperty","configurable","newValue","writable","getProperty","src","copyIsArray","deep","parchment__WEBPACK_IMPORTED_MODULE_0__","&","<",">","\"","'","_break__WEBPACK_IMPORTED_MODULE_1__","_text__WEBPACK_IMPORTED_MODULE_2__","InlineBlot","self","selfIndex","order","otherIndex","compare","quill","Code","CodeBlockContainer","CodeBlock","_blots_block__WEBPACK_IMPORTED_MODULE_0__","_blots_break__WEBPACK_IMPORTED_MODULE_1__","_blots_cursor__WEBPACK_IMPORTED_MODULE_2__","_blots_inline__WEBPACK_IMPORTED_MODULE_3__","_blots_text__WEBPACK_IMPORTED_MODULE_4__","_blots_container__WEBPACK_IMPORTED_MODULE_5__","_core_quill__WEBPACK_IMPORTED_MODULE_6__","Container","innerText","Cursor","TAB","levels","method","console","namespace","newLevel","ContainerBlot","_instanceof","nativeMap","nativeSet","nativePromise","Map","_","Set","Promise","circular","depth","includeNonEnumerable","allParents","allChildren","useBuffer","Buffer","_clone","proto","resolve","reject","then","__isArray","__isRegExp","RegExp","__getRegExpFlags","lastIndex","__isDate","Date","getTime","isBuffer","allocUnsafe","getPrototypeOf","keyChild","valueChild","entryChild","attrs","getOwnPropertySymbols","symbols","symbol","descriptor","allPropertyNames","getOwnPropertyNames","propertyName","__objToStr","re","flags","global","ignoreCase","multiline","clonePrototype","pSlice","objectKeys","isArguments","deepEqual","actual","expected","opts","strict","isUndefinedOrNull","ka","kb","objEquiv","x","_text__WEBPACK_IMPORTED_MODULE_1__","textNode","savedLength","restore","composing","getNativeRange","lastChild","prevTextBlot","prevTextLength","nextTextBlot","nextText","mergedTextBlot","newTextNode","remapOffset","startOffset","endNode","endOffset","mouseDown","rootDocument","savedRange","handleComposition","handleDragging","usePolyfill","setTimeout","native","setNativeRange","ignored","_context$range","nativeRange","collapsed","_this$scroll$leaf2","_leaf$position2","createRange","setStart","_this$scroll$leaf4","_leaf$position4","setEnd","rect","side","normalizeNative","info","normalized","normalizedToRange","activeElement","positions","indexes","_position","startContainer","endContainer","rangeToNative","_this$scroll$leaf6","leafOffset","_leaf$position6","first","last","scrollBounds","addRange","removeAllRanges","_this$getRange2","ColorAttributor","ColorClass","ColorStyle","StyleAttributor","hex","ClassAttributor","DirectionAttribute","DirectionClass","DirectionStyle","Attributor","hasShadow","Element","hasSelection","attachShadow","hasShady","ShadyDOM","inUse","isSafari","test","navigator","userAgent","MSStream","useDocument","validNodeTypes","ELEMENT_NODE","DOCUMENT_FRAGMENT_NODE","findNode","isLeft","childNode","includes","addInternalListener","dispatchEvent","CustomEvent","withinInternals","handlers","ev","fn","wasCaret","resolveTask","containsNextElement","walkForward","walkFromNode","initialSpace","exec","textContent","cachedRange","rangeCount","getRangeAt","thisFrame","result","fakeSelectionNode","includesBeforeRoot","includesAfterRoot","measure","TypeError","leftNode","rightNode","isNaturalDirection","initialSize","collapseToEnd","updatedSize","getSelectionDirection","at","size","offsetLeft","offsetRight","validRightLength","trailingSpaceCount","ignoredTrailingSpace","internalGetShadowSelection","AlignAttribute","AlignClass","AlignStyle","Link","sanitize","_blots_inline__WEBPACK_IMPORTED_MODULE_0__","url","PROTOCOL_WHITELIST","SANITIZED_URL","protocols","anchor","href","protocol","BackgroundClass","BackgroundStyle","_color__WEBPACK_IMPORTED_MODULE_1__","FontStyle","FontClass","SizeClass","SizeStyle","ModuleClass","themes","CLIPBOARD_CONFIG","isPre","preNodes","replacer","collapse","replaced","isLine","matchNewline","deltaEndsWith","applyFormat","ATTRIBUTE_ATTRIBUTORS","STYLE_ATTRIBUTORS","fontStyle","italic","fontWeight","bold","parseFloat","textIndent","composed","_objectSpread","language","table","row","querySelectorAll","matchAlias","Clipboard","onCaptureCopy","onCapturePaste","matchers","_ref2","selector","matcher","addMatcher","_ref3","DOMParser","parseFromString","nodeMatches","_this$prepareMatching2","prepareMatching","elementMatchers","textMatchers","traverse","dangerouslyPasteHTML","paste","isCut","defaultPrevented","preventDefault","_this$onCopy","onCopy","clipboardData","setData","getData","files","upload","onPaste","_ref4","pastedDelta","pair","_pair","newDelta","endText","childrenDelta","reducedDelta","Bold","Scroll","batch","handleDragStart","emitMount","emitUnmount","_this$line2","blotIndex","blotLength","History","lastRecorded","ignoreChange","userOnly","record","addBinding","shortKey","undo","shiftKey","redo","platform","dest","stack","inverseDelta","deleteLength","changeIndex","endsWithNewlineChange","getLastChangeIndex","cutoff","changeDelta","undoDelta","timestamp","now","delay","maxStack","transformStack","remoteDelta","SHORTKEY","Keyboard","evt","binding","which","bindings","handleEnter","metaKey","ctrlKey","altKey","handleBackspace","handleDelete","handleDeleteRange","listen","keyBinding","normalize","singleBinding","matches","_this$quill$getLine2","keyboard_slicedToArray","_this$quill$getLeaf2","leafStart","offsetStart","leafEnd","offsetEnd","prefixText","suffixText","curContext","empty","every","curFormats","prevFormats","formatDelta","nextFormats","firstFormats","lastFormats","lineFormats","makeCodeBlockHandler","code-block","makeEmbedArrowHandler","makeFormatHandler","makeTableArrowHandler","up","cell","targetRow","targetCell","targetLine","underline","outdent","outdent backspace","indent code-block","outdent code-block","remove tab","tab","blockquote empty enter","list empty enter","checklist enter","_this$quill$getLine12","header enter","_this$quill$getLine14","header","table backspace","table delete","table enter","_module$getTable2","getTable","tableSide","table tab","list autofill","blockquote","_this$quill$getLine16","code exit","_this$quill$getLine18","numLines","embed left","embed left shift","embed right","embed right shift","table down","table up","Uploader","caretRangeFromPoint","clientX","clientY","caretPositionFromPoint","offsetNode","dataTransfer","uploads","file","mimetypes","promises","reader","FileReader","onload","readAsDataURL","all","images","image","blots/block","blots/block/embed","blots/break","blots/container","blots/cursor","blots/embed","Embed","blots/inline","blots/scroll","blots/text","modules/clipboard","modules/history","modules/keyboard","modules/uploader","GUARD_TEXT","contentNode","leftGuard","rightGuard","prevLength","Iterator_1","Events","EE","addListener","listener","_events","_eventsCount","clearEvent","__proto__","eventNames","names","ee","listenerCount","a1","a2","a3","a4","a5","len","removeListener","j","removeAllListeners","prefixed","IndentClass","Blockquote","Header","ListItem","_blots_container__WEBPACK_IMPORTED_MODULE_1__","_core_quill__WEBPACK_IMPORTED_MODULE_2__","ListContainer","ui","ownerDocument","listEventHandler","attachUI","_bold__WEBPACK_IMPORTED_MODULE_0__","Italic","Script","Strike","Underline","_link__WEBPACK_IMPORTED_MODULE_1__","ATTRIBUTES","Image","hasAttribute","execCommand","Syntax","quill_delta__WEBPACK_IMPORTED_MODULE_0__","quill_delta__WEBPACK_IMPORTED_MODULE_0___default","parchment__WEBPACK_IMPORTED_MODULE_1__","_blots_inline__WEBPACK_IMPORTED_MODULE_2__","_core_quill__WEBPACK_IMPORTED_MODULE_3__","_core_module__WEBPACK_IMPORTED_MODULE_4__","_blots_block__WEBPACK_IMPORTED_MODULE_5__","_blots_break__WEBPACK_IMPORTED_MODULE_6__","_blots_cursor__WEBPACK_IMPORTED_MODULE_7__","_blots_text__WEBPACK_IMPORTED_MODULE_8__","_formats_code__WEBPACK_IMPORTED_MODULE_9__","_clipboard__WEBPACK_IMPORTED_MODULE_10__","TokenAttributor","CodeToken","SyntaxCodeBlock","SyntaxCodeBlockContainer","forceNext","highlight","forced","cachedText","BreakBlot","hljs","highlightBlot","initListener","initTimer","select","languages","label","option","timer","clearTimeout","interval","nodeText","Toolbar","groups","controls","group","control","addButton","addSelect","addControls","addHandler","selectedIndex","selected","prompt","isActive","clean","direction","align","link","TableCell","tableId","cellOffset","rowOffset","TableRow","thisHead","thisTail","nextHead","nextTail","childFormats","TableBody","TableContainer","balanceCells","rows","maxColumns","fill","cells","column","deleteColumn","insertColumn","insertRow","id","random","Table","listenBalanceCells","balanceTables","_this$getTable2","table_slicedToArray","deleteRow","deleteTable","_this$getTable8","insertColumnLeft","insertColumnRight","_this$getTable10","insertRowAbove","insertRowBelow","insertTable","columns","old","shim","supportsArgumentsClass","supported","unsupported","propertyIsEnumerable","DIFF_DELETE","DIFF_INSERT","DIFF_EQUAL","diff_main","text1","text2","cursor_pos","_fix_unicode","editdiff","oldLength","newLength","oldCursor","oldBefore","oldAfter","maybeNewCursor","newCursor","newBefore","newAfter","prefixLength","oldPrefix","newPrefix","oldMiddle","newMiddle","make_edit_splice","oldSuffix","newSuffix","find_cursor_edit_diff","commonlength","diff_commonPrefix","commonprefix","substring","diff_commonSuffix","commonsuffix","diffs","longtext","shorttext","hm","diff_halfMatchI_","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","floor","best_common","text1_a","text1_b","text2_a","text2_b","hm1","ceil","hm2","mid_common","diff_halfMatch_","diffs_a","diffs_b","text1_length","text2_length","max_d","v_offset","v_length","v1","v2","front","k1start","k1end","k2start","k2end","k1","k1_offset","y1","x1","charAt","k2_offset","x2","diff_bisectSplit_","k2","y2","diff_bisect_","diff_compute_","diff_cleanupMerge","fix_unicode","pointer","count_delete","count_insert","text_delete","text_insert","previous_equality","ends_with_pair_start","stray","k","starts_with_pair_end","changes","y","text1a","text2a","text1b","text2b","diffsb","pointermin","pointermax","pointermid","pointerstart","is_surrogate_pair_start","charCodeAt","pointerend","is_surrogate_pair_end","charCode","str","before","tuples","remove_empty_tuples","keepNull","baseInverted","Iterator","retOp","substr","_core__WEBPACK_IMPORTED_MODULE_0__","_formats_align__WEBPACK_IMPORTED_MODULE_1__","_formats_direction__WEBPACK_IMPORTED_MODULE_2__","_formats_indent__WEBPACK_IMPORTED_MODULE_3__","_formats_blockquote__WEBPACK_IMPORTED_MODULE_4__","_formats_header__WEBPACK_IMPORTED_MODULE_5__","_formats_list__WEBPACK_IMPORTED_MODULE_6__","_formats_background__WEBPACK_IMPORTED_MODULE_7__","_formats_color__WEBPACK_IMPORTED_MODULE_8__","_formats_font__WEBPACK_IMPORTED_MODULE_9__","_formats_size__WEBPACK_IMPORTED_MODULE_10__","_formats_bold__WEBPACK_IMPORTED_MODULE_11__","_formats_italic__WEBPACK_IMPORTED_MODULE_12__","_formats_link__WEBPACK_IMPORTED_MODULE_13__","_formats_script__WEBPACK_IMPORTED_MODULE_14__","_formats_strike__WEBPACK_IMPORTED_MODULE_15__","_formats_underline__WEBPACK_IMPORTED_MODULE_16__","_formats_image__WEBPACK_IMPORTED_MODULE_17__","_formats_code__WEBPACK_IMPORTED_MODULE_18__","_modules_syntax__WEBPACK_IMPORTED_MODULE_19__","_modules_table__WEBPACK_IMPORTED_MODULE_20__","_modules_toolbar__WEBPACK_IMPORTED_MODULE_21__","attributors/attribute/direction","attributors/class/align","attributors/class/background","attributors/class/color","attributors/class/direction","attributors/class/font","attributors/class/size","attributors/style/align","attributors/style/background","attributors/style/color","attributors/style/direction","attributors/style/font","attributors/style/size","formats/align","formats/direction","formats/indent","formats/background","formats/color","formats/font","formats/size","formats/blockquote","formats/code-block","formats/header","formats/list","formats/bold","formats/code","formats/italic","formats/link","formats/script","formats/strike","formats/underline","formats/image","modules/syntax","modules/table","modules/toolbar"],"mappings":"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","file":"vaadin-quill.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Quill\"] = factory();\n\telse\n\t\troot[\"Quill\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 80);\n","import clone from 'clone';\nimport equal from 'deep-equal';\nimport extend from 'extend';\nimport Delta, { AttributeMap } from 'quill-delta';\nimport { LeafBlot } from 'parchment';\nimport { Range } from './selection';\nimport CursorBlot from '../blots/cursor';\nimport Block, { BlockEmbed, bubbleFormats } from '../blots/block';\nimport Break from '../blots/break';\nimport TextBlot, { escapeText } from '../blots/text';\n\nconst ASCII = /^[ -~]*$/;\n\nclass Editor {\n  constructor(scroll) {\n    this.scroll = scroll;\n    this.delta = this.getDelta();\n  }\n\n  applyDelta(delta) {\n    let consumeNextNewline = false;\n    this.scroll.update();\n    let scrollLength = this.scroll.length();\n    this.scroll.batchStart();\n    const normalizedDelta = normalizeDelta(delta);\n    normalizedDelta.reduce((index, op) => {\n      const length = op.retain || op.delete || op.insert.length || 1;\n      let attributes = op.attributes || {};\n      if (op.insert != null) {\n        if (typeof op.insert === 'string') {\n          let text = op.insert;\n          if (text.endsWith('\\n') && consumeNextNewline) {\n            consumeNextNewline = false;\n            text = text.slice(0, -1);\n          }\n          if (\n            (index >= scrollLength ||\n              this.scroll.descendant(BlockEmbed, index)[0]) &&\n            !text.endsWith('\\n')\n          ) {\n            consumeNextNewline = true;\n          }\n          this.scroll.insertAt(index, text);\n          const [line, offset] = this.scroll.line(index);\n          let formats = extend({}, bubbleFormats(line));\n          if (line instanceof Block) {\n            const [leaf] = line.descendant(LeafBlot, offset);\n            formats = extend(formats, bubbleFormats(leaf));\n          }\n          attributes = AttributeMap.diff(formats, attributes) || {};\n        } else if (typeof op.insert === 'object') {\n          const key = Object.keys(op.insert)[0]; // There should only be one key\n          if (key == null) return index;\n          this.scroll.insertAt(index, key, op.insert[key]);\n        }\n        scrollLength += length;\n      }\n      Object.keys(attributes).forEach(name => {\n        this.scroll.formatAt(index, length, name, attributes[name]);\n      });\n      return index + length;\n    }, 0);\n    normalizedDelta.reduce((index, op) => {\n      if (typeof op.delete === 'number') {\n        this.scroll.deleteAt(index, op.delete);\n        return index;\n      }\n      return index + (op.retain || op.insert.length || 1);\n    }, 0);\n    this.scroll.batchEnd();\n    this.scroll.optimize();\n    return this.update(normalizedDelta);\n  }\n\n  deleteText(index, length) {\n    this.scroll.deleteAt(index, length);\n    return this.update(new Delta().retain(index).delete(length));\n  }\n\n  formatLine(index, length, formats = {}) {\n    this.scroll.update();\n    Object.keys(formats).forEach(format => {\n      this.scroll.lines(index, Math.max(length, 1)).forEach(line => {\n        line.format(format, formats[format]);\n      });\n    });\n    this.scroll.optimize();\n    const delta = new Delta().retain(index).retain(length, clone(formats));\n    return this.update(delta);\n  }\n\n  formatText(index, length, formats = {}) {\n    Object.keys(formats).forEach(format => {\n      this.scroll.formatAt(index, length, format, formats[format]);\n    });\n    const delta = new Delta().retain(index).retain(length, clone(formats));\n    return this.update(delta);\n  }\n\n  getContents(index, length) {\n    return this.delta.slice(index, index + length);\n  }\n\n  getDelta() {\n    return this.scroll.lines().reduce((delta, line) => {\n      return delta.concat(line.delta());\n    }, new Delta());\n  }\n\n  getFormat(index, length = 0) {\n    let lines = [];\n    let leaves = [];\n    if (length === 0) {\n      this.scroll.path(index).forEach(path => {\n        const [blot] = path;\n        if (blot instanceof Block) {\n          lines.push(blot);\n        } else if (blot instanceof LeafBlot) {\n          leaves.push(blot);\n        }\n      });\n    } else {\n      lines = this.scroll.lines(index, length);\n      leaves = this.scroll.descendants(LeafBlot, index, length);\n    }\n    const formatsArr = [lines, leaves].map(blots => {\n      if (blots.length === 0) return {};\n      let formats = bubbleFormats(blots.shift());\n      while (Object.keys(formats).length > 0) {\n        const blot = blots.shift();\n        if (blot == null) return formats;\n        formats = combineFormats(bubbleFormats(blot), formats);\n      }\n      return formats;\n    });\n    return extend.apply(extend, formatsArr);\n  }\n\n  getHTML(index, length) {\n    const [line, lineOffset] = this.scroll.line(index);\n    if (line.length() >= lineOffset + length) {\n      return convertHTML(line, lineOffset, length, true);\n    }\n    return convertHTML(this.scroll, index, length, true);\n  }\n\n  getText(index, length) {\n    return this.getContents(index, length)\n      .filter(op => typeof op.insert === 'string')\n      .map(op => op.insert)\n      .join('');\n  }\n\n  insertEmbed(index, embed, value) {\n    this.scroll.insertAt(index, embed, value);\n    return this.update(new Delta().retain(index).insert({ [embed]: value }));\n  }\n\n  insertText(index, text, formats = {}) {\n    text = text.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n    this.scroll.insertAt(index, text);\n    Object.keys(formats).forEach(format => {\n      this.scroll.formatAt(index, text.length, format, formats[format]);\n    });\n    return this.update(new Delta().retain(index).insert(text, clone(formats)));\n  }\n\n  isBlank() {\n    if (this.scroll.children.length === 0) return true;\n    if (this.scroll.children.length > 1) return false;\n    const block = this.scroll.children.head;\n    if (block.statics.blotName !== Block.blotName) return false;\n    if (block.children.length > 1) return false;\n    return block.children.head instanceof Break;\n  }\n\n  removeFormat(index, length) {\n    const text = this.getText(index, length);\n    const [line, offset] = this.scroll.line(index + length);\n    let suffixLength = 0;\n    let suffix = new Delta();\n    if (line != null) {\n      suffixLength = line.length() - offset;\n      suffix = line\n        .delta()\n        .slice(offset, offset + suffixLength - 1)\n        .insert('\\n');\n    }\n    const contents = this.getContents(index, length + suffixLength);\n    const diff = contents.diff(new Delta().insert(text).concat(suffix));\n    const delta = new Delta().retain(index).concat(diff);\n    return this.applyDelta(delta);\n  }\n\n  update(change, mutations = [], selectionInfo = undefined) {\n    const oldDelta = this.delta;\n    if (\n      mutations.length === 1 &&\n      mutations[0].type === 'characterData' &&\n      mutations[0].target.data.match(ASCII) &&\n      this.scroll.find(mutations[0].target)\n    ) {\n      // Optimization for character changes\n      const textBlot = this.scroll.find(mutations[0].target);\n      const formats = bubbleFormats(textBlot);\n      const index = textBlot.offset(this.scroll);\n      const oldValue = mutations[0].oldValue.replace(CursorBlot.CONTENTS, '');\n      const oldText = new Delta().insert(oldValue);\n      const newText = new Delta().insert(textBlot.value());\n      const relativeSelectionInfo = selectionInfo && {\n        oldRange: shiftRange(selectionInfo.oldRange, -index),\n        newRange: shiftRange(selectionInfo.newRange, -index),\n      };\n      const diffDelta = new Delta()\n        .retain(index)\n        .concat(oldText.diff(newText, relativeSelectionInfo));\n      change = diffDelta.reduce((delta, op) => {\n        if (op.insert) {\n          return delta.insert(op.insert, formats);\n        }\n        return delta.push(op);\n      }, new Delta());\n      this.delta = oldDelta.compose(change);\n    } else {\n      this.delta = this.getDelta();\n      if (!change || !equal(oldDelta.compose(change), this.delta)) {\n        change = oldDelta.diff(this.delta, selectionInfo);\n      }\n    }\n    return change;\n  }\n}\n\nfunction convertListHTML(items, lastIndent, types) {\n  if (items.length === 0) {\n    const [endTag] = getListType(types.pop());\n    if (lastIndent <= 0) {\n      return `</li></${endTag}>`;\n    }\n    return `</li></${endTag}>${convertListHTML([], lastIndent - 1, types)}`;\n  }\n  const [{ child, offset, length, indent, type }, ...rest] = items;\n  const [tag, attribute] = getListType(type);\n  if (indent > lastIndent) {\n    types.push(type);\n    if (indent === lastIndent + 1) {\n      return `<${tag}><li${attribute}>${convertHTML(\n        child,\n        offset,\n        length,\n      )}${convertListHTML(rest, indent, types)}`;\n    }\n    return `<${tag}><li>${convertListHTML(items, lastIndent + 1, types)}`;\n  }\n  const previousType = types[types.length - 1];\n  if (indent === lastIndent && type === previousType) {\n    return `</li><li${attribute}>${convertHTML(\n      child,\n      offset,\n      length,\n    )}${convertListHTML(rest, indent, types)}`;\n  }\n  const [endTag] = getListType(types.pop());\n  return `</li></${endTag}>${convertListHTML(items, lastIndent - 1, types)}`;\n}\n\nfunction convertHTML(blot, index, length, isRoot = false) {\n  if (typeof blot.html === 'function') {\n    return blot.html(index, length);\n  }\n  if (blot instanceof TextBlot) {\n    return escapeText(blot.value().slice(index, index + length));\n  }\n  if (blot.children) {\n    // TODO fix API\n    if (blot.statics.blotName === 'list-container') {\n      const items = [];\n      blot.children.forEachAt(index, length, (child, offset, childLength) => {\n        const formats = child.formats();\n        items.push({\n          child,\n          offset,\n          length: childLength,\n          indent: formats.indent || 0,\n          type: formats.list,\n        });\n      });\n      return convertListHTML(items, -1, []);\n    }\n    const parts = [];\n    blot.children.forEachAt(index, length, (child, offset, childLength) => {\n      parts.push(convertHTML(child, offset, childLength));\n    });\n    if (isRoot || blot.statics.blotName === 'list') {\n      return parts.join('');\n    }\n    const { outerHTML, innerHTML } = blot.domNode;\n    const [start, end] = outerHTML.split(`>${innerHTML}<`);\n    // TODO cleanup\n    if (start === '<table') {\n      return `<table style=\"border: 1px solid #000;\">${parts.join('')}<${end}`;\n    }\n    return `${start}>${parts.join('')}<${end}`;\n  }\n  return blot.domNode.outerHTML;\n}\n\nfunction combineFormats(formats, combined) {\n  return Object.keys(combined).reduce((merged, name) => {\n    if (formats[name] == null) return merged;\n    if (combined[name] === formats[name]) {\n      merged[name] = combined[name];\n    } else if (Array.isArray(combined[name])) {\n      if (combined[name].indexOf(formats[name]) < 0) {\n        merged[name] = combined[name].concat([formats[name]]);\n      }\n    } else {\n      merged[name] = [combined[name], formats[name]];\n    }\n    return merged;\n  }, {});\n}\n\nfunction getListType(type) {\n  const tag = type === 'ordered' ? 'ol' : 'ul';\n  switch (type) {\n    case 'checked':\n      return [tag, ' data-list=\"checked\"'];\n    case 'unchecked':\n      return [tag, ' data-list=\"unchecked\"'];\n    default:\n      return [tag, ''];\n  }\n}\n\nfunction normalizeDelta(delta) {\n  return delta.reduce((normalizedDelta, op) => {\n    if (typeof op.insert === 'string') {\n      const text = op.insert.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n      return normalizedDelta.insert(text, op.attributes);\n    }\n    return normalizedDelta.push(op);\n  }, new Delta());\n}\n\nfunction shiftRange({ index, length }, amount) {\n  return new Range(index + amount, length);\n}\n\nexport default Editor;\n","import Delta from 'quill-delta';\nimport * as Parchment from 'parchment';\nimport extend from 'extend';\nimport Editor from './editor';\nimport Emitter from './emitter';\nimport Module from './module';\nimport Selection, { Range } from './selection';\nimport instances from './instances';\nimport logger from './logger';\nimport Theme from './theme';\n\nconst debug = logger('quill');\n\nconst globalRegistry = new Parchment.Registry();\nParchment.ParentBlot.uiClass = 'ql-ui';\n\nclass Quill {\n  static debug(limit) {\n    if (limit === true) {\n      limit = 'log';\n    }\n    logger.level(limit);\n  }\n\n  static find(node) {\n    return instances.get(node) || globalRegistry.find(node);\n  }\n\n  static import(name) {\n    if (this.imports[name] == null) {\n      debug.error(`Cannot import ${name}. Are you sure it was registered?`);\n    }\n    return this.imports[name];\n  }\n\n  static register(path, target, overwrite = false) {\n    if (typeof path !== 'string') {\n      const name = path.attrName || path.blotName;\n      if (typeof name === 'string') {\n        // register(Blot | Attributor, overwrite)\n        this.register(`formats/${name}`, path, target);\n      } else {\n        Object.keys(path).forEach(key => {\n          this.register(key, path[key], target);\n        });\n      }\n    } else {\n      if (this.imports[path] != null && !overwrite) {\n        debug.warn(`Overwriting ${path} with`, target);\n      }\n      this.imports[path] = target;\n      if (\n        (path.startsWith('blots/') || path.startsWith('formats/')) &&\n        target.blotName !== 'abstract'\n      ) {\n        globalRegistry.register(target);\n      }\n      if (typeof target.register === 'function') {\n        target.register(globalRegistry);\n      }\n    }\n  }\n\n  constructor(container, options = {}) {\n    this.options = expandConfig(container, options);\n    this.container = this.options.container;\n    if (this.container == null) {\n      return debug.error('Invalid Quill container', container);\n    }\n    if (this.options.debug) {\n      Quill.debug(this.options.debug);\n    }\n    const html = this.container.innerHTML.trim();\n    this.container.classList.add('ql-container');\n    this.container.innerHTML = '';\n    instances.set(this.container, this);\n    this.root = this.addContainer('ql-editor');\n    this.root.classList.add('ql-blank');\n    this.root.setAttribute('data-gramm', false);\n    this.scrollingContainer = this.options.scrollingContainer || this.root;\n    this.emitter = new Emitter();\n    const ScrollBlot = this.options.registry.query(\n      Parchment.ScrollBlot.blotName,\n    );\n    this.scroll = new ScrollBlot(this.options.registry, this.root, {\n      emitter: this.emitter,\n    });\n    this.editor = new Editor(this.scroll);\n    this.selection = new Selection(this.scroll, this.emitter);\n    this.theme = new this.options.theme(this, this.options); // eslint-disable-line new-cap\n    this.keyboard = this.theme.addModule('keyboard');\n    this.clipboard = this.theme.addModule('clipboard');\n    this.history = this.theme.addModule('history');\n    this.uploader = this.theme.addModule('uploader');\n    this.theme.init();\n    this.emitter.on(Emitter.events.EDITOR_CHANGE, type => {\n      if (type === Emitter.events.TEXT_CHANGE) {\n        this.root.classList.toggle('ql-blank', this.editor.isBlank());\n      }\n    });\n    this.emitter.on(Emitter.events.SCROLL_UPDATE, (source, mutations) => {\n      const oldRange = this.selection.lastRange;\n      const [newRange] = this.selection.getRange();\n      const selectionInfo =\n        oldRange && newRange ? { oldRange, newRange } : undefined;\n      modify.call(\n        this,\n        () => this.editor.update(null, mutations, selectionInfo),\n        source,\n      );\n    });\n    const contents = this.clipboard.convert({\n      html: `${html}<p><br></p>`,\n      text: '\\n',\n    });\n    this.setContents(contents);\n    this.history.clear();\n    if (this.options.placeholder) {\n      this.root.setAttribute('data-placeholder', this.options.placeholder);\n    }\n    if (this.options.readOnly) {\n      this.disable();\n    }\n    this.allowReadOnlyEdits = false;\n  }\n\n  addContainer(container, refNode = null) {\n    if (typeof container === 'string') {\n      const className = container;\n      container = document.createElement('div');\n      container.classList.add(className);\n    }\n    this.container.insertBefore(container, refNode);\n    return container;\n  }\n\n  blur() {\n    this.selection.setRange(null);\n  }\n\n  deleteText(index, length, source) {\n    [index, length, , source] = overload(index, length, source);\n    return modify.call(\n      this,\n      () => {\n        return this.editor.deleteText(index, length);\n      },\n      source,\n      index,\n      -1 * length,\n    );\n  }\n\n  disable() {\n    this.enable(false);\n  }\n\n  editReadOnly(modifier) {\n    this.allowReadOnlyEdits = true;\n    const value = modifier();\n    this.allowReadOnlyEdits = false;\n    return value;\n  }\n\n  enable(enabled = true) {\n    this.scroll.enable(enabled);\n    this.container.classList.toggle('ql-disabled', !enabled);\n  }\n\n  focus() {\n    const { scrollTop } = this.scrollingContainer;\n    this.selection.focus();\n    this.scrollingContainer.scrollTop = scrollTop;\n    this.scrollIntoView();\n  }\n\n  format(name, value, source = Emitter.sources.API) {\n    return modify.call(\n      this,\n      () => {\n        const range = this.getSelection(true);\n        let change = new Delta();\n        if (range == null) return change;\n        if (this.scroll.query(name, Parchment.Scope.BLOCK)) {\n          change = this.editor.formatLine(range.index, range.length, {\n            [name]: value,\n          });\n        } else if (range.length === 0) {\n          this.selection.format(name, value);\n          return change;\n        } else {\n          change = this.editor.formatText(range.index, range.length, {\n            [name]: value,\n          });\n        }\n        this.setSelection(range, Emitter.sources.SILENT);\n        return change;\n      },\n      source,\n    );\n  }\n\n  formatLine(index, length, name, value, source) {\n    let formats;\n    // eslint-disable-next-line prefer-const\n    [index, length, formats, source] = overload(\n      index,\n      length,\n      name,\n      value,\n      source,\n    );\n    return modify.call(\n      this,\n      () => {\n        return this.editor.formatLine(index, length, formats);\n      },\n      source,\n      index,\n      0,\n    );\n  }\n\n  formatText(index, length, name, value, source) {\n    let formats;\n    // eslint-disable-next-line prefer-const\n    [index, length, formats, source] = overload(\n      index,\n      length,\n      name,\n      value,\n      source,\n    );\n    return modify.call(\n      this,\n      () => {\n        return this.editor.formatText(index, length, formats);\n      },\n      source,\n      index,\n      0,\n    );\n  }\n\n  getBounds(index, length = 0) {\n    let bounds;\n    if (typeof index === 'number') {\n      bounds = this.selection.getBounds(index, length);\n    } else {\n      bounds = this.selection.getBounds(index.index, index.length);\n    }\n    const containerBounds = this.container.getBoundingClientRect();\n    return {\n      bottom: bounds.bottom - containerBounds.top,\n      height: bounds.height,\n      left: bounds.left - containerBounds.left,\n      right: bounds.right - containerBounds.left,\n      top: bounds.top - containerBounds.top,\n      width: bounds.width,\n    };\n  }\n\n  getContents(index = 0, length = this.getLength() - index) {\n    [index, length] = overload(index, length);\n    return this.editor.getContents(index, length);\n  }\n\n  getFormat(index = this.getSelection(true), length = 0) {\n    if (typeof index === 'number') {\n      return this.editor.getFormat(index, length);\n    }\n    return this.editor.getFormat(index.index, index.length);\n  }\n\n  getIndex(blot) {\n    return blot.offset(this.scroll);\n  }\n\n  getLength() {\n    return this.scroll.length();\n  }\n\n  getLeaf(index) {\n    return this.scroll.leaf(index);\n  }\n\n  getLine(index) {\n    return this.scroll.line(index);\n  }\n\n  getLines(index = 0, length = Number.MAX_VALUE) {\n    if (typeof index !== 'number') {\n      return this.scroll.lines(index.index, index.length);\n    }\n    return this.scroll.lines(index, length);\n  }\n\n  getModule(name) {\n    return this.theme.modules[name];\n  }\n\n  getSelection(focus = false) {\n    if (focus) this.focus();\n    this.update(); // Make sure we access getRange with editor in consistent state\n    return this.selection.getRange()[0];\n  }\n\n  getSemanticHTML(index = 0, length = this.getLength() - index) {\n    [index, length] = overload(index, length);\n    return this.editor.getHTML(index, length);\n  }\n\n  getText(index = 0, length = this.getLength() - index) {\n    [index, length] = overload(index, length);\n    return this.editor.getText(index, length);\n  }\n\n  hasFocus() {\n    return this.selection.hasFocus();\n  }\n\n  insertEmbed(index, embed, value, source = Quill.sources.API) {\n    return modify.call(\n      this,\n      () => {\n        return this.editor.insertEmbed(index, embed, value);\n      },\n      source,\n      index,\n    );\n  }\n\n  insertText(index, text, name, value, source) {\n    let formats;\n    // eslint-disable-next-line prefer-const\n    [index, , formats, source] = overload(index, 0, name, value, source);\n    return modify.call(\n      this,\n      () => {\n        return this.editor.insertText(index, text, formats);\n      },\n      source,\n      index,\n      text.length,\n    );\n  }\n\n  isEnabled() {\n    return this.scroll.isEnabled();\n  }\n\n  off(...args) {\n    return this.emitter.off(...args);\n  }\n\n  on(...args) {\n    return this.emitter.on(...args);\n  }\n\n  once(...args) {\n    return this.emitter.once(...args);\n  }\n\n  removeFormat(index, length, source) {\n    [index, length, , source] = overload(index, length, source);\n    return modify.call(\n      this,\n      () => {\n        return this.editor.removeFormat(index, length);\n      },\n      source,\n      index,\n    );\n  }\n\n  scrollIntoView() {\n    this.selection.scrollIntoView(this.scrollingContainer);\n  }\n\n  setContents(delta, source = Emitter.sources.API) {\n    return modify.call(\n      this,\n      () => {\n        delta = new Delta(delta);\n        const length = this.getLength();\n        const deleted = this.editor.deleteText(0, length);\n        const applied = this.editor.applyDelta(delta);\n        const lastOp = applied.ops[applied.ops.length - 1];\n        if (\n          lastOp != null &&\n          typeof lastOp.insert === 'string' &&\n          lastOp.insert[lastOp.insert.length - 1] === '\\n'\n        ) {\n          this.editor.deleteText(this.getLength() - 1, 1);\n          applied.delete(1);\n        }\n        return deleted.compose(applied);\n      },\n      source,\n    );\n  }\n\n  setSelection(index, length, source) {\n    if (index == null) {\n      this.selection.setRange(null, length || Quill.sources.API);\n    } else {\n      [index, length, , source] = overload(index, length, source);\n      this.selection.setRange(new Range(Math.max(0, index), length), source);\n      if (source !== Emitter.sources.SILENT) {\n        this.selection.scrollIntoView(this.scrollingContainer);\n      }\n    }\n  }\n\n  setText(text, source = Emitter.sources.API) {\n    const delta = new Delta().insert(text);\n    return this.setContents(delta, source);\n  }\n\n  update(source = Emitter.sources.USER) {\n    const change = this.scroll.update(source); // Will update selection before selection.update() does if text changes\n    this.selection.update(source);\n    // TODO this is usually undefined\n    return change;\n  }\n\n  updateContents(delta, source = Emitter.sources.API) {\n    return modify.call(\n      this,\n      () => {\n        delta = new Delta(delta);\n        return this.editor.applyDelta(delta, source);\n      },\n      source,\n      true,\n    );\n  }\n}\nQuill.DEFAULTS = {\n  bounds: null,\n  modules: {},\n  placeholder: '',\n  readOnly: false,\n  registry: globalRegistry,\n  scrollingContainer: null,\n  theme: 'default',\n};\nQuill.events = Emitter.events;\nQuill.sources = Emitter.sources;\n// eslint-disable-next-line no-undef\nQuill.version = typeof QUILL_VERSION === 'undefined' ? 'dev' : QUILL_VERSION;\n\nQuill.imports = {\n  delta: Delta,\n  parchment: Parchment,\n  'core/module': Module,\n  'core/theme': Theme,\n};\n\nfunction expandConfig(container, userConfig) {\n  userConfig = extend(\n    true,\n    {\n      container,\n      modules: {\n        clipboard: true,\n        keyboard: true,\n        history: true,\n        uploader: true,\n      },\n    },\n    userConfig,\n  );\n  if (!userConfig.theme || userConfig.theme === Quill.DEFAULTS.theme) {\n    userConfig.theme = Theme;\n  } else {\n    userConfig.theme = Quill.import(`themes/${userConfig.theme}`);\n    if (userConfig.theme == null) {\n      throw new Error(\n        `Invalid theme ${userConfig.theme}. Did you register it?`,\n      );\n    }\n  }\n  const themeConfig = extend(true, {}, userConfig.theme.DEFAULTS);\n  [themeConfig, userConfig].forEach(config => {\n    config.modules = config.modules || {};\n    Object.keys(config.modules).forEach(module => {\n      if (config.modules[module] === true) {\n        config.modules[module] = {};\n      }\n    });\n  });\n  const moduleNames = Object.keys(themeConfig.modules).concat(\n    Object.keys(userConfig.modules),\n  );\n  const moduleConfig = moduleNames.reduce((config, name) => {\n    const moduleClass = Quill.import(`modules/${name}`);\n    if (moduleClass == null) {\n      debug.error(\n        `Cannot load ${name} module. Are you sure you registered it?`,\n      );\n    } else {\n      config[name] = moduleClass.DEFAULTS || {};\n    }\n    return config;\n  }, {});\n  // Special case toolbar shorthand\n  if (\n    userConfig.modules != null &&\n    userConfig.modules.toolbar &&\n    userConfig.modules.toolbar.constructor !== Object\n  ) {\n    userConfig.modules.toolbar = {\n      container: userConfig.modules.toolbar,\n    };\n  }\n  userConfig = extend(\n    true,\n    {},\n    Quill.DEFAULTS,\n    { modules: moduleConfig },\n    themeConfig,\n    userConfig,\n  );\n  ['bounds', 'container', 'scrollingContainer'].forEach(key => {\n    if (typeof userConfig[key] === 'string') {\n      userConfig[key] = document.querySelector(userConfig[key]);\n    }\n  });\n  userConfig.modules = Object.keys(userConfig.modules).reduce(\n    (config, name) => {\n      if (userConfig.modules[name]) {\n        config[name] = userConfig.modules[name];\n      }\n      return config;\n    },\n    {},\n  );\n  return userConfig;\n}\n\n// Handle selection preservation and TEXT_CHANGE emission\n// common to modification APIs\nfunction modify(modifier, source, index, shift) {\n  if (\n    !this.isEnabled() &&\n    source === Emitter.sources.USER &&\n    !this.allowReadOnlyEdits\n  ) {\n    return new Delta();\n  }\n  let range = index == null ? null : this.getSelection();\n  const oldDelta = this.editor.delta;\n  const change = modifier();\n  if (range != null) {\n    if (index === true) {\n      index = range.index; // eslint-disable-line prefer-destructuring\n    }\n    if (shift == null) {\n      range = shiftRange(range, change, source);\n    } else if (shift !== 0) {\n      range = shiftRange(range, index, shift, source);\n    }\n    this.setSelection(range, Emitter.sources.SILENT);\n  }\n  if (change.length() > 0) {\n    const args = [Emitter.events.TEXT_CHANGE, change, oldDelta, source];\n    this.emitter.emit(Emitter.events.EDITOR_CHANGE, ...args);\n    if (source !== Emitter.sources.SILENT) {\n      this.emitter.emit(...args);\n    }\n  }\n  return change;\n}\n\nfunction overload(index, length, name, value, source) {\n  let formats = {};\n  if (typeof index.index === 'number' && typeof index.length === 'number') {\n    // Allow for throwaway end (used by insertText/insertEmbed)\n    if (typeof length !== 'number') {\n      source = value;\n      value = name;\n      name = length;\n      length = index.length; // eslint-disable-line prefer-destructuring\n      index = index.index; // eslint-disable-line prefer-destructuring\n    } else {\n      length = index.length; // eslint-disable-line prefer-destructuring\n      index = index.index; // eslint-disable-line prefer-destructuring\n    }\n  } else if (typeof length !== 'number') {\n    source = value;\n    value = name;\n    name = length;\n    length = 0;\n  }\n  // Handle format being object, two format name/value strings or excluded\n  if (typeof name === 'object') {\n    formats = name;\n    source = value;\n  } else if (typeof name === 'string') {\n    if (value != null) {\n      formats[name] = value;\n    } else {\n      source = name;\n    }\n  }\n  // Handle optional source\n  source = source || Emitter.sources.API;\n  return [index, length, formats, source];\n}\n\nfunction shiftRange(range, index, length, source) {\n  if (range == null) return null;\n  let start;\n  let end;\n  if (index instanceof Delta) {\n    [start, end] = [range.index, range.index + range.length].map(pos =>\n      index.transformPosition(pos, source !== Emitter.sources.USER),\n    );\n  } else {\n    [start, end] = [range.index, range.index + range.length].map(pos => {\n      if (pos < index || (pos === index && source === Emitter.sources.USER))\n        return pos;\n      if (length >= 0) {\n        return pos + length;\n      }\n      return Math.max(index, pos + length);\n    });\n  }\n  return new Range(start, end - start);\n}\n\nexport { globalRegistry, expandConfig, overload, Quill as default };\n","enum Scope {\n  TYPE = (1 << 2) - 1, // 0011 Lower two bits\n  LEVEL = ((1 << 2) - 1) << 2, // 1100 Higher two bits\n\n  ATTRIBUTE = (1 << 0) | LEVEL, // 1101\n  BLOT = (1 << 1) | LEVEL, // 1110\n  INLINE = (1 << 2) | TYPE, // 0111\n  BLOCK = (1 << 3) | TYPE, // 1011\n\n  BLOCK_BLOT = BLOCK & BLOT, // 1010\n  INLINE_BLOT = INLINE & BLOT, // 0110\n  BLOCK_ATTRIBUTE = BLOCK & ATTRIBUTE, // 1001\n  INLINE_ATTRIBUTE = INLINE & ATTRIBUTE, // 0101\n\n  ANY = TYPE | LEVEL,\n}\n\nexport default Scope;\n","import LinkedNode from './linked-node';\n\nclass LinkedList<T extends LinkedNode> {\n  public head: T | null;\n  public tail: T | null;\n  public length: number;\n\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  public append(...nodes: T[]): void {\n    this.insertBefore(nodes[0], null);\n    if (nodes.length > 1) {\n      this.append.apply(this, nodes.slice(1));\n    }\n  }\n\n  public at(index: number): T | null {\n    const next = this.iterator();\n    let cur = next();\n    while (cur && index > 0) {\n      index -= 1;\n      cur = next();\n    }\n    return cur;\n  }\n\n  public contains(node: T): boolean {\n    const next = this.iterator();\n    let cur = next();\n    while (cur) {\n      if (cur === node) {\n        return true;\n      }\n      cur = next();\n    }\n    return false;\n  }\n\n  public indexOf(node: T): number {\n    const next = this.iterator();\n    let cur = next();\n    let index = 0;\n    while (cur) {\n      if (cur === node) {\n        return index;\n      }\n      index += 1;\n      cur = next();\n    }\n    return -1;\n  }\n\n  public insertBefore(node: T | null, refNode: T | null): void {\n    if (node == null) {\n      return;\n    }\n    this.remove(node);\n    node.next = refNode;\n    if (refNode != null) {\n      node.prev = refNode.prev;\n      if (refNode.prev != null) {\n        refNode.prev.next = node;\n      }\n      refNode.prev = node;\n      if (refNode === this.head) {\n        this.head = node;\n      }\n    } else if (this.tail != null) {\n      this.tail.next = node;\n      node.prev = this.tail;\n      this.tail = node;\n    } else {\n      node.prev = null;\n      this.head = this.tail = node;\n    }\n    this.length += 1;\n  }\n\n  public offset(target: T): number {\n    let index = 0;\n    let cur = this.head;\n    while (cur != null) {\n      if (cur === target) {\n        return index;\n      }\n      index += cur.length();\n      cur = cur.next as T;\n    }\n    return -1;\n  }\n\n  public remove(node: T): void {\n    if (!this.contains(node)) {\n      return;\n    }\n    if (node.prev != null) {\n      node.prev.next = node.next;\n    }\n    if (node.next != null) {\n      node.next.prev = node.prev;\n    }\n    if (node === this.head) {\n      this.head = node.next as T;\n    }\n    if (node === this.tail) {\n      this.tail = node.prev as T;\n    }\n    this.length -= 1;\n  }\n\n  public iterator(curNode: T | null = this.head): () => T | null {\n    // TODO use yield when we can\n    return (): T | null => {\n      const ret = curNode;\n      if (curNode != null) {\n        curNode = curNode.next as T;\n      }\n      return ret;\n    };\n  }\n\n  public find(index: number, inclusive: boolean = false): [T | null, number] {\n    const next = this.iterator();\n    let cur = next();\n    while (cur) {\n      const length = cur.length();\n      if (\n        index < length ||\n        (inclusive &&\n          index === length &&\n          (cur.next == null || cur.next.length() !== 0))\n      ) {\n        return [cur, index];\n      }\n      index -= length;\n      cur = next();\n    }\n    return [null, 0];\n  }\n\n  public forEach(callback: (cur: T) => void): void {\n    const next = this.iterator();\n    let cur = next();\n    while (cur) {\n      callback(cur);\n      cur = next();\n    }\n  }\n\n  public forEachAt(\n    index: number,\n    length: number,\n    callback: (cur: T, offset: number, length: number) => void,\n  ): void {\n    if (length <= 0) {\n      return;\n    }\n    const [startNode, offset] = this.find(index);\n    let curIndex = index - offset;\n    const next = this.iterator(startNode);\n    let cur = next();\n    while (cur && curIndex < index + length) {\n      const curLength = cur.length();\n      if (index > curIndex) {\n        callback(\n          cur,\n          index - curIndex,\n          Math.min(length, curIndex + curLength - index),\n        );\n      } else {\n        callback(cur, 0, Math.min(curLength, index + length - curIndex));\n      }\n      curIndex += curLength;\n      cur = next();\n    }\n  }\n\n  public map(callback: (cur: T) => any): any[] {\n    return this.reduce((memo: T[], cur: T) => {\n      memo.push(callback(cur));\n      return memo;\n    }, []);\n  }\n\n  public reduce<M>(callback: (memo: M, cur: T) => M, memo: M): M {\n    const next = this.iterator();\n    let cur = next();\n    while (cur) {\n      memo = callback(memo, cur);\n      cur = next();\n    }\n    return memo;\n  }\n}\n\nexport default LinkedList;\n","export default class ParchmentError extends Error {\n  public message: string;\n  public name: string;\n  public stack!: string;\n\n  constructor(message: string) {\n    message = '[Parchment] ' + message;\n    super(message);\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n}\n","import Attributor from './attributor/attributor';\nimport { Blot, BlotConstructor, Root } from './blot/abstract/blot';\nimport ParchmentError from './error';\nimport Scope from './scope';\n\nexport interface RegistryInterface {\n  create(sroll: Root, input: Node | string | Scope, value?: any): Blot;\n  query(\n    query: string | Node | Scope,\n    scope: Scope,\n  ): Attributor | BlotConstructor | null;\n  register(...definitions: any[]): any;\n}\n\nexport default class Registry implements RegistryInterface {\n  public static blots = new WeakMap<Node, Blot>();\n\n  public static find(node: Node | null, bubble: boolean = false): Blot | null {\n    if (node == null) {\n      return null;\n    }\n    if (this.blots.has(node)) {\n      return this.blots.get(node) || null;\n    }\n    if (bubble) {\n      return this.find(node.parentNode, bubble);\n    }\n    return null;\n  }\n\n  private attributes: { [key: string]: Attributor } = {};\n  private classes: { [key: string]: BlotConstructor } = {};\n  private tags: { [key: string]: BlotConstructor } = {};\n  private types: { [key: string]: Attributor | BlotConstructor } = {};\n\n  public create(scroll: Root, input: Node | string | Scope, value?: any): Blot {\n    const match = this.query(input);\n    if (match == null) {\n      throw new ParchmentError(`Unable to create ${input} blot`);\n    }\n    const blotClass = match as BlotConstructor;\n    const node =\n      // @ts-ignore\n      input instanceof Node || input.nodeType === Node.TEXT_NODE\n        ? input\n        : blotClass.create(value);\n\n    const blot = new blotClass(scroll, node as Node, value);\n    Registry.blots.set(blot.domNode, blot);\n    return blot;\n  }\n\n  public find(node: Node | null, bubble: boolean = false): Blot | null {\n    return Registry.find(node, bubble);\n  }\n\n  public query(\n    query: string | Node | Scope,\n    scope: Scope = Scope.ANY,\n  ): Attributor | BlotConstructor | null {\n    let match;\n    if (typeof query === 'string') {\n      match = this.types[query] || this.attributes[query];\n      // @ts-ignore\n    } else if (query instanceof Text || query.nodeType === Node.TEXT_NODE) {\n      match = this.types.text;\n    } else if (typeof query === 'number') {\n      if (query & Scope.LEVEL & Scope.BLOCK) {\n        match = this.types.block;\n      } else if (query & Scope.LEVEL & Scope.INLINE) {\n        match = this.types.inline;\n      }\n    } else if (query instanceof HTMLElement) {\n      const names = (query.getAttribute('class') || '').split(/\\s+/);\n      names.some(name => {\n        match = this.classes[name];\n        if (match) {\n          return true;\n        }\n        return false;\n      });\n      match = match || this.tags[query.tagName];\n    }\n    if (match == null) {\n      return null;\n    }\n    // @ts-ignore\n    if (scope & Scope.LEVEL & match.scope && scope & Scope.TYPE & match.scope) {\n      return match;\n    }\n    return null;\n  }\n\n  public register(...definitions: any[]): any {\n    if (definitions.length > 1) {\n      return definitions.map(d => {\n        return this.register(d);\n      });\n    }\n    const definition = definitions[0];\n    if (\n      typeof definition.blotName !== 'string' &&\n      typeof definition.attrName !== 'string'\n    ) {\n      throw new ParchmentError('Invalid definition');\n    } else if (definition.blotName === 'abstract') {\n      throw new ParchmentError('Cannot register abstract class');\n    }\n    this.types[definition.blotName || definition.attrName] = definition;\n    if (typeof definition.keyName === 'string') {\n      this.attributes[definition.keyName] = definition;\n    } else {\n      if (definition.className != null) {\n        this.classes[definition.className] = definition;\n      }\n      if (definition.tagName != null) {\n        if (Array.isArray(definition.tagName)) {\n          definition.tagName = definition.tagName.map((tagName: string) => {\n            return tagName.toUpperCase();\n          });\n        } else {\n          definition.tagName = definition.tagName.toUpperCase();\n        }\n        const tagNames = Array.isArray(definition.tagName)\n          ? definition.tagName\n          : [definition.tagName];\n        tagNames.forEach((tag: string) => {\n          if (this.tags[tag] == null || definition.className == null) {\n            this.tags[tag] = definition;\n          }\n        });\n      }\n    }\n    return definition;\n  }\n}\n","import ParchmentError from '../../error';\nimport Registry from '../../registry';\nimport Scope from '../../scope';\nimport { Blot, BlotConstructor, Formattable, Parent, Root } from './blot';\n\nclass ShadowBlot implements Blot {\n  public static blotName = 'abstract';\n  public static className: string;\n  public static requiredContainer: BlotConstructor;\n  public static scope: Scope;\n  public static tagName: string;\n\n  public static create(value: any): Node {\n    if (this.tagName == null) {\n      throw new ParchmentError('Blot definition missing tagName');\n    }\n    let node;\n    if (Array.isArray(this.tagName)) {\n      if (typeof value === 'string') {\n        value = value.toUpperCase();\n        if (parseInt(value, 10).toString() === value) {\n          value = parseInt(value, 10);\n        }\n      }\n      if (typeof value === 'number') {\n        node = document.createElement(this.tagName[value - 1]);\n      } else if (this.tagName.indexOf(value) > -1) {\n        node = document.createElement(value);\n      } else {\n        node = document.createElement(this.tagName[0]);\n      }\n    } else {\n      node = document.createElement(this.tagName);\n    }\n    if (this.className) {\n      node.classList.add(this.className);\n    }\n    return node;\n  }\n\n  public prev: Blot | null;\n  public next: Blot | null;\n  // @ts-ignore\n  public parent: Parent;\n\n  // Hack for accessing inherited static methods\n  get statics(): any {\n    return this.constructor;\n  }\n  constructor(public scroll: Root, public domNode: Node) {\n    Registry.blots.set(domNode, this);\n    this.prev = null;\n    this.next = null;\n  }\n\n  public attach(): void {\n    // Nothing to do\n  }\n\n  public clone(): Blot {\n    const domNode = this.domNode.cloneNode(false);\n    return this.scroll.create(domNode);\n  }\n\n  public detach() {\n    if (this.parent != null) {\n      this.parent.removeChild(this);\n    }\n    Registry.blots.delete(this.domNode);\n  }\n\n  public deleteAt(index: number, length: number): void {\n    const blot = this.isolate(index, length);\n    blot.remove();\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    const blot = this.isolate(index, length);\n    if (this.scroll.query(name, Scope.BLOT) != null && value) {\n      blot.wrap(name, value);\n    } else if (this.scroll.query(name, Scope.ATTRIBUTE) != null) {\n      const parent = this.scroll.create(this.statics.scope) as Parent &\n        Formattable;\n      blot.wrap(parent);\n      parent.format(name, value);\n    }\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    const blot =\n      def == null\n        ? this.scroll.create('text', value)\n        : this.scroll.create(value, def);\n    const ref = this.split(index);\n    this.parent.insertBefore(blot, ref || undefined);\n  }\n\n  public isolate(index: number, length: number): Blot {\n    const target = this.split(index);\n    if (target == null) {\n      throw new Error('Attempt to isolate at end');\n    }\n    target.split(length);\n    return target;\n  }\n\n  public length(): number {\n    return 1;\n  }\n\n  public offset(root: Blot = this.parent): number {\n    if (this.parent == null || this === root) {\n      return 0;\n    }\n    return this.parent.children.offset(this) + this.parent.offset(root);\n  }\n\n  public optimize(_context: { [key: string]: any }): void {\n    if (\n      this.statics.requiredContainer &&\n      !(this.parent instanceof this.statics.requiredContainer)\n    ) {\n      this.wrap(this.statics.requiredContainer.blotName);\n    }\n  }\n\n  public remove(): void {\n    if (this.domNode.parentNode != null) {\n      this.domNode.parentNode.removeChild(this.domNode);\n    }\n    this.detach();\n  }\n\n  public replaceWith(name: string | Blot, value?: any): Blot {\n    const replacement =\n      typeof name === 'string' ? this.scroll.create(name, value) : name;\n    if (this.parent != null) {\n      this.parent.insertBefore(replacement, this.next || undefined);\n      this.remove();\n    }\n    return replacement;\n  }\n\n  public split(index: number, _force?: boolean): Blot | null {\n    return index === 0 ? this : this.next;\n  }\n\n  public update(\n    _mutations: MutationRecord[],\n    _context: { [key: string]: any },\n  ): void {\n    // Nothing to do by default\n  }\n\n  public wrap(name: string | Parent, value?: any): Parent {\n    const wrapper =\n      typeof name === 'string'\n        ? (this.scroll.create(name, value) as Parent)\n        : name;\n    if (this.parent != null) {\n      this.parent.insertBefore(wrapper, this.next || undefined);\n    }\n    if (typeof wrapper.appendChild !== 'function') {\n      throw new ParchmentError(`Cannot wrap ${name}`);\n    }\n    wrapper.appendChild(this);\n    return wrapper;\n  }\n}\n\nexport default ShadowBlot;\n","import LinkedList from '../../collection/linked-list';\nimport ParchmentError from '../../error';\nimport Scope from '../../scope';\nimport { Blot, BlotConstructor, Parent, Root } from './blot';\nimport ShadowBlot from './shadow';\n\nclass ParentBlot extends ShadowBlot implements Parent {\n  public static allowedChildren: BlotConstructor[] | null;\n  public static defaultChild: BlotConstructor | null;\n  public static uiClass: string = '';\n\n  public children!: LinkedList<Blot>;\n  public domNode!: HTMLElement;\n  public uiNode: HTMLElement | null = null;\n\n  constructor(scroll: Root, domNode: Node) {\n    super(scroll, domNode);\n    this.build();\n  }\n\n  public appendChild(other: Blot): void {\n    this.insertBefore(other);\n  }\n\n  public attach(): void {\n    super.attach();\n    this.children.forEach(child => {\n      child.attach();\n    });\n  }\n\n  public attachUI(node: HTMLElement) {\n    if (this.uiNode != null) {\n      this.uiNode.remove();\n    }\n    this.uiNode = node;\n    if (ParentBlot.uiClass) {\n      this.uiNode.classList.add(ParentBlot.uiClass);\n    }\n    this.uiNode.setAttribute('contenteditable', 'false');\n    this.domNode.insertBefore(this.uiNode, this.domNode.firstChild);\n  }\n\n  public build(): void {\n    this.children = new LinkedList<Blot>();\n    // Need to be reversed for if DOM nodes already in order\n    Array.from(this.domNode.childNodes)\n      .filter((node: Node) => node !== this.uiNode)\n      .reverse()\n      .forEach((node: Node) => {\n        try {\n          const child = makeAttachedBlot(node, this.scroll);\n          this.insertBefore(child, this.children.head || undefined);\n        } catch (err) {\n          if (err instanceof ParchmentError) {\n            return;\n          } else {\n            throw err;\n          }\n        }\n      });\n  }\n\n  public deleteAt(index: number, length: number): void {\n    if (index === 0 && length === this.length()) {\n      return this.remove();\n    }\n    this.children.forEachAt(index, length, (child, offset, childLength) => {\n      child.deleteAt(offset, childLength);\n    });\n  }\n\n  public descendant(\n    criteria: { new (): Blot },\n    index: number,\n  ): [Blot | null, number];\n  public descendant(\n    criteria: (blot: Blot) => boolean,\n    index: number,\n  ): [Blot | null, number];\n  public descendant(criteria: any, index: number = 0): [Blot | null, number] {\n    const [child, offset] = this.children.find(index);\n    if (\n      (criteria.blotName == null && criteria(child)) ||\n      (criteria.blotName != null && child instanceof criteria)\n    ) {\n      return [child as any, offset];\n    } else if (child instanceof ParentBlot) {\n      return child.descendant(criteria, offset);\n    } else {\n      return [null, -1];\n    }\n  }\n\n  public descendants(\n    criteria: { new (): Blot },\n    index: number,\n    length: number,\n  ): Blot[];\n  public descendants(\n    criteria: (blot: Blot) => boolean,\n    index: number,\n    length: number,\n  ): Blot[];\n  public descendants(\n    criteria: any,\n    index: number = 0,\n    length: number = Number.MAX_VALUE,\n  ): Blot[] {\n    let descendants: Blot[] = [];\n    let lengthLeft = length;\n    this.children.forEachAt(\n      index,\n      length,\n      (child: Blot, childIndex: number, childLength: number) => {\n        if (\n          (criteria.blotName == null && criteria(child)) ||\n          (criteria.blotName != null && child instanceof criteria)\n        ) {\n          descendants.push(child);\n        }\n        if (child instanceof ParentBlot) {\n          descendants = descendants.concat(\n            child.descendants(criteria, childIndex, lengthLeft),\n          );\n        }\n        lengthLeft -= childLength;\n      },\n    );\n    return descendants;\n  }\n\n  public detach(): void {\n    this.children.forEach(child => {\n      child.detach();\n    });\n    super.detach();\n  }\n\n  public enforceAllowedChildren() {\n    let done = false;\n    this.children.forEach((child: Blot) => {\n      if (done) {\n        return;\n      }\n      const allowed = this.statics.allowedChildren.some(\n        (def: BlotConstructor) => child instanceof def,\n      );\n      if (allowed) {\n        return;\n      }\n      if (child.statics.scope === Scope.BLOCK_BLOT) {\n        if (child.next != null) {\n          this.splitAfter(child);\n        }\n        if (child.prev != null) {\n          this.splitAfter(child.prev);\n        }\n        child.parent.unwrap();\n        done = true;\n      } else if (child instanceof ParentBlot) {\n        child.unwrap();\n      } else {\n        child.remove();\n      }\n    });\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    this.children.forEachAt(index, length, (child, offset, childLength) => {\n      child.formatAt(offset, childLength, name, value);\n    });\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    const [child, offset] = this.children.find(index);\n    if (child) {\n      child.insertAt(offset, value, def);\n    } else {\n      const blot =\n        def == null\n          ? this.scroll.create('text', value)\n          : this.scroll.create(value, def);\n      this.appendChild(blot);\n    }\n  }\n\n  public insertBefore(childBlot: Blot, refBlot?: Blot | null): void {\n    if (childBlot.parent != null) {\n      childBlot.parent.children.remove(childBlot);\n    }\n    let refDomNode: Node | null = null;\n    this.children.insertBefore(childBlot, refBlot || null);\n    if (refBlot != null) {\n      refDomNode = refBlot.domNode;\n    }\n    if (\n      this.domNode.parentNode !== childBlot.domNode ||\n      this.domNode.nextSibling !== refDomNode\n    ) {\n      this.domNode.insertBefore(childBlot.domNode, refDomNode);\n    }\n    childBlot.parent = this;\n    childBlot.attach();\n  }\n\n  public length(): number {\n    return this.children.reduce((memo, child) => {\n      return memo + child.length();\n    }, 0);\n  }\n\n  public moveChildren(targetParent: Parent, refNode?: Blot): void {\n    this.children.forEach(child => {\n      targetParent.insertBefore(child, refNode);\n    });\n  }\n\n  public optimize(context: { [key: string]: any }) {\n    super.optimize(context);\n    this.enforceAllowedChildren();\n    if (this.uiNode != null && this.uiNode !== this.domNode.firstChild) {\n      this.domNode.insertBefore(this.uiNode, this.domNode.firstChild);\n    }\n    if (this.children.length === 0) {\n      if (this.statics.defaultChild != null) {\n        const child = this.scroll.create(this.statics.defaultChild.blotName);\n        this.appendChild(child);\n        // TODO double check if necessary\n        // child.optimize(context);\n      } else {\n        this.remove();\n      }\n    }\n  }\n\n  public path(\n    index: number,\n    inclusive: boolean = false,\n  ): Array<[Blot, number]> {\n    const [child, offset] = this.children.find(index, inclusive);\n    const position: Array<[Blot, number]> = [[this, index]];\n    if (child instanceof ParentBlot) {\n      return position.concat(child.path(offset, inclusive));\n    } else if (child != null) {\n      position.push([child, offset]);\n    }\n    return position;\n  }\n\n  public removeChild(child: Blot): void {\n    this.children.remove(child);\n  }\n\n  public replaceWith(name: string | Blot, value?: any): Blot {\n    const replacement =\n      typeof name === 'string' ? this.scroll.create(name, value) : name;\n    if (replacement instanceof ParentBlot) {\n      this.moveChildren(replacement);\n    }\n    return super.replaceWith(replacement);\n  }\n\n  public split(index: number, force: boolean = false): Blot | null {\n    if (!force) {\n      if (index === 0) {\n        return this;\n      }\n      if (index === this.length()) {\n        return this.next;\n      }\n    }\n    const after = this.clone() as ParentBlot;\n    if (this.parent) {\n      this.parent.insertBefore(after, this.next || undefined);\n    }\n    this.children.forEachAt(index, this.length(), (child, offset, _length) => {\n      const split = child.split(offset, force);\n      if (split != null) {\n        after.appendChild(split);\n      }\n    });\n    return after;\n  }\n\n  public splitAfter(child: Blot): Parent {\n    const after = this.clone() as ParentBlot;\n    while (child.next != null) {\n      after.appendChild(child.next);\n    }\n    if (this.parent) {\n      this.parent.insertBefore(after, this.next || undefined);\n    }\n    return after;\n  }\n\n  public unwrap(): void {\n    if (this.parent) {\n      this.moveChildren(this.parent, this.next || undefined);\n    }\n    this.remove();\n  }\n\n  public update(\n    mutations: MutationRecord[],\n    _context: { [key: string]: any },\n  ): void {\n    const addedNodes: Node[] = [];\n    const removedNodes: Node[] = [];\n    mutations.forEach(mutation => {\n      if (mutation.target === this.domNode && mutation.type === 'childList') {\n        addedNodes.push.apply(addedNodes, mutation.addedNodes);\n        removedNodes.push.apply(removedNodes, mutation.removedNodes);\n      }\n    });\n    removedNodes.forEach((node: Node) => {\n      // Check node has actually been removed\n      // One exception is Chrome does not immediately remove IFRAMEs\n      // from DOM but MutationRecord is correct in its reported removal\n      if (\n        node.parentNode != null &&\n        // @ts-ignore\n        node.tagName !== 'IFRAME' &&\n        document.body.compareDocumentPosition(node) &\n          Node.DOCUMENT_POSITION_CONTAINED_BY\n      ) {\n        return;\n      }\n      const blot = this.scroll.find(node);\n      if (blot == null) {\n        return;\n      }\n      if (\n        blot.domNode.parentNode == null ||\n        blot.domNode.parentNode === this.domNode\n      ) {\n        blot.detach();\n      }\n    });\n    addedNodes\n      .filter(node => {\n        return node.parentNode === this.domNode || node === this.uiNode;\n      })\n      .sort((a, b) => {\n        if (a === b) {\n          return 0;\n        }\n        if (a.compareDocumentPosition(b) & Node.DOCUMENT_POSITION_FOLLOWING) {\n          return 1;\n        }\n        return -1;\n      })\n      .forEach(node => {\n        let refBlot: Blot | null = null;\n        if (node.nextSibling != null) {\n          refBlot = this.scroll.find(node.nextSibling);\n        }\n        const blot = makeAttachedBlot(node, this.scroll);\n        if (blot.next !== refBlot || blot.next == null) {\n          if (blot.parent != null) {\n            blot.parent.removeChild(this);\n          }\n          this.insertBefore(blot, refBlot || undefined);\n        }\n      });\n    this.enforceAllowedChildren();\n  }\n}\n\nfunction makeAttachedBlot(node: Node, scroll: Root): Blot {\n  let blot = scroll.find(node);\n  if (blot == null) {\n    try {\n      blot = scroll.create(node);\n    } catch (e) {\n      blot = scroll.create(Scope.INLINE) as Blot;\n      Array.from(node.childNodes).forEach((child: Node) => {\n        // @ts-ignore\n        blot.domNode.appendChild(child);\n      });\n      if (node.parentNode) {\n        node.parentNode.replaceChild(blot.domNode, node);\n      }\n      blot.attach();\n    }\n  }\n  return blot as Blot;\n}\n\nexport default ParentBlot;\n","import Scope from '../../scope';\nimport BlockBlot from '../block';\nimport ParentBlot from './parent';\n\nclass ContainerBlot extends ParentBlot {\n  public static blotName = 'container';\n  public static scope = Scope.BLOCK_BLOT;\n  public static tagName: string;\n\n  public prev!: BlockBlot | ContainerBlot | null;\n  public next!: BlockBlot | ContainerBlot | null;\n\n  public checkMerge(): boolean {\n    return (\n      this.next !== null && this.next.statics.blotName === this.statics.blotName\n    );\n  }\n\n  public deleteAt(index: number, length: number): void {\n    super.deleteAt(index, length);\n    this.enforceAllowedChildren();\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    super.formatAt(index, length, name, value);\n    this.enforceAllowedChildren();\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    super.insertAt(index, value, def);\n    this.enforceAllowedChildren();\n  }\n\n  public optimize(context: { [key: string]: any }): void {\n    super.optimize(context);\n    if (this.children.length > 0 && this.next != null && this.checkMerge()) {\n      this.next.moveChildren(this);\n      this.next.remove();\n    }\n  }\n}\n\nexport default ContainerBlot;\n","import Scope from '../../scope';\nimport { Leaf } from './blot';\nimport ShadowBlot from './shadow';\n\nclass LeafBlot extends ShadowBlot implements Leaf {\n  public static scope = Scope.INLINE_BLOT;\n\n  public static value(_domNode: Node): any {\n    return true;\n  }\n\n  public index(node: Node, offset: number): number {\n    if (\n      this.domNode === node ||\n      this.domNode.compareDocumentPosition(node) &\n        Node.DOCUMENT_POSITION_CONTAINED_BY\n    ) {\n      return Math.min(offset, 1);\n    }\n    return -1;\n  }\n\n  public position(index: number, _inclusive?: boolean): [Node, number] {\n    const childNodes: Node[] = Array.from(this.parent.domNode.childNodes);\n    let offset = childNodes.indexOf(this.domNode);\n    if (index > 0) {\n      offset += 1;\n    }\n    return [this.parent.domNode, offset];\n  }\n\n  public value(): any {\n    return {\n      [this.statics.blotName]: this.statics.value(this.domNode) || true,\n    };\n  }\n}\n\nexport default LeafBlot;\n","import Scope from '../scope';\n\nexport interface IAttributorOptions {\n  scope?: Scope;\n  whitelist?: string[];\n}\n\nexport default class Attributor {\n  public static keys(node: HTMLElement): string[] {\n    return Array.from(node.attributes).map((item: Attr) => item.name);\n  }\n\n  public attrName: string;\n  public keyName: string;\n  public scope: Scope;\n  public whitelist: string[] | undefined;\n\n  constructor(\n    attrName: string,\n    keyName: string,\n    options: IAttributorOptions = {},\n  ) {\n    this.attrName = attrName;\n    this.keyName = keyName;\n    const attributeBit = Scope.TYPE & Scope.ATTRIBUTE;\n    this.scope =\n      options.scope != null\n        ? // Ignore type bits, force attribute bit\n          (options.scope & Scope.LEVEL) | attributeBit\n        : Scope.ATTRIBUTE;\n    if (options.whitelist != null) {\n      this.whitelist = options.whitelist;\n    }\n  }\n\n  public add(node: HTMLElement, value: string): boolean {\n    if (!this.canAdd(node, value)) {\n      return false;\n    }\n    node.setAttribute(this.keyName, value);\n    return true;\n  }\n\n  public canAdd(_node: HTMLElement, value: any): boolean {\n    if (this.whitelist == null) {\n      return true;\n    }\n    if (typeof value === 'string') {\n      return this.whitelist.indexOf(value.replace(/[\"']/g, '')) > -1;\n    } else {\n      return this.whitelist.indexOf(value) > -1;\n    }\n  }\n\n  public remove(node: HTMLElement): void {\n    node.removeAttribute(this.keyName);\n  }\n\n  public value(node: HTMLElement): string {\n    const value = node.getAttribute(this.keyName);\n    if (this.canAdd(node, value) && value) {\n      return value;\n    }\n    return '';\n  }\n}\n","import Attributor from './attributor';\n\nfunction match(node: HTMLElement, prefix: string): string[] {\n  const className = node.getAttribute('class') || '';\n  return className\n    .split(/\\s+/)\n    .filter(name => name.indexOf(`${prefix}-`) === 0);\n}\n\nclass ClassAttributor extends Attributor {\n  public static keys(node: HTMLElement): string[] {\n    return (node.getAttribute('class') || '').split(/\\s+/).map(name =>\n      name\n        .split('-')\n        .slice(0, -1)\n        .join('-'),\n    );\n  }\n\n  public add(node: HTMLElement, value: string): boolean {\n    if (!this.canAdd(node, value)) {\n      return false;\n    }\n    this.remove(node);\n    node.classList.add(`${this.keyName}-${value}`);\n    return true;\n  }\n\n  public remove(node: HTMLElement): void {\n    const matches = match(node, this.keyName);\n    matches.forEach(name => {\n      node.classList.remove(name);\n    });\n    if (node.classList.length === 0) {\n      node.removeAttribute('class');\n    }\n  }\n\n  public value(node: HTMLElement): string {\n    const result = match(node, this.keyName)[0] || '';\n    const value = result.slice(this.keyName.length + 1); // +1 for hyphen\n    return this.canAdd(node, value) ? value : '';\n  }\n}\n\nexport default ClassAttributor;\n","import Attributor from './attributor';\n\nfunction camelize(name: string): string {\n  const parts = name.split('-');\n  const rest = parts\n    .slice(1)\n    .map((part: string) => part[0].toUpperCase() + part.slice(1))\n    .join('');\n  return parts[0] + rest;\n}\n\nclass StyleAttributor extends Attributor {\n  public static keys(node: Element): string[] {\n    return (node.getAttribute('style') || '').split(';').map(value => {\n      const arr = value.split(':');\n      return arr[0].trim();\n    });\n  }\n\n  public add(node: HTMLElement, value: string): boolean {\n    if (!this.canAdd(node, value)) {\n      return false;\n    }\n    // @ts-ignore\n    node.style[camelize(this.keyName)] = value;\n    return true;\n  }\n\n  public remove(node: HTMLElement): void {\n    // @ts-ignore\n    node.style[camelize(this.keyName)] = '';\n    if (!node.getAttribute('style')) {\n      node.removeAttribute('style');\n    }\n  }\n\n  public value(node: HTMLElement): string {\n    // @ts-ignore\n    const value = node.style[camelize(this.keyName)];\n    return this.canAdd(node, value) ? value : '';\n  }\n}\n\nexport default StyleAttributor;\n","import { Formattable } from '../blot/abstract/blot';\nimport Registry from '../registry';\nimport Scope from '../scope';\nimport Attributor from './attributor';\nimport ClassAttributor from './class';\nimport StyleAttributor from './style';\n\nclass AttributorStore {\n  private attributes: { [key: string]: Attributor } = {};\n  private domNode: HTMLElement;\n\n  constructor(domNode: HTMLElement) {\n    this.domNode = domNode;\n    this.build();\n  }\n\n  public attribute(attribute: Attributor, value: any): void {\n    // verb\n    if (value) {\n      if (attribute.add(this.domNode, value)) {\n        if (attribute.value(this.domNode) != null) {\n          this.attributes[attribute.attrName] = attribute;\n        } else {\n          delete this.attributes[attribute.attrName];\n        }\n      }\n    } else {\n      attribute.remove(this.domNode);\n      delete this.attributes[attribute.attrName];\n    }\n  }\n\n  public build(): void {\n    this.attributes = {};\n    const blot = Registry.find(this.domNode);\n    if (blot == null) {\n      return;\n    }\n    const attributes = Attributor.keys(this.domNode);\n    const classes = ClassAttributor.keys(this.domNode);\n    const styles = StyleAttributor.keys(this.domNode);\n    attributes\n      .concat(classes)\n      .concat(styles)\n      .forEach(name => {\n        const attr = blot.scroll.query(name, Scope.ATTRIBUTE);\n        if (attr instanceof Attributor) {\n          this.attributes[attr.attrName] = attr;\n        }\n      });\n  }\n\n  public copy(target: Formattable): void {\n    Object.keys(this.attributes).forEach(key => {\n      const value = this.attributes[key].value(this.domNode);\n      target.format(key, value);\n    });\n  }\n\n  public move(target: Formattable): void {\n    this.copy(target);\n    Object.keys(this.attributes).forEach(key => {\n      this.attributes[key].remove(this.domNode);\n    });\n    this.attributes = {};\n  }\n\n  public values(): { [key: string]: any } {\n    return Object.keys(this.attributes).reduce(\n      (attributes: { [key: string]: any }, name: string) => {\n        attributes[name] = this.attributes[name].value(this.domNode);\n        return attributes;\n      },\n      {},\n    );\n  }\n}\n\nexport default AttributorStore;\n","import Attributor from '../attributor/attributor';\nimport AttributorStore from '../attributor/store';\nimport Scope from '../scope';\nimport {\n  Blot,\n  BlotConstructor,\n  Formattable,\n  Parent,\n  Root,\n} from './abstract/blot';\nimport LeafBlot from './abstract/leaf';\nimport ParentBlot from './abstract/parent';\n\n// Shallow object comparison\nfunction isEqual(obj1: object, obj2: object): boolean {\n  if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n    return false;\n  }\n  // @ts-ignore\n  for (const prop in obj1) {\n    // @ts-ignore\n    if (obj1[prop] !== obj2[prop]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nclass InlineBlot extends ParentBlot implements Formattable {\n  public static allowedChildren: BlotConstructor[] = [InlineBlot, LeafBlot];\n  public static blotName = 'inline';\n  public static scope = Scope.INLINE_BLOT;\n  public static tagName = 'SPAN';\n\n  public static formats(domNode: HTMLElement, scroll: Root): any {\n    const match = scroll.query(InlineBlot.blotName);\n    if (\n      match != null &&\n      domNode.tagName === (match as BlotConstructor).tagName\n    ) {\n      return undefined;\n    } else if (typeof this.tagName === 'string') {\n      return true;\n    } else if (Array.isArray(this.tagName)) {\n      return domNode.tagName.toLowerCase();\n    }\n    return undefined;\n  }\n\n  protected attributes: AttributorStore;\n\n  constructor(scroll: Root, domNode: Node) {\n    super(scroll, domNode);\n    this.attributes = new AttributorStore(this.domNode);\n  }\n\n  public format(name: string, value: any) {\n    if (name === this.statics.blotName && !value) {\n      this.children.forEach(child => {\n        if (!(child instanceof InlineBlot)) {\n          child = child.wrap(InlineBlot.blotName, true);\n        }\n        this.attributes.copy(child as InlineBlot);\n      });\n      this.unwrap();\n    } else {\n      const format = this.scroll.query(name, Scope.INLINE);\n      if (format == null) {\n        return;\n      }\n      if (format instanceof Attributor) {\n        this.attributes.attribute(format, value);\n      } else if (\n        value &&\n        (name !== this.statics.blotName || this.formats()[name] !== value)\n      ) {\n        this.replaceWith(name, value);\n      }\n    }\n  }\n\n  public formats(): { [index: string]: any } {\n    const formats = this.attributes.values();\n    const format = this.statics.formats(this.domNode, this.scroll);\n    if (format != null) {\n      formats[this.statics.blotName] = format;\n    }\n    return formats;\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    if (\n      this.formats()[name] != null ||\n      this.scroll.query(name, Scope.ATTRIBUTE)\n    ) {\n      const blot = this.isolate(index, length) as InlineBlot;\n      blot.format(name, value);\n    } else {\n      super.formatAt(index, length, name, value);\n    }\n  }\n\n  public optimize(context: { [key: string]: any }): void {\n    super.optimize(context);\n    const formats = this.formats();\n    if (Object.keys(formats).length === 0) {\n      return this.unwrap(); // unformatted span\n    }\n    const next = this.next;\n    if (\n      next instanceof InlineBlot &&\n      next.prev === this &&\n      isEqual(formats, next.formats())\n    ) {\n      next.moveChildren(this);\n      next.remove();\n    }\n  }\n\n  public replaceWith(name: string | Blot, value?: any): Blot {\n    const replacement = super.replaceWith(name, value) as InlineBlot;\n    this.attributes.copy(replacement);\n    return replacement;\n  }\n\n  public update(\n    mutations: MutationRecord[],\n    context: { [key: string]: any },\n  ): void {\n    super.update(mutations, context);\n    const attributeChanged = mutations.some(\n      mutation =>\n        mutation.target === this.domNode && mutation.type === 'attributes',\n    );\n    if (attributeChanged) {\n      this.attributes.build();\n    }\n  }\n\n  public wrap(name: string | Parent, value?: any): Parent {\n    const wrapper = super.wrap(name, value);\n    if (wrapper instanceof InlineBlot) {\n      this.attributes.move(wrapper);\n    }\n    return wrapper;\n  }\n}\n\nexport default InlineBlot;\n","import Attributor from '../attributor/attributor';\nimport AttributorStore from '../attributor/store';\nimport Scope from '../scope';\nimport { Blot, BlotConstructor, Formattable, Root } from './abstract/blot';\nimport LeafBlot from './abstract/leaf';\nimport ParentBlot from './abstract/parent';\nimport InlineBlot from './inline';\n\nclass BlockBlot extends ParentBlot implements Formattable {\n  public static blotName = 'block';\n  public static scope = Scope.BLOCK_BLOT;\n  public static tagName = 'P';\n  public static allowedChildren: BlotConstructor[] = [\n    InlineBlot,\n    BlockBlot,\n    LeafBlot,\n  ];\n\n  public static formats(domNode: HTMLElement, scroll: Root): any {\n    const match = scroll.query(BlockBlot.blotName);\n    if (\n      match != null &&\n      domNode.tagName === (match as BlotConstructor).tagName\n    ) {\n      return undefined;\n    } else if (typeof this.tagName === 'string') {\n      return true;\n    } else if (Array.isArray(this.tagName)) {\n      return domNode.tagName.toLowerCase();\n    }\n  }\n\n  protected attributes: AttributorStore;\n\n  constructor(scroll: Root, domNode: Node) {\n    super(scroll, domNode);\n    this.attributes = new AttributorStore(this.domNode);\n  }\n\n  public format(name: string, value: any) {\n    const format = this.scroll.query(name, Scope.BLOCK);\n    if (format == null) {\n      return;\n    } else if (format instanceof Attributor) {\n      this.attributes.attribute(format, value);\n    } else if (name === this.statics.blotName && !value) {\n      this.replaceWith(BlockBlot.blotName);\n    } else if (\n      value &&\n      (name !== this.statics.blotName || this.formats()[name] !== value)\n    ) {\n      this.replaceWith(name, value);\n    }\n  }\n\n  public formats(): { [index: string]: any } {\n    const formats = this.attributes.values();\n    const format = this.statics.formats(this.domNode, this.scroll);\n    if (format != null) {\n      formats[this.statics.blotName] = format;\n    }\n    return formats;\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    if (this.scroll.query(name, Scope.BLOCK) != null) {\n      this.format(name, value);\n    } else {\n      super.formatAt(index, length, name, value);\n    }\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    if (def == null || this.scroll.query(value, Scope.INLINE) != null) {\n      // Insert text or inline\n      super.insertAt(index, value, def);\n    } else {\n      const after = this.split(index);\n      if (after != null) {\n        const blot = this.scroll.create(value, def);\n        after.parent.insertBefore(blot, after);\n      } else {\n        throw new Error('Attempt to insertAt after block boundaries');\n      }\n    }\n  }\n\n  public replaceWith(name: string | Blot, value?: any): Blot {\n    const replacement = super.replaceWith(name, value) as BlockBlot;\n    this.attributes.copy(replacement);\n    return replacement;\n  }\n\n  public update(\n    mutations: MutationRecord[],\n    context: { [key: string]: any },\n  ): void {\n    super.update(mutations, context);\n    const attributeChanged = mutations.some(\n      mutation =>\n        mutation.target === this.domNode && mutation.type === 'attributes',\n    );\n    if (attributeChanged) {\n      this.attributes.build();\n    }\n  }\n}\n\nexport default BlockBlot;\n","import { Formattable, Root } from './abstract/blot';\nimport LeafBlot from './abstract/leaf';\n\nclass EmbedBlot extends LeafBlot implements Formattable {\n  public static formats(_domNode: HTMLElement, _scroll: Root): any {\n    return undefined;\n  }\n\n  public format(name: string, value: any): void {\n    // super.formatAt wraps, which is what we want in general,\n    // but this allows subclasses to overwrite for formats\n    // that just apply to particular embeds\n    super.formatAt(0, this.length(), name, value);\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    if (index === 0 && length === this.length()) {\n      this.format(name, value);\n    } else {\n      super.formatAt(index, length, name, value);\n    }\n  }\n\n  public formats(): { [index: string]: any } {\n    return this.statics.formats(this.domNode, this.scroll);\n  }\n}\n\nexport default EmbedBlot;\n","import Attributor from '../attributor/attributor';\nimport Registry from '../registry';\nimport Scope from '../scope';\nimport { Blot, BlotConstructor, Root } from './abstract/blot';\nimport ContainerBlot from './abstract/container';\nimport ParentBlot from './abstract/parent';\nimport BlockBlot from './block';\n\nconst OBSERVER_CONFIG = {\n  attributes: true,\n  characterData: true,\n  characterDataOldValue: true,\n  childList: true,\n  subtree: true,\n};\n\nconst MAX_OPTIMIZE_ITERATIONS = 100;\n\nclass ScrollBlot extends ParentBlot implements Root {\n  public static blotName = 'scroll';\n  public static defaultChild = BlockBlot;\n  public static allowedChildren: BlotConstructor[] = [BlockBlot, ContainerBlot];\n  public static scope = Scope.BLOCK_BLOT;\n  public static tagName = 'DIV';\n\n  public registry: Registry;\n  public observer: MutationObserver;\n\n  constructor(registry: Registry, node: HTMLDivElement) {\n    // @ts-ignore\n    super(null, node);\n    this.registry = registry;\n    this.scroll = this;\n    this.build();\n    this.observer = new MutationObserver((mutations: MutationRecord[]) => {\n      this.update(mutations);\n    });\n    this.observer.observe(this.domNode, OBSERVER_CONFIG);\n    this.attach();\n  }\n\n  public create(input: Node | string | Scope, value?: any): Blot {\n    return this.registry.create(this, input, value);\n  }\n\n  public find(node: Node | null, bubble: boolean = false): Blot | null {\n    return this.registry.find(node, bubble);\n  }\n\n  public query(\n    query: string | Node | Scope,\n    scope: Scope = Scope.ANY,\n  ): Attributor | BlotConstructor | null {\n    return this.registry.query(query, scope);\n  }\n\n  public register(...definitions: any[]): any {\n    return this.registry.register(...definitions);\n  }\n\n  public build() {\n    if (this.scroll == null) {\n      return;\n    }\n    super.build();\n  }\n\n  public detach() {\n    super.detach();\n    this.observer.disconnect();\n  }\n\n  public deleteAt(index: number, length: number): void {\n    this.update();\n    if (index === 0 && length === this.length()) {\n      this.children.forEach(child => {\n        child.remove();\n      });\n    } else {\n      super.deleteAt(index, length);\n    }\n  }\n\n  public formatAt(\n    index: number,\n    length: number,\n    name: string,\n    value: any,\n  ): void {\n    this.update();\n    super.formatAt(index, length, name, value);\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    this.update();\n    super.insertAt(index, value, def);\n  }\n\n  public optimize(context: { [key: string]: any }): void;\n  public optimize(\n    mutations: MutationRecord[],\n    context: { [key: string]: any },\n  ): void;\n  public optimize(mutations: any = [], context: any = {}): void {\n    super.optimize(context);\n    const mutationsMap = context.mutationsMap || new WeakMap();\n    // We must modify mutations directly, cannot make copy and then modify\n    let records = Array.from(this.observer.takeRecords());\n    // Array.push currently seems to be implemented by a non-tail recursive function\n    // so we cannot just mutations.push.apply(mutations, this.observer.takeRecords());\n    while (records.length > 0) {\n      mutations.push(records.pop());\n    }\n    const mark = (blot: Blot | null, markParent: boolean = true) => {\n      if (blot == null || blot === this) {\n        return;\n      }\n      if (blot.domNode.parentNode == null) {\n        return;\n      }\n      if (!mutationsMap.has(blot.domNode)) {\n        mutationsMap.set(blot.domNode, []);\n      }\n      if (markParent) {\n        mark(blot.parent);\n      }\n    };\n    const optimize = (blot: Blot) => {\n      // Post-order traversal\n      if (!mutationsMap.has(blot.domNode)) {\n        return;\n      }\n      if (blot instanceof ParentBlot) {\n        blot.children.forEach(optimize);\n      }\n      mutationsMap.delete(blot.domNode);\n      blot.optimize(context);\n    };\n    let remaining = mutations;\n    for (let i = 0; remaining.length > 0; i += 1) {\n      if (i >= MAX_OPTIMIZE_ITERATIONS) {\n        throw new Error('[Parchment] Maximum optimize iterations reached');\n      }\n      remaining.forEach((mutation: MutationRecord) => {\n        const blot = this.find(mutation.target, true);\n        if (blot == null) {\n          return;\n        }\n        if (blot.domNode === mutation.target) {\n          if (mutation.type === 'childList') {\n            mark(this.find(mutation.previousSibling, false));\n            Array.from(mutation.addedNodes).forEach((node: Node) => {\n              const child = this.find(node, false);\n              mark(child, false);\n              if (child instanceof ParentBlot) {\n                child.children.forEach((grandChild: Blot) => {\n                  mark(grandChild, false);\n                });\n              }\n            });\n          } else if (mutation.type === 'attributes') {\n            mark(blot.prev);\n          }\n        }\n        mark(blot);\n      });\n      this.children.forEach(optimize);\n      remaining = Array.from(this.observer.takeRecords());\n      records = remaining.slice();\n      while (records.length > 0) {\n        mutations.push(records.pop());\n      }\n    }\n  }\n\n  public update(\n    mutations?: MutationRecord[],\n    context: { [key: string]: any } = {},\n  ): void {\n    mutations = mutations || this.observer.takeRecords();\n    const mutationsMap = new WeakMap();\n    mutations\n      .map((mutation: MutationRecord) => {\n        const blot = Registry.find(mutation.target, true);\n        if (blot == null) {\n          return null;\n        }\n        if (mutationsMap.has(blot.domNode)) {\n          mutationsMap.get(blot.domNode).push(mutation);\n          return null;\n        } else {\n          mutationsMap.set(blot.domNode, [mutation]);\n          return blot;\n        }\n      })\n      .forEach((blot: Blot | null) => {\n        if (blot != null && blot !== this && mutationsMap.has(blot.domNode)) {\n          blot.update(mutationsMap.get(blot.domNode) || [], context);\n        }\n      });\n    context.mutationsMap = mutationsMap;\n    if (mutationsMap.has(this.domNode)) {\n      super.update(mutationsMap.get(this.domNode), context);\n    }\n    this.optimize(mutations, context);\n  }\n}\n\nexport default ScrollBlot;\n","import Scope from '../scope';\nimport { Blot, Leaf, Root } from './abstract/blot';\nimport LeafBlot from './abstract/leaf';\n\nclass TextBlot extends LeafBlot implements Leaf {\n  public static blotName = 'text';\n  public static scope = Scope.INLINE_BLOT;\n\n  public static create(value: string): Text {\n    return document.createTextNode(value);\n  }\n\n  public static value(domNode: Text): string {\n    return domNode.data;\n  }\n\n  public domNode!: Text;\n  protected text: string;\n\n  constructor(scroll: Root, node: Node) {\n    super(scroll, node);\n    this.text = this.statics.value(this.domNode);\n  }\n\n  public deleteAt(index: number, length: number): void {\n    this.domNode.data = this.text =\n      this.text.slice(0, index) + this.text.slice(index + length);\n  }\n\n  public index(node: Node, offset: number): number {\n    if (this.domNode === node) {\n      return offset;\n    }\n    return -1;\n  }\n\n  public insertAt(index: number, value: string, def?: any): void {\n    if (def == null) {\n      this.text = this.text.slice(0, index) + value + this.text.slice(index);\n      this.domNode.data = this.text;\n    } else {\n      super.insertAt(index, value, def);\n    }\n  }\n\n  public length(): number {\n    return this.text.length;\n  }\n\n  public optimize(context: { [key: string]: any }): void {\n    super.optimize(context);\n    this.text = this.statics.value(this.domNode);\n    if (this.text.length === 0) {\n      this.remove();\n    } else if (this.next instanceof TextBlot && this.next.prev === this) {\n      this.insertAt(this.length(), (this.next as TextBlot).value());\n      this.next.remove();\n    }\n  }\n\n  public position(index: number, _inclusive: boolean = false): [Node, number] {\n    return [this.domNode, index];\n  }\n\n  public split(index: number, force: boolean = false): Blot | null {\n    if (!force) {\n      if (index === 0) {\n        return this;\n      }\n      if (index === this.length()) {\n        return this.next;\n      }\n    }\n    const after = this.scroll.create(this.domNode.splitText(index));\n    this.parent.insertBefore(after, this.next || undefined);\n    this.text = this.statics.value(this.domNode);\n    return after;\n  }\n\n  public update(\n    mutations: MutationRecord[],\n    _context: { [key: string]: any },\n  ): void {\n    if (\n      mutations.some(mutation => {\n        return (\n          mutation.type === 'characterData' && mutation.target === this.domNode\n        );\n      })\n    ) {\n      this.text = this.statics.value(this.domNode);\n    }\n  }\n\n  public value(): string {\n    return this.text;\n  }\n}\n\nexport default TextBlot;\n","import ContainerBlot from './blot/abstract/container';\nimport LeafBlot from './blot/abstract/leaf';\nimport ParentBlot from './blot/abstract/parent';\n\nimport BlockBlot from './blot/block';\nimport EmbedBlot from './blot/embed';\nimport InlineBlot from './blot/inline';\nimport ScrollBlot from './blot/scroll';\nimport TextBlot from './blot/text';\n\nimport Attributor from './attributor/attributor';\nimport ClassAttributor from './attributor/class';\nimport AttributorStore from './attributor/store';\nimport StyleAttributor from './attributor/style';\n\nimport Registry from './registry';\nimport Scope from './scope';\n\nexport {\n  ParentBlot,\n  ContainerBlot,\n  LeafBlot,\n  EmbedBlot,\n  ScrollBlot,\n  BlockBlot,\n  InlineBlot,\n  TextBlot,\n  Attributor,\n  ClassAttributor,\n  StyleAttributor,\n  AttributorStore,\n  Registry,\n  Scope,\n};\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar deep_equal_1 = __importDefault(require(\"deep-equal\"));\nvar extend_1 = __importDefault(require(\"extend\"));\nvar fast_diff_1 = __importDefault(require(\"fast-diff\"));\nvar AttributeMap_1 = __importDefault(require(\"./AttributeMap\"));\nvar Op_1 = __importDefault(require(\"./Op\"));\nvar NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()\nvar Delta = /** @class */ (function () {\n    function Delta(ops) {\n        // Assume we are given a well formed ops\n        if (Array.isArray(ops)) {\n            this.ops = ops;\n        }\n        else if (ops != null && Array.isArray(ops.ops)) {\n            this.ops = ops.ops;\n        }\n        else {\n            this.ops = [];\n        }\n    }\n    Delta.prototype.insert = function (arg, attributes) {\n        var newOp = {};\n        if (typeof arg === 'string' && arg.length === 0) {\n            return this;\n        }\n        newOp.insert = arg;\n        if (attributes != null &&\n            typeof attributes === 'object' &&\n            Object.keys(attributes).length > 0) {\n            newOp.attributes = attributes;\n        }\n        return this.push(newOp);\n    };\n    Delta.prototype.delete = function (length) {\n        if (length <= 0) {\n            return this;\n        }\n        return this.push({ delete: length });\n    };\n    Delta.prototype.retain = function (length, attributes) {\n        if (length <= 0) {\n            return this;\n        }\n        var newOp = { retain: length };\n        if (attributes != null &&\n            typeof attributes === 'object' &&\n            Object.keys(attributes).length > 0) {\n            newOp.attributes = attributes;\n        }\n        return this.push(newOp);\n    };\n    Delta.prototype.push = function (newOp) {\n        var index = this.ops.length;\n        var lastOp = this.ops[index - 1];\n        newOp = extend_1.default(true, {}, newOp);\n        if (typeof lastOp === 'object') {\n            if (typeof newOp.delete === 'number' &&\n                typeof lastOp.delete === 'number') {\n                this.ops[index - 1] = { delete: lastOp.delete + newOp.delete };\n                return this;\n            }\n            // Since it does not matter if we insert before or after deleting at the same index,\n            // always prefer to insert first\n            if (typeof lastOp.delete === 'number' && newOp.insert != null) {\n                index -= 1;\n                lastOp = this.ops[index - 1];\n                if (typeof lastOp !== 'object') {\n                    this.ops.unshift(newOp);\n                    return this;\n                }\n            }\n            if (deep_equal_1.default(newOp.attributes, lastOp.attributes)) {\n                if (typeof newOp.insert === 'string' &&\n                    typeof lastOp.insert === 'string') {\n                    this.ops[index - 1] = { insert: lastOp.insert + newOp.insert };\n                    if (typeof newOp.attributes === 'object') {\n                        this.ops[index - 1].attributes = newOp.attributes;\n                    }\n                    return this;\n                }\n                else if (typeof newOp.retain === 'number' &&\n                    typeof lastOp.retain === 'number') {\n                    this.ops[index - 1] = { retain: lastOp.retain + newOp.retain };\n                    if (typeof newOp.attributes === 'object') {\n                        this.ops[index - 1].attributes = newOp.attributes;\n                    }\n                    return this;\n                }\n            }\n        }\n        if (index === this.ops.length) {\n            this.ops.push(newOp);\n        }\n        else {\n            this.ops.splice(index, 0, newOp);\n        }\n        return this;\n    };\n    Delta.prototype.chop = function () {\n        var lastOp = this.ops[this.ops.length - 1];\n        if (lastOp && lastOp.retain && !lastOp.attributes) {\n            this.ops.pop();\n        }\n        return this;\n    };\n    Delta.prototype.filter = function (predicate) {\n        return this.ops.filter(predicate);\n    };\n    Delta.prototype.forEach = function (predicate) {\n        this.ops.forEach(predicate);\n    };\n    Delta.prototype.map = function (predicate) {\n        return this.ops.map(predicate);\n    };\n    Delta.prototype.partition = function (predicate) {\n        var passed = [];\n        var failed = [];\n        this.forEach(function (op) {\n            var target = predicate(op) ? passed : failed;\n            target.push(op);\n        });\n        return [passed, failed];\n    };\n    Delta.prototype.reduce = function (predicate, initialValue) {\n        return this.ops.reduce(predicate, initialValue);\n    };\n    Delta.prototype.changeLength = function () {\n        return this.reduce(function (length, elem) {\n            if (elem.insert) {\n                return length + Op_1.default.length(elem);\n            }\n            else if (elem.delete) {\n                return length - elem.delete;\n            }\n            return length;\n        }, 0);\n    };\n    Delta.prototype.length = function () {\n        return this.reduce(function (length, elem) {\n            return length + Op_1.default.length(elem);\n        }, 0);\n    };\n    Delta.prototype.slice = function (start, end) {\n        if (start === void 0) { start = 0; }\n        if (end === void 0) { end = Infinity; }\n        var ops = [];\n        var iter = Op_1.default.iterator(this.ops);\n        var index = 0;\n        while (index < end && iter.hasNext()) {\n            var nextOp = void 0;\n            if (index < start) {\n                nextOp = iter.next(start - index);\n            }\n            else {\n                nextOp = iter.next(end - index);\n                ops.push(nextOp);\n            }\n            index += Op_1.default.length(nextOp);\n        }\n        return new Delta(ops);\n    };\n    Delta.prototype.compose = function (other) {\n        var thisIter = Op_1.default.iterator(this.ops);\n        var otherIter = Op_1.default.iterator(other.ops);\n        var ops = [];\n        var firstOther = otherIter.peek();\n        if (firstOther != null &&\n            typeof firstOther.retain === 'number' &&\n            firstOther.attributes == null) {\n            var firstLeft = firstOther.retain;\n            while (thisIter.peekType() === 'insert' &&\n                thisIter.peekLength() <= firstLeft) {\n                firstLeft -= thisIter.peekLength();\n                ops.push(thisIter.next());\n            }\n            if (firstOther.retain - firstLeft > 0) {\n                otherIter.next(firstOther.retain - firstLeft);\n            }\n        }\n        var delta = new Delta(ops);\n        while (thisIter.hasNext() || otherIter.hasNext()) {\n            if (otherIter.peekType() === 'insert') {\n                delta.push(otherIter.next());\n            }\n            else if (thisIter.peekType() === 'delete') {\n                delta.push(thisIter.next());\n            }\n            else {\n                var length_1 = Math.min(thisIter.peekLength(), otherIter.peekLength());\n                var thisOp = thisIter.next(length_1);\n                var otherOp = otherIter.next(length_1);\n                if (typeof otherOp.retain === 'number') {\n                    var newOp = {};\n                    if (typeof thisOp.retain === 'number') {\n                        newOp.retain = length_1;\n                    }\n                    else {\n                        newOp.insert = thisOp.insert;\n                    }\n                    // Preserve null when composing with a retain, otherwise remove it for inserts\n                    var attributes = AttributeMap_1.default.compose(thisOp.attributes, otherOp.attributes, typeof thisOp.retain === 'number');\n                    if (attributes) {\n                        newOp.attributes = attributes;\n                    }\n                    delta.push(newOp);\n                    // Optimization if rest of other is just retain\n                    if (!otherIter.hasNext() &&\n                        deep_equal_1.default(delta.ops[delta.ops.length - 1], newOp)) {\n                        var rest = new Delta(thisIter.rest());\n                        return delta.concat(rest).chop();\n                    }\n                    // Other op should be delete, we could be an insert or retain\n                    // Insert + delete cancels out\n                }\n                else if (typeof otherOp.delete === 'number' &&\n                    typeof thisOp.retain === 'number') {\n                    delta.push(otherOp);\n                }\n            }\n        }\n        return delta.chop();\n    };\n    Delta.prototype.concat = function (other) {\n        var delta = new Delta(this.ops.slice());\n        if (other.ops.length > 0) {\n            delta.push(other.ops[0]);\n            delta.ops = delta.ops.concat(other.ops.slice(1));\n        }\n        return delta;\n    };\n    Delta.prototype.diff = function (other, cursor) {\n        if (this.ops === other.ops) {\n            return new Delta();\n        }\n        var strings = [this, other].map(function (delta) {\n            return delta\n                .map(function (op) {\n                if (op.insert != null) {\n                    return typeof op.insert === 'string' ? op.insert : NULL_CHARACTER;\n                }\n                var prep = delta === other ? 'on' : 'with';\n                throw new Error('diff() called ' + prep + ' non-document');\n            })\n                .join('');\n        });\n        var retDelta = new Delta();\n        var diffResult = fast_diff_1.default(strings[0], strings[1], cursor);\n        var thisIter = Op_1.default.iterator(this.ops);\n        var otherIter = Op_1.default.iterator(other.ops);\n        diffResult.forEach(function (component) {\n            var length = component[1].length;\n            while (length > 0) {\n                var opLength = 0;\n                switch (component[0]) {\n                    case fast_diff_1.default.INSERT:\n                        opLength = Math.min(otherIter.peekLength(), length);\n                        retDelta.push(otherIter.next(opLength));\n                        break;\n                    case fast_diff_1.default.DELETE:\n                        opLength = Math.min(length, thisIter.peekLength());\n                        thisIter.next(opLength);\n                        retDelta.delete(opLength);\n                        break;\n                    case fast_diff_1.default.EQUAL:\n                        opLength = Math.min(thisIter.peekLength(), otherIter.peekLength(), length);\n                        var thisOp = thisIter.next(opLength);\n                        var otherOp = otherIter.next(opLength);\n                        if (deep_equal_1.default(thisOp.insert, otherOp.insert)) {\n                            retDelta.retain(opLength, AttributeMap_1.default.diff(thisOp.attributes, otherOp.attributes));\n                        }\n                        else {\n                            retDelta.push(otherOp).delete(opLength);\n                        }\n                        break;\n                }\n                length -= opLength;\n            }\n        });\n        return retDelta.chop();\n    };\n    Delta.prototype.eachLine = function (predicate, newline) {\n        if (newline === void 0) { newline = '\\n'; }\n        var iter = Op_1.default.iterator(this.ops);\n        var line = new Delta();\n        var i = 0;\n        while (iter.hasNext()) {\n            if (iter.peekType() !== 'insert') {\n                return;\n            }\n            var thisOp = iter.peek();\n            var start = Op_1.default.length(thisOp) - iter.peekLength();\n            var index = typeof thisOp.insert === 'string'\n                ? thisOp.insert.indexOf(newline, start) - start\n                : -1;\n            if (index < 0) {\n                line.push(iter.next());\n            }\n            else if (index > 0) {\n                line.push(iter.next(index));\n            }\n            else {\n                if (predicate(line, iter.next(1).attributes || {}, i) === false) {\n                    return;\n                }\n                i += 1;\n                line = new Delta();\n            }\n        }\n        if (line.length() > 0) {\n            predicate(line, {}, i);\n        }\n    };\n    Delta.prototype.invert = function (base) {\n        var inverted = new Delta();\n        this.reduce(function (baseIndex, op) {\n            if (op.insert) {\n                inverted.delete(Op_1.default.length(op));\n            }\n            else if (op.retain && op.attributes == null) {\n                inverted.retain(op.retain);\n                return baseIndex + op.retain;\n            }\n            else if (op.delete || (op.retain && op.attributes)) {\n                var length_2 = (op.delete || op.retain);\n                var slice = base.slice(baseIndex, baseIndex + length_2);\n                slice.forEach(function (baseOp) {\n                    if (op.delete) {\n                        inverted.push(baseOp);\n                    }\n                    else if (op.retain && op.attributes) {\n                        inverted.retain(Op_1.default.length(baseOp), AttributeMap_1.default.invert(op.attributes, baseOp.attributes));\n                    }\n                });\n                return baseIndex + length_2;\n            }\n            return baseIndex;\n        }, 0);\n        return inverted.chop();\n    };\n    Delta.prototype.transform = function (arg, priority) {\n        if (priority === void 0) { priority = false; }\n        priority = !!priority;\n        if (typeof arg === 'number') {\n            return this.transformPosition(arg, priority);\n        }\n        var other = arg;\n        var thisIter = Op_1.default.iterator(this.ops);\n        var otherIter = Op_1.default.iterator(other.ops);\n        var delta = new Delta();\n        while (thisIter.hasNext() || otherIter.hasNext()) {\n            if (thisIter.peekType() === 'insert' &&\n                (priority || otherIter.peekType() !== 'insert')) {\n                delta.retain(Op_1.default.length(thisIter.next()));\n            }\n            else if (otherIter.peekType() === 'insert') {\n                delta.push(otherIter.next());\n            }\n            else {\n                var length_3 = Math.min(thisIter.peekLength(), otherIter.peekLength());\n                var thisOp = thisIter.next(length_3);\n                var otherOp = otherIter.next(length_3);\n                if (thisOp.delete) {\n                    // Our delete either makes their delete redundant or removes their retain\n                    continue;\n                }\n                else if (otherOp.delete) {\n                    delta.push(otherOp);\n                }\n                else {\n                    // We retain either their retain or insert\n                    delta.retain(length_3, AttributeMap_1.default.transform(thisOp.attributes, otherOp.attributes, priority));\n                }\n            }\n        }\n        return delta.chop();\n    };\n    Delta.prototype.transformPosition = function (index, priority) {\n        if (priority === void 0) { priority = false; }\n        priority = !!priority;\n        var thisIter = Op_1.default.iterator(this.ops);\n        var offset = 0;\n        while (thisIter.hasNext() && offset <= index) {\n            var length_4 = thisIter.peekLength();\n            var nextType = thisIter.peekType();\n            thisIter.next();\n            if (nextType === 'delete') {\n                index -= Math.min(length_4, index - offset);\n                continue;\n            }\n            else if (nextType === 'insert' && (offset < index || !priority)) {\n                index += length_4;\n            }\n            offset += length_4;\n        }\n        return index;\n    };\n    Delta.Op = Op_1.default;\n    Delta.AttributeMap = AttributeMap_1.default;\n    return Delta;\n}());\nmodule.exports = Delta;\n//# sourceMappingURL=Delta.js.map","import EventEmitter from 'eventemitter3';\nimport instances from './instances';\nimport logger from './logger';\nimport { SHADOW_SELECTIONCHANGE } from './shadow-selection-polyfill';\n\nconst debug = logger('quill:events');\nconst EVENTS = [SHADOW_SELECTIONCHANGE, 'mousedown', 'mouseup', 'click'];\nconst EMITTERS = [];\n\nEVENTS.forEach(eventName => {\n  document.addEventListener(eventName, (...args) => {\n    EMITTERS.forEach(emitter => {\n      emitter.handleDOM(...args);\n    });\n  });\n});\n\nclass Emitter extends EventEmitter {\n  constructor() {\n    super();\n    this.listeners = {};\n    EMITTERS.push(this);\n    this.on('error', debug.error);\n  }\n\n  emit(...args) {\n    debug.log.call(debug, ...args);\n    super.emit(...args);\n  }\n\n  handleDOM(event, ...args) {\n    const target = (event.composedPath ? event.composedPath()[0] : event.target);\n    const containsNode = (node, target) => {\n      if (!('getRootNode' in document) || target.getRootNode() === document) {\n        return node.contains(target);\n      }\n\n      while (!node.contains(target)) {\n        const root = target.getRootNode();\n        if (!root || !root.host) {\n          return false;\n        }\n        target = root.host;\n      }\n\n      return true;\n    };\n    (this.listeners[event.type] || []).forEach(({ node, handler }) => {\n      if (target === node || containsNode(node, target)) {\n        handler(event, ...args);\n      }\n    });\n  }\n\n  listenDOM(eventName, node, handler) {\n    if (!this.listeners[eventName]) {\n      this.listeners[eventName] = [];\n    }\n    this.listeners[eventName].push({ node, handler });\n  }\n}\n\nEmitter.events = {\n  EDITOR_CHANGE: 'editor-change',\n  SCROLL_BEFORE_UPDATE: 'scroll-before-update',\n  SCROLL_BLOT_MOUNT: 'scroll-blot-mount',\n  SCROLL_BLOT_UNMOUNT: 'scroll-blot-unmount',\n  SCROLL_OPTIMIZE: 'scroll-optimize',\n  SCROLL_UPDATE: 'scroll-update',\n  SELECTION_CHANGE: 'selection-change',\n  TEXT_CHANGE: 'text-change',\n};\nEmitter.sources = {\n  API: 'api',\n  SILENT: 'silent',\n  USER: 'user',\n};\n\nexport default Emitter;\n","import extend from 'extend';\nimport Delta from 'quill-delta';\nimport {\n  AttributorStore,\n  BlockBlot,\n  EmbedBlot,\n  LeafBlot,\n  Scope,\n} from 'parchment';\nimport Break from './break';\nimport Inline from './inline';\nimport TextBlot from './text';\n\nconst NEWLINE_LENGTH = 1;\n\nclass Block extends BlockBlot {\n  constructor(scroll, domNode) {\n    super(scroll, domNode);\n    this.cache = {};\n  }\n\n  delta() {\n    if (this.cache.delta == null) {\n      this.cache.delta = blockDelta(this);\n    }\n    return this.cache.delta;\n  }\n\n  deleteAt(index, length) {\n    super.deleteAt(index, length);\n    this.cache = {};\n  }\n\n  formatAt(index, length, name, value) {\n    if (length <= 0) return;\n    if (this.scroll.query(name, Scope.BLOCK)) {\n      if (index + length === this.length()) {\n        this.format(name, value);\n      }\n    } else {\n      super.formatAt(\n        index,\n        Math.min(length, this.length() - index - 1),\n        name,\n        value,\n      );\n    }\n    this.cache = {};\n  }\n\n  insertAt(index, value, def) {\n    if (def != null) {\n      super.insertAt(index, value, def);\n      this.cache = {};\n      return;\n    }\n    if (value.length === 0) return;\n    const lines = value.split('\\n');\n    const text = lines.shift();\n    if (text.length > 0) {\n      if (index < this.length() - 1 || this.children.tail == null) {\n        super.insertAt(Math.min(index, this.length() - 1), text);\n      } else {\n        this.children.tail.insertAt(this.children.tail.length(), text);\n      }\n      this.cache = {};\n    }\n    let block = this;\n    lines.reduce((lineIndex, line) => {\n      block = block.split(lineIndex, true);\n      block.insertAt(0, line);\n      return line.length;\n    }, index + text.length);\n  }\n\n  insertBefore(blot, ref) {\n    const { head } = this.children;\n    super.insertBefore(blot, ref);\n    if (head instanceof Break) {\n      head.remove();\n    }\n    this.cache = {};\n  }\n\n  length() {\n    if (this.cache.length == null) {\n      this.cache.length = super.length() + NEWLINE_LENGTH;\n    }\n    return this.cache.length;\n  }\n\n  moveChildren(target, ref) {\n    super.moveChildren(target, ref);\n    this.cache = {};\n  }\n\n  optimize(context) {\n    super.optimize(context);\n    this.cache = {};\n  }\n\n  path(index) {\n    return super.path(index, true);\n  }\n\n  removeChild(child) {\n    super.removeChild(child);\n    this.cache = {};\n  }\n\n  split(index, force = false) {\n    if (force && (index === 0 || index >= this.length() - NEWLINE_LENGTH)) {\n      const clone = this.clone();\n      if (index === 0) {\n        this.parent.insertBefore(clone, this);\n        return this;\n      }\n      this.parent.insertBefore(clone, this.next);\n      return clone;\n    }\n    const next = super.split(index, force);\n    this.cache = {};\n    return next;\n  }\n}\nBlock.blotName = 'block';\nBlock.tagName = 'P';\nBlock.defaultChild = Break;\nBlock.allowedChildren = [Break, Inline, EmbedBlot, TextBlot];\n\nclass BlockEmbed extends EmbedBlot {\n  attach() {\n    super.attach();\n    this.attributes = new AttributorStore(this.domNode);\n  }\n\n  delta() {\n    return new Delta().insert(\n      this.value(),\n      extend(this.formats(), this.attributes.values()),\n    );\n  }\n\n  format(name, value) {\n    const attribute = this.scroll.query(name, Scope.BLOCK_ATTRIBUTE);\n    if (attribute != null) {\n      this.attributes.attribute(attribute, value);\n    }\n  }\n\n  formatAt(index, length, name, value) {\n    this.format(name, value);\n  }\n\n  insertAt(index, value, def) {\n    if (typeof value === 'string' && value.endsWith('\\n')) {\n      const block = this.scroll.create(Block.blotName);\n      this.parent.insertBefore(block, index === 0 ? this : this.next);\n      block.insertAt(0, value.slice(0, -1));\n    } else {\n      super.insertAt(index, value, def);\n    }\n  }\n}\nBlockEmbed.scope = Scope.BLOCK_BLOT;\n// It is important for cursor behavior BlockEmbeds use tags that are block level elements\n\nfunction blockDelta(blot, filter = true) {\n  return blot\n    .descendants(LeafBlot)\n    .reduce((delta, leaf) => {\n      if (leaf.length() === 0) {\n        return delta;\n      }\n      return delta.insert(leaf.value(), bubbleFormats(leaf, {}, filter));\n    }, new Delta())\n    .insert('\\n', bubbleFormats(blot));\n}\n\nfunction bubbleFormats(blot, formats = {}, filter = true) {\n  if (blot == null) return formats;\n  if (typeof blot.formats === 'function') {\n    formats = extend(formats, blot.formats());\n    if (filter) {\n      // exclude syntax highlighting from deltas and getFormat()\n      delete formats['code-token'];\n    }\n  }\n  if (\n    blot.parent == null ||\n    blot.parent.statics.blotName === 'scroll' ||\n    blot.parent.statics.scope !== blot.statics.scope\n  ) {\n    return formats;\n  }\n  return bubbleFormats(blot.parent, formats, filter);\n}\n\nexport { blockDelta, bubbleFormats, BlockEmbed, Block as default };\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","import { TextBlot } from 'parchment';\n\nclass Text extends TextBlot {}\n\nfunction escapeText(text) {\n  return text.replace(/[&<>\"']/g, s => {\n    // https://lodash.com/docs#escape\n    const entityMap = {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#39;',\n    };\n    return entityMap[s];\n  });\n}\n\nexport { Text as default, escapeText };\n","import { EmbedBlot, InlineBlot, Scope } from 'parchment';\nimport Break from './break';\nimport Text from './text';\n\nclass Inline extends InlineBlot {\n  static compare(self, other) {\n    const selfIndex = Inline.order.indexOf(self);\n    const otherIndex = Inline.order.indexOf(other);\n    if (selfIndex >= 0 || otherIndex >= 0) {\n      return selfIndex - otherIndex;\n    }\n    if (self === other) {\n      return 0;\n    }\n    if (self < other) {\n      return -1;\n    }\n    return 1;\n  }\n\n  formatAt(index, length, name, value) {\n    if (\n      Inline.compare(this.statics.blotName, name) < 0 &&\n      this.scroll.query(name, Scope.BLOT)\n    ) {\n      const blot = this.isolate(index, length);\n      if (value) {\n        blot.wrap(name, value);\n      }\n    } else {\n      super.formatAt(index, length, name, value);\n    }\n  }\n\n  optimize(context) {\n    super.optimize(context);\n    if (\n      this.parent instanceof Inline &&\n      Inline.compare(this.statics.blotName, this.parent.statics.blotName) > 0\n    ) {\n      const parent = this.parent.isolate(this.offset(), this.length());\n      this.moveChildren(parent);\n      parent.wrap(this);\n    }\n  }\n}\nInline.allowedChildren = [Inline, Break, EmbedBlot, Text];\n// Lower index means deeper in the DOM tree, since not found (-1) is for embeds\nInline.order = [\n  'cursor',\n  'inline', // Must be lower\n  'underline',\n  'strike',\n  'italic',\n  'bold',\n  'script',\n  'link',\n  'code', // Must be higher\n];\n\nexport default Inline;\n","class Module {\n  constructor(quill, options = {}) {\n    this.quill = quill;\n    this.options = options;\n  }\n}\nModule.DEFAULTS = {};\n\nexport default Module;\n","import { EmbedBlot } from 'parchment';\n\nclass Break extends EmbedBlot {\n  static value() {\n    return undefined;\n  }\n\n  optimize() {\n    if (this.prev || this.next) {\n      this.remove();\n    }\n  }\n\n  length() {\n    return 0;\n  }\n\n  value() {\n    return '';\n  }\n}\nBreak.blotName = 'break';\nBreak.tagName = 'BR';\n\nexport default Break;\n","import Block from '../blots/block';\nimport Break from '../blots/break';\nimport Cursor from '../blots/cursor';\nimport Inline from '../blots/inline';\nimport TextBlot, { escapeText } from '../blots/text';\nimport Container from '../blots/container';\nimport Quill from '../core/quill';\n\nclass CodeBlockContainer extends Container {\n  static create(value) {\n    const domNode = super.create(value);\n    domNode.setAttribute('spellcheck', false);\n    return domNode;\n  }\n\n  html(index, length) {\n    const text = this.children\n      .map(child => child.domNode.innerText)\n      .join('\\n')\n      .slice(index, index + length);\n    return `<pre>${escapeText(text)}</pre>`;\n  }\n}\n\nclass CodeBlock extends Block {\n  static register() {\n    Quill.register(CodeBlockContainer);\n  }\n}\n\nclass Code extends Inline {}\nCode.blotName = 'code';\nCode.tagName = 'CODE';\n\nCodeBlock.blotName = 'code-block';\nCodeBlock.className = 'ql-code-block';\nCodeBlock.tagName = 'DIV';\nCodeBlockContainer.blotName = 'code-block-container';\nCodeBlockContainer.className = 'ql-code-block-container';\nCodeBlockContainer.tagName = 'DIV';\n\nCodeBlockContainer.allowedChildren = [CodeBlock];\n\nCodeBlock.allowedChildren = [TextBlot, Break, Cursor];\nCodeBlock.requiredContainer = CodeBlockContainer;\nCodeBlock.TAB = '  ';\n\nexport { Code, CodeBlockContainer, CodeBlock as default };\n","const levels = ['error', 'warn', 'log', 'info'];\nlet level = 'warn';\n\nfunction debug(method, ...args) {\n  if (levels.indexOf(method) <= levels.indexOf(level)) {\n    console[method](...args); // eslint-disable-line no-console\n  }\n}\n\nfunction namespace(ns) {\n  return levels.reduce((logger, method) => {\n    logger[method] = debug.bind(console, method, ns);\n    return logger;\n  }, {});\n}\n\nnamespace.level = newLevel => {\n  level = newLevel;\n};\ndebug.level = namespace.level;\n\nexport default namespace;\n","import { ContainerBlot } from 'parchment';\n\nclass Container extends ContainerBlot {}\n\nexport default Container;\n","var clone = (function() {\n'use strict';\n\nfunction _instanceof(obj, type) {\n  return type != null && obj instanceof type;\n}\n\nvar nativeMap;\ntry {\n  nativeMap = Map;\n} catch(_) {\n  // maybe a reference error because no `Map`. Give it a dummy value that no\n  // value will ever be an instanceof.\n  nativeMap = function() {};\n}\n\nvar nativeSet;\ntry {\n  nativeSet = Set;\n} catch(_) {\n  nativeSet = function() {};\n}\n\nvar nativePromise;\ntry {\n  nativePromise = Promise;\n} catch(_) {\n  nativePromise = function() {};\n}\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n *    should be cloned as well. Non-enumerable properties on the prototype\n *    chain will be ignored. (optional - false by default)\n*/\nfunction clone(parent, circular, depth, prototype, includeNonEnumerable) {\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    includeNonEnumerable = circular.includeNonEnumerable;\n    circular = circular.circular;\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth === 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      child = new nativeMap();\n    } else if (_instanceof(parent, nativeSet)) {\n      child = new nativeSet();\n    } else if (_instanceof(parent, nativePromise)) {\n      child = new nativePromise(function (resolve, reject) {\n        parent.then(function(value) {\n          resolve(_clone(value, depth - 1));\n        }, function(err) {\n          reject(_clone(err, depth - 1));\n        });\n      });\n    } else if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      if (Buffer.allocUnsafe) {\n        // Node.js >= 4.5.0\n        child = Buffer.allocUnsafe(parent.length);\n      } else {\n        // Older Node.js versions\n        child = new Buffer(parent.length);\n      }\n      parent.copy(child);\n      return child;\n    } else if (_instanceof(parent, Error)) {\n      child = Object.create(parent);\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      parent.forEach(function(value, key) {\n        var keyChild = _clone(key, depth - 1);\n        var valueChild = _clone(value, depth - 1);\n        child.set(keyChild, valueChild);\n      });\n    }\n    if (_instanceof(parent, nativeSet)) {\n      parent.forEach(function(value) {\n        var entryChild = _clone(value, depth - 1);\n        child.add(entryChild);\n      });\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(parent);\n      for (var i = 0; i < symbols.length; i++) {\n        // Don't need to worry about cloning a symbol because it is a primitive,\n        // like a number or string.\n        var symbol = symbols[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n          continue;\n        }\n        child[symbol] = _clone(parent[symbol], depth - 1);\n        if (!descriptor.enumerable) {\n          Object.defineProperty(child, symbol, {\n            enumerable: false\n          });\n        }\n      }\n    }\n\n    if (includeNonEnumerable) {\n      var allPropertyNames = Object.getOwnPropertyNames(parent);\n      for (var i = 0; i < allPropertyNames.length; i++) {\n        var propertyName = allPropertyNames[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n        if (descriptor && descriptor.enumerable) {\n          continue;\n        }\n        child[propertyName] = _clone(parent[propertyName], depth - 1);\n        Object.defineProperty(child, propertyName, {\n          enumerable: false\n        });\n      }\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n}\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n}\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n}\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n}\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n}\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n","var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n","import { EmbedBlot, Scope } from 'parchment';\nimport TextBlot from './text';\n\nclass Cursor extends EmbedBlot {\n  static value() {\n    return undefined;\n  }\n\n  constructor(scroll, domNode, selection) {\n    super(scroll, domNode);\n    this.selection = selection;\n    this.textNode = document.createTextNode(Cursor.CONTENTS);\n    this.domNode.appendChild(this.textNode);\n    this.savedLength = 0;\n  }\n\n  detach() {\n    // super.detach() will also clear domNode.__blot\n    if (this.parent != null) this.parent.removeChild(this);\n  }\n\n  format(name, value) {\n    if (this.savedLength !== 0) {\n      super.format(name, value);\n      return;\n    }\n    let target = this;\n    let index = 0;\n    while (target != null && target.statics.scope !== Scope.BLOCK_BLOT) {\n      index += target.offset(target.parent);\n      target = target.parent;\n    }\n    if (target != null) {\n      this.savedLength = Cursor.CONTENTS.length;\n      target.optimize();\n      target.formatAt(index, Cursor.CONTENTS.length, name, value);\n      this.savedLength = 0;\n    }\n  }\n\n  index(node, offset) {\n    if (node === this.textNode) return 0;\n    return super.index(node, offset);\n  }\n\n  length() {\n    return this.savedLength;\n  }\n\n  position() {\n    return [this.textNode, this.textNode.data.length];\n  }\n\n  remove() {\n    super.remove();\n    this.parent = null;\n  }\n\n  restore() {\n    if (this.selection.composing || this.parent == null) return null;\n    const range = this.selection.getNativeRange();\n    // Link format will insert text outside of anchor tag\n    while (\n      this.domNode.lastChild != null &&\n      this.domNode.lastChild !== this.textNode\n    ) {\n      this.domNode.parentNode.insertBefore(\n        this.domNode.lastChild,\n        this.domNode,\n      );\n    }\n\n    const prevTextBlot = this.prev instanceof TextBlot ? this.prev : null;\n    const prevTextLength = prevTextBlot ? prevTextBlot.length() : 0;\n    const nextTextBlot = this.next instanceof TextBlot ? this.next : null;\n    const nextText = nextTextBlot ? nextTextBlot.text : '';\n    const { textNode } = this;\n    // take text from inside this blot and reset it\n    const newText = textNode.data.split(Cursor.CONTENTS).join('');\n    textNode.data = Cursor.CONTENTS;\n\n    // proactively merge TextBlots around cursor so that optimization\n    // doesn't lose the cursor.  the reason we are here in cursor.restore\n    // could be that the user clicked in prevTextBlot or nextTextBlot, or\n    // the user typed something.\n    let mergedTextBlot;\n    if (prevTextBlot) {\n      mergedTextBlot = prevTextBlot;\n      if (newText || nextTextBlot) {\n        prevTextBlot.insertAt(prevTextBlot.length(), newText + nextText);\n        if (nextTextBlot) {\n          nextTextBlot.remove();\n        }\n      }\n    } else if (nextTextBlot) {\n      mergedTextBlot = nextTextBlot;\n      nextTextBlot.insertAt(0, newText);\n    } else {\n      const newTextNode = document.createTextNode(newText);\n      mergedTextBlot = this.scroll.create(newTextNode);\n      this.parent.insertBefore(mergedTextBlot, this);\n    }\n\n    this.remove();\n    if (range) {\n      // calculate selection to restore\n      const remapOffset = (node, offset) => {\n        if (prevTextBlot && node === prevTextBlot.domNode) {\n          return offset;\n        }\n        if (node === textNode) {\n          return prevTextLength + offset - 1;\n        }\n        if (nextTextBlot && node === nextTextBlot.domNode) {\n          return prevTextLength + newText.length + offset;\n        }\n        return null;\n      };\n\n      const start = remapOffset(range.start.node, range.start.offset);\n      const end = remapOffset(range.end.node, range.end.offset);\n      if (start !== null && end !== null) {\n        return {\n          startNode: mergedTextBlot.domNode,\n          startOffset: start,\n          endNode: mergedTextBlot.domNode,\n          endOffset: end,\n        };\n      }\n    }\n    return null;\n  }\n\n  update(mutations, context) {\n    if (\n      mutations.some(mutation => {\n        return (\n          mutation.type === 'characterData' && mutation.target === this.textNode\n        );\n      })\n    ) {\n      const range = this.restore();\n      if (range) context.range = range;\n    }\n  }\n\n  value() {\n    return '';\n  }\n}\nCursor.blotName = 'cursor';\nCursor.className = 'ql-cursor';\nCursor.tagName = 'span';\nCursor.CONTENTS = '\\uFEFF'; // Zero width no break space\n\nexport default Cursor;\n","import { LeafBlot, Scope } from 'parchment';\nimport clone from 'clone';\nimport equal from 'deep-equal';\nimport Emitter from './emitter';\nimport logger from './logger';\nimport { SHADOW_SELECTIONCHANGE, getRange, addRange, usePolyfill } from './shadow-selection-polyfill';\n\nconst debug = logger('quill:selection');\n\nclass Range {\n  constructor(index, length = 0) {\n    this.index = index;\n    this.length = length;\n  }\n}\n\nclass Selection {\n  constructor(scroll, emitter) {\n    this.emitter = emitter;\n    this.scroll = scroll;\n    this.composing = false;\n    this.mouseDown = false;\n    this.root = this.scroll.domNode;\n    this.rootDocument = (this.root.getRootNode ? this.root.getRootNode() : document);\n    this.cursor = this.scroll.create('cursor', this);\n    // savedRange is last non-null range\n    this.savedRange = new Range(0, 0);\n    this.lastRange = this.savedRange;\n    this.handleComposition();\n    this.handleDragging();\n    if (!usePolyfill) {\n      this.emitter.listenDOM(SHADOW_SELECTIONCHANGE, document, () => {\n        if (!this.mouseDown && !this.composing) {\n          setTimeout(this.update.bind(this, Emitter.sources.USER), 1);\n        }\n      });\n    }\n    this.emitter.on(Emitter.events.SCROLL_BEFORE_UPDATE, () => {\n      if (!this.hasFocus()) return;\n      const native = this.getNativeRange();\n      if (native == null) return;\n      if (native.start.node === this.cursor.textNode) return; // cursor.restore() will handle\n      this.emitter.once(Emitter.events.SCROLL_UPDATE, () => {\n        try {\n          if (\n            this.root.contains(native.start.node) &&\n            this.root.contains(native.end.node)\n          ) {\n            this.setNativeRange(\n              native.start.node,\n              native.start.offset,\n              native.end.node,\n              native.end.offset,\n            );\n          }\n          this.update(Emitter.sources.SILENT);\n        } catch (ignored) {\n          // ignore\n        }\n      });\n    });\n    this.emitter.on(Emitter.events.SCROLL_OPTIMIZE, (mutations, context) => {\n      if (context.range) {\n        const { startNode, startOffset, endNode, endOffset } = context.range;\n        this.setNativeRange(startNode, startOffset, endNode, endOffset);\n        this.update(Emitter.sources.SILENT);\n      }\n    });\n    this.update(Emitter.sources.SILENT);\n  }\n\n  handleComposition() {\n    this.root.addEventListener('compositionstart', () => {\n      this.composing = true;\n      this.scroll.batchStart();\n    });\n    this.root.addEventListener('compositionend', () => {\n      this.scroll.batchEnd();\n      this.composing = false;\n      if (this.cursor.parent) {\n        const range = this.cursor.restore();\n        if (!range) return;\n        setTimeout(() => {\n          this.setNativeRange(\n            range.startNode,\n            range.startOffset,\n            range.endNode,\n            range.endOffset,\n          );\n        }, 1);\n      }\n    });\n  }\n\n  handleDragging() {\n    this.emitter.listenDOM('mousedown', document.body, () => {\n      this.mouseDown = true;\n    });\n    this.emitter.listenDOM('mouseup', document.body, () => {\n      this.mouseDown = false;\n      this.update(Emitter.sources.USER);\n    });\n  }\n\n  focus() {\n    if (this.hasFocus()) return;\n    this.root.focus();\n    this.setRange(this.savedRange);\n  }\n\n  format(format, value) {\n    this.scroll.update();\n    const nativeRange = this.getNativeRange();\n    if (\n      nativeRange == null ||\n      !nativeRange.native.collapsed ||\n      this.scroll.query(format, Scope.BLOCK)\n    )\n      return;\n    if (nativeRange.start.node !== this.cursor.textNode) {\n      const blot = this.scroll.find(nativeRange.start.node, false);\n      if (blot == null) return;\n      // TODO Give blot ability to not split\n      if (blot instanceof LeafBlot) {\n        const after = blot.split(nativeRange.start.offset);\n        blot.parent.insertBefore(this.cursor, after);\n      } else {\n        blot.insertBefore(this.cursor, nativeRange.start.node); // Should never happen\n      }\n      this.cursor.attach();\n    }\n    this.cursor.format(format, value);\n    this.scroll.optimize();\n    this.setNativeRange(this.cursor.textNode, this.cursor.textNode.data.length);\n    this.update();\n  }\n\n  getBounds(index, length = 0) {\n    const scrollLength = this.scroll.length();\n    index = Math.min(index, scrollLength - 1);\n    length = Math.min(index + length, scrollLength - 1) - index;\n    let node;\n    let [leaf, offset] = this.scroll.leaf(index);\n    if (leaf == null) return null;\n    [node, offset] = leaf.position(offset, true);\n    const range = document.createRange();\n    if (length > 0) {\n      range.setStart(node, offset);\n      [leaf, offset] = this.scroll.leaf(index + length);\n      if (leaf == null) return null;\n      [node, offset] = leaf.position(offset, true);\n      range.setEnd(node, offset);\n      return range.getBoundingClientRect();\n    }\n    let side = 'left';\n    let rect;\n    if (node instanceof Text) {\n      if (offset < node.data.length) {\n        range.setStart(node, offset);\n        range.setEnd(node, offset + 1);\n      } else {\n        range.setStart(node, offset - 1);\n        range.setEnd(node, offset);\n        side = 'right';\n      }\n      rect = range.getBoundingClientRect();\n    } else {\n      rect = leaf.domNode.getBoundingClientRect();\n      if (offset > 0) side = 'right';\n    }\n    return {\n      bottom: rect.top + rect.height,\n      height: rect.height,\n      left: rect[side],\n      right: rect[side],\n      top: rect.top,\n      width: 0,\n    };\n  }\n\n  getNativeRange() {\n    let nativeRange = getRange(this.rootDocument);\n    if (nativeRange == null) return null;\n    const range = this.normalizeNative(nativeRange);\n    debug.info('getNativeRange', range);\n    return range;\n  }\n\n  getRange() {\n    const normalized = this.getNativeRange();\n    if (normalized == null) return [null, null];\n    const range = this.normalizedToRange(normalized);\n    return [range, normalized];\n  }\n\n  hasFocus() {\n    return (\n      this.rootDocument.activeElement === this.root ||\n      contains(this.root, this.rootDocument.activeElement)\n    );\n  }\n\n  normalizedToRange(range) {\n    const positions = [[range.start.node, range.start.offset]];\n    if (!range.native.collapsed) {\n      positions.push([range.end.node, range.end.offset]);\n    }\n    const indexes = positions.map(position => {\n      const [node, offset] = position;\n      const blot = this.scroll.find(node, true);\n      const index = blot.offset(this.scroll);\n      if (offset === 0) {\n        return index;\n      }\n      if (blot instanceof LeafBlot) {\n        return index + blot.index(node, offset);\n      }\n      return index + blot.length();\n    });\n    const end = Math.min(Math.max(...indexes), this.scroll.length() - 1);\n    const start = Math.min(end, ...indexes);\n    return new Range(start, end - start);\n  }\n\n  normalizeNative(nativeRange) {\n    if (\n      !contains(this.root, nativeRange.startContainer) ||\n      (!nativeRange.collapsed && !contains(this.root, nativeRange.endContainer))\n    ) {\n      return null;\n    }\n    const range = {\n      start: {\n        node: nativeRange.startContainer,\n        offset: nativeRange.startOffset,\n      },\n      end: { node: nativeRange.endContainer, offset: nativeRange.endOffset },\n      native: nativeRange,\n    };\n    [range.start, range.end].forEach(position => {\n      let { node, offset } = position;\n      while (!(node instanceof Text) && node.childNodes.length > 0) {\n        if (node.childNodes.length > offset) {\n          node = node.childNodes[offset];\n          offset = 0;\n        } else if (node.childNodes.length === offset) {\n          node = node.lastChild;\n          if (node instanceof Text) {\n            offset = node.data.length;\n          } else if (node.childNodes.length > 0) {\n            // Container case\n            offset = node.childNodes.length;\n          } else {\n            // Embed case\n            offset = node.childNodes.length + 1;\n          }\n        } else {\n          break;\n        }\n      }\n      position.node = node;\n      position.offset = offset;\n    });\n    return range;\n  }\n\n  rangeToNative(range) {\n    const indexes = range.collapsed\n      ? [range.index]\n      : [range.index, range.index + range.length];\n    const args = [];\n    const scrollLength = this.scroll.length();\n    indexes.forEach((index, i) => {\n      index = Math.min(scrollLength - 1, index);\n      const [leaf, leafOffset] = this.scroll.leaf(index);\n      const [node, offset] = leaf.position(leafOffset, i !== 0);\n      args.push(node, offset);\n    });\n    if (args.length < 2) {\n      return args.concat(args);\n    }\n    return args;\n  }\n\n  scrollIntoView(scrollingContainer) {\n    const range = this.lastRange;\n    if (range == null) return;\n    const bounds = this.getBounds(range.index, range.length);\n    if (bounds == null) return;\n    const limit = this.scroll.length() - 1;\n    const [first] = this.scroll.line(Math.min(range.index, limit));\n    let last = first;\n    if (range.length > 0) {\n      [last] = this.scroll.line(Math.min(range.index + range.length, limit));\n    }\n    if (first == null || last == null) return;\n    const scrollBounds = scrollingContainer.getBoundingClientRect();\n    if (bounds.top < scrollBounds.top) {\n      scrollingContainer.scrollTop -= scrollBounds.top - bounds.top;\n    } else if (bounds.bottom > scrollBounds.bottom) {\n      scrollingContainer.scrollTop += bounds.bottom - scrollBounds.bottom;\n    }\n  }\n\n  setNativeRange(\n    startNode,\n    startOffset,\n    endNode = startNode,\n    endOffset = startOffset,\n    force = false,\n  ) {\n    debug.info('setNativeRange', startNode, startOffset, endNode, endOffset);\n    if (\n      startNode != null &&\n      (this.root.parentNode == null ||\n        startNode.parentNode == null ||\n        endNode.parentNode == null)\n    ) {\n      return;\n    }\n    let selection = typeof this.rootDocument.getSelection === 'function' ? this.rootDocument.getSelection() : document.getSelection();\n    if (selection == null) return;\n    if (startNode != null) {\n      if (!this.hasFocus()) this.root.focus();\n      const { native } = this.getNativeRange() || {};\n      if (\n        native == null ||\n        force ||\n        startNode !== native.startContainer ||\n        startOffset !== native.startOffset ||\n        endNode !== native.endContainer ||\n        endOffset !== native.endOffset\n      ) {\n        if (startNode.tagName === 'BR') {\n          startOffset = Array.from(startNode.parentNode.childNodes).indexOf(\n            startNode,\n          );\n          startNode = startNode.parentNode;\n        }\n        if (endNode.tagName === 'BR') {\n          endOffset = Array.from(endNode.parentNode.childNodes).indexOf(\n            endNode,\n          );\n          endNode = endNode.parentNode;\n        }\n        const range = document.createRange();\n        range.setStart(startNode, startOffset);\n        range.setEnd(endNode, endOffset);\n        addRange(this.rootDocument, selection, range);\n      }\n    } else {\n      selection.removeAllRanges();\n      this.root.blur();\n    }\n  }\n\n  setRange(range, force = false, source = Emitter.sources.API) {\n    if (typeof force === 'string') {\n      source = force;\n      force = false;\n    }\n    debug.info('setRange', range);\n    if (range != null) {\n      const args = this.rangeToNative(range);\n      this.setNativeRange(...args, force);\n    } else {\n      this.setNativeRange(null);\n    }\n    this.update(source);\n  }\n\n  update(source = Emitter.sources.USER) {\n    const oldRange = this.lastRange;\n    const [lastRange, nativeRange] = this.getRange();\n    this.lastRange = lastRange;\n    if (this.lastRange != null) {\n      this.savedRange = this.lastRange;\n    }\n    if (!equal(oldRange, this.lastRange)) {\n      if (\n        !this.composing &&\n        nativeRange != null &&\n        nativeRange.native.collapsed &&\n        nativeRange.start.node !== this.cursor.textNode\n      ) {\n        const range = this.cursor.restore();\n        if (range) {\n          this.setNativeRange(\n            range.startNode,\n            range.startOffset,\n            range.endNode,\n            range.endOffset,\n          );\n        }\n      }\n      const args = [\n        Emitter.events.SELECTION_CHANGE,\n        clone(this.lastRange),\n        clone(oldRange),\n        source,\n      ];\n      this.emitter.emit(Emitter.events.EDITOR_CHANGE, ...args);\n      if (source !== Emitter.sources.SILENT) {\n        this.emitter.emit(...args);\n      }\n    }\n  }\n}\n\nfunction contains(parent, descendant) {\n  try {\n    // Firefox inserts inaccessible nodes around video elements\n    descendant.parentNode; // eslint-disable-line no-unused-expressions\n  } catch (e) {\n    return false;\n  }\n  return parent.contains(descendant);\n}\n\nexport { Range, Selection as default };\n","import { ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nclass ColorAttributor extends StyleAttributor {\n  value(domNode) {\n    let value = super.value(domNode);\n    if (!value.startsWith('rgb(')) return value;\n    value = value.replace(/^[^\\d]+/, '').replace(/[^\\d]+$/, '');\n    const hex = value\n      .split(',')\n      .map(component => `00${parseInt(component, 10).toString(16)}`.slice(-2))\n      .join('');\n    return `#${hex}`;\n  }\n}\n\nconst ColorClass = new ClassAttributor('color', 'ql-color', {\n  scope: Scope.INLINE,\n});\nconst ColorStyle = new ColorAttributor('color', 'color', {\n  scope: Scope.INLINE,\n});\n\nexport { ColorAttributor, ColorClass, ColorStyle };\n","import { Attributor, ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nconst config = {\n  scope: Scope.BLOCK,\n  whitelist: ['rtl'],\n};\n\nconst DirectionAttribute = new Attributor('direction', 'dir', config);\nconst DirectionClass = new ClassAttributor('direction', 'ql-direction', config);\nconst DirectionStyle = new StyleAttributor('direction', 'direction', config);\n\nexport { DirectionAttribute, DirectionClass, DirectionStyle };\n","/**\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\n// NOTE: copied from https://github.com/GoogleChromeLabs/shadow-selection-polyfill\n\nexport const SHADOW_SELECTIONCHANGE = '-shadow-selectionchange';\n\nconst hasShadow = 'attachShadow' in Element.prototype && 'getRootNode' in Element.prototype;\nconst hasSelection = !!(hasShadow && document.createElement('div').attachShadow({ mode: 'open' }).getSelection);\nconst hasShady = window.ShadyDOM && window.ShadyDOM.inUse;\nconst isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent) ||\n  /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\nconst useDocument = !hasShadow || hasShady || (!hasSelection && !isSafari);\n\nexport const usePolyfill = !(hasSelection || useDocument);\n\nconst validNodeTypes = [Node.ELEMENT_NODE, Node.TEXT_NODE, Node.DOCUMENT_FRAGMENT_NODE];\nfunction isValidNode(node) {\n  return validNodeTypes.includes(node.nodeType);\n}\n\nfunction findNode(s, parentNode, isLeft) {\n  const nodes = parentNode.childNodes || parentNode.children;\n  if (!nodes) {\n    return parentNode; // found it, probably text\n  }\n\n  for (let i = 0; i < nodes.length; ++i) {\n    const j = isLeft ? i : (nodes.length - 1 - i);\n    const childNode = nodes[j];\n    if (!isValidNode(childNode)) {\n      continue; // eslint-disable-line no-continue\n    }\n\n    if (s.containsNode(childNode, true)) {\n      if (s.containsNode(childNode, false)) {\n        return childNode;\n      }\n      return findNode(s, childNode, isLeft);\n    }\n  }\n  return parentNode;\n}\n\n/**\n * @param {function(!Event)} fn to add to selectionchange internals\n */\nconst addInternalListener = (() => {\n  if (!usePolyfill) {\n    // getSelection exists or document API can be used\n    document.addEventListener('selectionchange', () => {\n      document.dispatchEvent(new CustomEvent(SHADOW_SELECTIONCHANGE));\n    });\n    return () => {};\n  }\n\n  let withinInternals = false;\n  const handlers = [];\n\n  document.addEventListener('selectionchange', (ev) => {\n    if (withinInternals) {\n      return;\n    }\n    document.dispatchEvent(new CustomEvent(SHADOW_SELECTIONCHANGE));\n    withinInternals = true;\n    window.setTimeout(() => {\n      withinInternals = false;\n    }, 0);\n    handlers.forEach((fn) => fn(ev));\n  });\n\n  return (fn) => handlers.push(fn);\n})();\n\nlet wasCaret = false;\nlet resolveTask = null;\naddInternalListener(() => {\n  const s = window.getSelection();\n  if (s.type === 'Caret') {\n    wasCaret = true;\n  } else if (wasCaret && !resolveTask) {\n    resolveTask = Promise.resolve(true).then(() => {\n      wasCaret = false;\n      resolveTask = null;\n    });\n  }\n});\n\n\n/**\n * @param {!Selection} s the window selection to use\n * @param {!Node} node the node to walk from\n * @param {boolean} walkForward should this walk in natural direction\n * @return {boolean} whether the selection contains the following node (even partially)\n */\nfunction containsNextElement(s, node, walkForward) {\n  const start = node;\n  while (node = walkFromNode(node, walkForward)) { // eslint-disable-line no-cond-assign\n    // walking (left) can contain our own parent, which we don't want\n    if (!node.contains(start)) {\n      break;\n    }\n  }\n  if (!node) {\n    return false;\n  }\n  // we look for Element as .containsNode says true for _every_ text node, and we only care about\n  // elements themselves\n  return node instanceof Element && s.containsNode(node, true);\n}\n\n\n/**\n * @param {!Selection} s the window selection to use\n * @param {!Node} leftNode the left node\n * @param {!Node} rightNode the right node\n * @return {boolean|undefined} whether this has natural direction\n */\nfunction getSelectionDirection(s, leftNode, rightNode) {\n  if (s.type !== 'Range') {\n    return undefined;  // no direction\n  }\n  const measure = () => s.toString().length;\n\n  const initialSize = measure();\n\n  if (initialSize === 1 && wasCaret && leftNode === rightNode) {\n    // nb. We need to reset a single selection as Safari _always_ tells us the cursor was dragged\n    // left to right (maybe RTL on those devices).\n    // To be fair, Chrome has the same bug.\n    s.extend(leftNode, 0);\n    s.collapseToEnd();\n    return undefined;\n  }\n\n  let updatedSize;\n\n  // Try extending forward and seeing what happens.\n  s.modify('extend', 'forward', 'character');\n  updatedSize = measure();\n\n  if (updatedSize > initialSize || containsNextElement(s, rightNode, true)) {\n    s.modify('extend', 'backward', 'character');\n    return true;\n  } else if (updatedSize < initialSize || !s.containsNode(leftNode)) {\n    s.modify('extend', 'backward', 'character');\n    return false;\n  }\n\n  // Maybe we were at the end of something. Extend backwards.\n  // TODO(samthor): We seem to be able to get away without the 'backwards' case.\n  s.modify('extend', 'backward', 'character');\n  updatedSize = measure();\n\n  if (updatedSize > initialSize || containsNextElement(s, leftNode, false)) {\n    s.modify('extend', 'forward', 'character');\n    return false;\n  } else if (updatedSize < initialSize || !s.containsNode(rightNode)) {\n    s.modify('extend', 'forward', 'character');\n    return true;\n  }\n\n  // This is likely a select-all.\n  return undefined;\n}\n\n/**\n * Returns the next valid node (element or text). This is needed as Safari doesn't support\n * TreeWalker inside Shadow DOM. Don't escape shadow roots.\n *\n * @param {!Node} node to start from\n * @param {boolean} walkForward should this walk in natural direction\n * @return {Node} node found, if any\n */\nfunction walkFromNode(node, walkForward) {\n  if (!walkForward) {\n    return node.previousSibling || node.parentNode || null;\n  }\n  while (node) {\n    if (node.nextSibling) {\n      return node.nextSibling;\n    }\n    node = node.parentNode;\n  }\n  return null;\n}\n\n/**\n * @param {!Node} node to check for initial space\n * @return {number} count of initial space\n */\nfunction initialSpace(node) {\n  if (node.nodeType !== Node.TEXT_NODE) {\n    return 0;\n  }\n  return /^\\s*/.exec(node.textContent)[0].length;\n}\n\n/**\n * @param {!Node} node to check for trailing space\n * @return {number} count of ignored trailing space\n */\nfunction ignoredTrailingSpace(node) {\n  if (node.nodeType !== Node.TEXT_NODE) {\n    return 0;\n  }\n  const trailingSpaceCount =  /\\s*$/.exec(node.textContent)[0].length;\n  if (!trailingSpaceCount) {\n    return 0;\n  }\n  return trailingSpaceCount - 1; // always allow single last\n}\n\nconst cachedRange = new Map();\n\nexport function addRange(root, selection, range) {\n  if (cachedRange.has(root)) {\n    cachedRange.delete(root);\n    cachedRange.set(root, range);\n  }\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n\nexport function getRange(root) {\n  if (!usePolyfill) {\n    const s = (useDocument ? document : root).getSelection();\n    return s.rangeCount ? s.getRangeAt(0) : null;\n  }\n\n  const thisFrame = cachedRange.get(root);\n  if (thisFrame) {\n    return thisFrame;\n  }\n\n  const result = internalGetShadowSelection(root);\n  cachedRange.set(root, result.range);\n  window.setTimeout(() => {\n    cachedRange.delete(root);\n  }, 0);\n\n  return result.range;\n}\n\nconst fakeSelectionNode = document.createTextNode('');\nexport function internalGetShadowSelection(root) {\n  const range = document.createRange();\n\n  const s = window.getSelection();\n  if (!s.containsNode(root.host, true)) {\n    return {range: null, mode: 'none'};\n  }\n\n  // TODO: inserting fake nodes isn't ideal, but containsNode doesn't work on nearby adjacent\n  // text nodes (in fact it returns true for all text nodes on the page?!).\n\n  // insert a fake 'before' node to see if it's selected\n  root.insertBefore(fakeSelectionNode, root.childNodes[0]);\n  const includesBeforeRoot = s.containsNode(fakeSelectionNode);\n  fakeSelectionNode.remove();\n  if (includesBeforeRoot) {\n    return {range: null, mode: 'outside-before'};\n  }\n\n  // insert a fake 'after' node to see if it's selected\n  root.appendChild(fakeSelectionNode);\n  const includesAfterRoot = s.containsNode(fakeSelectionNode);\n  fakeSelectionNode.remove();\n  if (includesAfterRoot) {\n    return {range: null, mode: 'outside-after'};\n  }\n\n  const measure = () => s.toString().length;\n  if (!(s.type === 'Caret' || s.type === 'Range')) {\n    throw new TypeError('unexpected type: ' + s.type);\n  }\n\n  const leftNode = findNode(s, root, true);\n  let rightNode;\n  let isNaturalDirection;\n  if (s.type === 'Range') {\n    rightNode = findNode(s, root, false);  // get right node here _before_ getSelectionDirection\n    isNaturalDirection = getSelectionDirection(s, leftNode, rightNode);\n    // isNaturalDirection means \"going right\"\n  }\n\n  if (s.type === 'Caret') {\n    // we might transition to being a caret, so don't check initial value\n    s.extend(leftNode, 0);\n    const at = measure();\n    s.collapseToEnd();\n\n    range.setStart(leftNode, at);\n    range.setEnd(leftNode, at);\n    return {range, mode: 'caret'};\n  } else if (isNaturalDirection === undefined) {\n    if (s.type !== 'Range') {\n      throw new TypeError('unexpected type: ' + s.type);\n    }\n    // This occurs when we can't move because we can't extend left or right to measure the\n    // direction we're moving in. Good news though: we don't need to _change_ the selection\n    // to measure it, so just return immediately.\n    range.setStart(leftNode, 0);\n    range.setEnd(rightNode, rightNode.length);\n    return {range, mode: 'all'};\n  }\n\n  const size = measure();\n  let offsetLeft, offsetRight;\n\n  // only one newline/space char is cared about\n  const validRightLength = rightNode.length - ignoredTrailingSpace(rightNode);\n\n  if (isNaturalDirection) {\n    // walk in the opposite direction first\n    s.extend(leftNode, 0);\n    offsetLeft = measure() + initialSpace(leftNode);  // measure doesn't include initial space\n\n    // then in our actual direction\n    s.extend(rightNode, validRightLength);\n    offsetRight = validRightLength - (measure() - size);\n\n    // then revert to the original position\n    s.extend(rightNode, offsetRight);\n  } else {\n    // walk in the opposite direction first\n    s.extend(rightNode, validRightLength);\n    offsetRight = validRightLength - measure();\n\n    // then in our actual direction\n    s.extend(leftNode, 0);\n    offsetLeft = measure() - size + initialSpace(leftNode);  // doesn't include initial space\n\n    // then revert to the original position\n    s.extend(leftNode, offsetLeft);\n  }\n\n  range.setStart(leftNode, offsetLeft);\n  range.setEnd(rightNode, offsetRight);\n  return {\n    mode: isNaturalDirection ? 'right' : 'left',\n    range,\n  };\n}\n","import { Attributor, ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nconst config = {\n  scope: Scope.BLOCK,\n  whitelist: ['right', 'center', 'justify'],\n};\n\nconst AlignAttribute = new Attributor('align', 'align', config);\nconst AlignClass = new ClassAttributor('align', 'ql-align', config);\nconst AlignStyle = new StyleAttributor('align', 'text-align', config);\n\nexport { AlignAttribute, AlignClass, AlignStyle };\n","import Inline from '../blots/inline';\n\nclass Link extends Inline {\n  static create(value) {\n    const node = super.create(value);\n    node.setAttribute('href', this.sanitize(value));\n    node.setAttribute('target', '_blank');\n    return node;\n  }\n\n  static formats(domNode) {\n    return domNode.getAttribute('href');\n  }\n\n  static sanitize(url) {\n    return sanitize(url, this.PROTOCOL_WHITELIST) ? url : this.SANITIZED_URL;\n  }\n\n  format(name, value) {\n    if (name !== this.statics.blotName || !value) {\n      super.format(name, value);\n    } else {\n      this.domNode.setAttribute('href', this.constructor.sanitize(value));\n    }\n  }\n}\nLink.blotName = 'link';\nLink.tagName = 'A';\nLink.SANITIZED_URL = 'about:blank';\nLink.PROTOCOL_WHITELIST = ['http', 'https', 'mailto', 'tel'];\n\nfunction sanitize(url, protocols) {\n  const anchor = document.createElement('a');\n  anchor.href = url;\n  const protocol = anchor.href.slice(0, anchor.href.indexOf(':'));\n  return protocols.indexOf(protocol) > -1;\n}\n\nexport { Link as default, sanitize };\n","import { ClassAttributor, Scope } from 'parchment';\nimport { ColorAttributor } from './color';\n\nconst BackgroundClass = new ClassAttributor('background', 'ql-bg', {\n  scope: Scope.INLINE,\n});\nconst BackgroundStyle = new ColorAttributor('background', 'background-color', {\n  scope: Scope.INLINE,\n});\n\nexport { BackgroundClass, BackgroundStyle };\n","import { ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nconst config = {\n  scope: Scope.INLINE,\n  whitelist: ['serif', 'monospace'],\n};\n\nconst FontClass = new ClassAttributor('font', 'ql-font', config);\n\nclass FontStyleAttributor extends StyleAttributor {\n  value(node) {\n    return super.value(node).replace(/[\"']/g, '');\n  }\n}\n\nconst FontStyle = new FontStyleAttributor('font', 'font-family', config);\n\nexport { FontStyle, FontClass };\n","import { ClassAttributor, Scope, StyleAttributor } from 'parchment';\n\nconst SizeClass = new ClassAttributor('size', 'ql-size', {\n  scope: Scope.INLINE,\n  whitelist: ['small', 'large', 'huge'],\n});\nconst SizeStyle = new StyleAttributor('size', 'font-size', {\n  scope: Scope.INLINE,\n  whitelist: ['10px', '18px', '32px'],\n});\n\nexport { SizeClass, SizeStyle };\n","class Theme {\n  constructor(quill, options) {\n    this.quill = quill;\n    this.options = options;\n    this.modules = {};\n  }\n\n  init() {\n    Object.keys(this.options.modules).forEach(name => {\n      if (this.modules[name] == null) {\n        this.addModule(name);\n      }\n    });\n  }\n\n  addModule(name) {\n    const ModuleClass = this.quill.constructor.import(`modules/${name}`);\n    this.modules[name] = new ModuleClass(\n      this.quill,\n      this.options.modules[name] || {},\n    );\n    return this.modules[name];\n  }\n}\nTheme.DEFAULTS = {\n  modules: {},\n};\nTheme.themes = {\n  default: Theme,\n};\n\nexport default Theme;\n","export default new WeakMap();\n","import extend from 'extend';\nimport Delta from 'quill-delta';\nimport {\n  Attributor,\n  ClassAttributor,\n  EmbedBlot,\n  Scope,\n  StyleAttributor,\n  BlockBlot,\n} from 'parchment';\nimport { BlockEmbed } from '../blots/block';\nimport Quill from '../core/quill';\nimport logger from '../core/logger';\nimport Module from '../core/module';\n\nimport { AlignAttribute, AlignStyle } from '../formats/align';\nimport { BackgroundStyle } from '../formats/background';\nimport CodeBlock from '../formats/code';\nimport { ColorStyle } from '../formats/color';\nimport { DirectionAttribute, DirectionStyle } from '../formats/direction';\nimport { FontStyle } from '../formats/font';\nimport { SizeStyle } from '../formats/size';\n\nconst debug = logger('quill:clipboard');\n\nconst CLIPBOARD_CONFIG = [\n  [Node.TEXT_NODE, matchText],\n  [Node.TEXT_NODE, matchNewline],\n  ['br', matchBreak],\n  [Node.ELEMENT_NODE, matchNewline],\n  [Node.ELEMENT_NODE, matchBlot],\n  [Node.ELEMENT_NODE, matchAttributor],\n  [Node.ELEMENT_NODE, matchStyles],\n  ['li', matchIndent],\n  ['ol, ul', matchList],\n  ['pre', matchCodeBlock],\n  ['tr', matchTable],\n  ['b', matchAlias.bind(matchAlias, 'bold')],\n  ['i', matchAlias.bind(matchAlias, 'italic')],\n  ['style', matchIgnore],\n];\n\nconst ATTRIBUTE_ATTRIBUTORS = [AlignAttribute, DirectionAttribute].reduce(\n  (memo, attr) => {\n    memo[attr.keyName] = attr;\n    return memo;\n  },\n  {},\n);\n\nconst STYLE_ATTRIBUTORS = [\n  AlignStyle,\n  BackgroundStyle,\n  ColorStyle,\n  DirectionStyle,\n  FontStyle,\n  SizeStyle,\n].reduce((memo, attr) => {\n  memo[attr.keyName] = attr;\n  return memo;\n}, {});\n\nclass Clipboard extends Module {\n  constructor(quill, options) {\n    super(quill, options);\n    this.quill.root.addEventListener('copy', e => this.onCaptureCopy(e, false));\n    this.quill.root.addEventListener('cut', e => this.onCaptureCopy(e, true));\n    this.quill.root.addEventListener('paste', this.onCapturePaste.bind(this));\n    this.matchers = [];\n    CLIPBOARD_CONFIG.concat(this.options.matchers).forEach(\n      ([selector, matcher]) => {\n        this.addMatcher(selector, matcher);\n      },\n    );\n  }\n\n  addMatcher(selector, matcher) {\n    this.matchers.push([selector, matcher]);\n  }\n\n  convert({ html, text }, formats = {}) {\n    if (formats[CodeBlock.blotName]) {\n      return new Delta().insert(text, {\n        [CodeBlock.blotName]: formats[CodeBlock.blotName],\n      });\n    }\n    if (!html) {\n      return new Delta().insert(text || '');\n    }\n    const doc = new DOMParser().parseFromString(html, 'text/html');\n    const container = doc.body;\n    const nodeMatches = new WeakMap();\n    const [elementMatchers, textMatchers] = this.prepareMatching(\n      container,\n      nodeMatches,\n    );\n    const delta = traverse(\n      this.quill.scroll,\n      container,\n      elementMatchers,\n      textMatchers,\n      nodeMatches,\n    );\n    // Remove trailing newline\n    if (\n      deltaEndsWith(delta, '\\n') &&\n      (delta.ops[delta.ops.length - 1].attributes == null || formats.table)\n    ) {\n      return delta.compose(new Delta().retain(delta.length() - 1).delete(1));\n    }\n    return delta;\n  }\n\n  dangerouslyPasteHTML(index, html, source = Quill.sources.API) {\n    if (typeof index === 'string') {\n      const delta = this.convert({ html: index, text: '' });\n      this.quill.setContents(delta, html);\n      this.quill.setSelection(0, Quill.sources.SILENT);\n    } else {\n      const paste = this.convert({ html, text: '' });\n      this.quill.updateContents(\n        new Delta().retain(index).concat(paste),\n        source,\n      );\n      this.quill.setSelection(index + paste.length(), Quill.sources.SILENT);\n    }\n  }\n\n  onCaptureCopy(e, isCut = false) {\n    if (e.defaultPrevented) return;\n    e.preventDefault();\n    const [range] = this.quill.selection.getRange();\n    if (range == null) return;\n    const { html, text } = this.onCopy(range, isCut);\n    e.clipboardData.setData('text/plain', text);\n    e.clipboardData.setData('text/html', html);\n    if (isCut) {\n      this.quill.deleteText(range, Quill.sources.USER);\n    }\n  }\n\n  onCapturePaste(e) {\n    if (e.defaultPrevented || !this.quill.isEnabled()) return;\n    e.preventDefault();\n    const range = this.quill.getSelection(true);\n    if (range == null) return;\n    const html = e.clipboardData.getData('text/html');\n    const text = e.clipboardData.getData('text/plain');\n    const files = Array.from(e.clipboardData.files || []);\n    if (!html && files.length > 0) {\n      this.quill.uploader.upload(range, files);\n    } else {\n      this.onPaste(range, { html, text });\n    }\n  }\n\n  onCopy(range) {\n    const text = this.quill.getText(range);\n    const html = this.quill.getSemanticHTML(range);\n    return { html, text };\n  }\n\n  onPaste(range, { text, html }) {\n    const formats = this.quill.getFormat(range.index);\n    const pastedDelta = this.convert({ text, html }, formats);\n    debug.log('onPaste', pastedDelta, { text, html });\n    const delta = new Delta()\n      .retain(range.index)\n      .delete(range.length)\n      .concat(pastedDelta);\n    this.quill.updateContents(delta, Quill.sources.USER);\n    // range.length contributes to delta.length()\n    this.quill.setSelection(\n      delta.length() - range.length,\n      Quill.sources.SILENT,\n    );\n    this.quill.scrollIntoView();\n  }\n\n  prepareMatching(container, nodeMatches) {\n    const elementMatchers = [];\n    const textMatchers = [];\n    this.matchers.forEach(pair => {\n      const [selector, matcher] = pair;\n      switch (selector) {\n        case Node.TEXT_NODE:\n          textMatchers.push(matcher);\n          break;\n        case Node.ELEMENT_NODE:\n          elementMatchers.push(matcher);\n          break;\n        default:\n          Array.from(container.querySelectorAll(selector)).forEach(node => {\n            if (nodeMatches.has(node)) {\n              const matches = nodeMatches.get(node);\n              matches.push(matcher);\n            } else {\n              nodeMatches.set(node, [matcher]);\n            }\n          });\n          break;\n      }\n    });\n    return [elementMatchers, textMatchers];\n  }\n}\nClipboard.DEFAULTS = {\n  matchers: [],\n};\n\nfunction applyFormat(delta, format, value) {\n  if (typeof format === 'object') {\n    return Object.keys(format).reduce((newDelta, key) => {\n      return applyFormat(newDelta, key, format[key]);\n    }, delta);\n  }\n  return delta.reduce((newDelta, op) => {\n    if (op.attributes && op.attributes[format]) {\n      return newDelta.push(op);\n    }\n    return newDelta.insert(\n      op.insert,\n      extend({}, { [format]: value }, op.attributes),\n    );\n  }, new Delta());\n}\n\nfunction deltaEndsWith(delta, text) {\n  let endText = '';\n  for (\n    let i = delta.ops.length - 1;\n    i >= 0 && endText.length < text.length;\n    --i // eslint-disable-line no-plusplus\n  ) {\n    const op = delta.ops[i];\n    if (typeof op.insert !== 'string') break;\n    endText = op.insert + endText;\n  }\n  return endText.slice(-1 * text.length) === text;\n}\n\nfunction isLine(node) {\n  if (node.childNodes.length === 0) return false; // Exclude embed blocks\n  return [\n    'address',\n    'article',\n    'blockquote',\n    'canvas',\n    'dd',\n    'div',\n    'dl',\n    'dt',\n    'fieldset',\n    'figcaption',\n    'figure',\n    'footer',\n    'form',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'header',\n    'iframe',\n    'li',\n    'main',\n    'nav',\n    'ol',\n    'output',\n    'p',\n    'pre',\n    'section',\n    'table',\n    'td',\n    'tr',\n    'ul',\n    'video',\n  ].includes(node.tagName.toLowerCase());\n}\n\nconst preNodes = new WeakMap();\nfunction isPre(node) {\n  if (node == null) return false;\n  if (!preNodes.has(node)) {\n    if (node.tagName === 'PRE') {\n      preNodes.set(node, true);\n    } else {\n      preNodes.set(node, isPre(node.parentNode));\n    }\n  }\n  return preNodes.get(node);\n}\n\nfunction traverse(scroll, node, elementMatchers, textMatchers, nodeMatches) {\n  // Post-order\n  if (node.nodeType === node.TEXT_NODE) {\n    return textMatchers.reduce((delta, matcher) => {\n      return matcher(node, delta, scroll);\n    }, new Delta());\n  }\n  if (node.nodeType === node.ELEMENT_NODE) {\n    return Array.from(node.childNodes || []).reduce((delta, childNode) => {\n      let childrenDelta = traverse(\n        scroll,\n        childNode,\n        elementMatchers,\n        textMatchers,\n        nodeMatches,\n      );\n      if (childNode.nodeType === node.ELEMENT_NODE) {\n        childrenDelta = elementMatchers.reduce((reducedDelta, matcher) => {\n          return matcher(childNode, reducedDelta, scroll);\n        }, childrenDelta);\n        childrenDelta = (nodeMatches.get(childNode) || []).reduce(\n          (reducedDelta, matcher) => {\n            return matcher(childNode, reducedDelta, scroll);\n          },\n          childrenDelta,\n        );\n      }\n      return delta.concat(childrenDelta);\n    }, new Delta());\n  }\n  return new Delta();\n}\n\nfunction matchAlias(format, node, delta) {\n  return applyFormat(delta, format, true);\n}\n\nfunction matchAttributor(node, delta, scroll) {\n  const attributes = Attributor.keys(node);\n  const classes = ClassAttributor.keys(node);\n  const styles = StyleAttributor.keys(node);\n  const formats = {};\n  attributes\n    .concat(classes)\n    .concat(styles)\n    .forEach(name => {\n      let attr = scroll.query(name, Scope.ATTRIBUTE);\n      if (attr != null) {\n        formats[attr.attrName] = attr.value(node);\n        if (formats[attr.attrName]) return;\n      }\n      attr = ATTRIBUTE_ATTRIBUTORS[name];\n      if (attr != null && (attr.attrName === name || attr.keyName === name)) {\n        formats[attr.attrName] = attr.value(node) || undefined;\n      }\n      attr = STYLE_ATTRIBUTORS[name];\n      if (attr != null && (attr.attrName === name || attr.keyName === name)) {\n        attr = STYLE_ATTRIBUTORS[name];\n        formats[attr.attrName] = attr.value(node) || undefined;\n      }\n    });\n  if (Object.keys(formats).length > 0) {\n    return applyFormat(delta, formats);\n  }\n  return delta;\n}\n\nfunction matchBlot(node, delta, scroll) {\n  const match = scroll.query(node);\n  if (match == null) return delta;\n  if (match.prototype instanceof EmbedBlot) {\n    const embed = {};\n    const value = match.value(node);\n    if (value != null) {\n      embed[match.blotName] = value;\n      return new Delta().insert(embed, match.formats(node, scroll));\n    }\n  } else {\n    if (match.prototype instanceof BlockBlot && !deltaEndsWith(delta, '\\n')) {\n      delta.insert('\\n');\n    }\n    if (typeof match.formats === 'function') {\n      return applyFormat(delta, match.blotName, match.formats(node, scroll));\n    }\n  }\n  return delta;\n}\n\nfunction matchBreak(node, delta) {\n  if (!deltaEndsWith(delta, '\\n')) {\n    delta.insert('\\n');\n  }\n  return delta;\n}\n\nfunction matchCodeBlock(node, delta, scroll) {\n  const match = scroll.query('code-block');\n  const language = match ? match.formats(node, scroll) : true;\n  return applyFormat(delta, 'code-block', language);\n}\n\nfunction matchIgnore() {\n  return new Delta();\n}\n\nfunction matchIndent(node, delta, scroll) {\n  const match = scroll.query(node);\n  if (\n    match == null ||\n    match.blotName !== 'list' ||\n    !deltaEndsWith(delta, '\\n')\n  ) {\n    return delta;\n  }\n  let indent = -1;\n  let parent = node.parentNode;\n  while (parent != null) {\n    if (['OL', 'UL'].includes(parent.tagName)) {\n      indent += 1;\n    }\n    parent = parent.parentNode;\n  }\n  if (indent <= 0) return delta;\n  return delta.reduce((composed, op) => {\n    if (op.attributes && op.attributes.list) {\n      return composed.push(op);\n    }\n    return composed.insert(op.insert, { indent, ...(op.attributes || {}) });\n  }, new Delta());\n}\n\nfunction matchList(node, delta) {\n  const list = node.tagName === 'OL' ? 'ordered' : 'bullet';\n  return applyFormat(delta, 'list', list);\n}\n\nfunction matchNewline(node, delta, scroll) {\n  if (!deltaEndsWith(delta, '\\n')) {\n    if (isLine(node)) {\n      return delta.insert('\\n');\n    }\n    if (delta.length() > 0 && node.nextSibling) {\n      let { nextSibling } = node;\n      while (nextSibling != null) {\n        if (isLine(nextSibling)) {\n          return delta.insert('\\n');\n        }\n        const match = scroll.query(nextSibling);\n        if (match && match.prototype instanceof BlockEmbed) {\n          return delta.insert('\\n');\n        }\n        nextSibling = nextSibling.firstChild;\n      }\n    }\n  }\n  return delta;\n}\n\nfunction matchStyles(node, delta) {\n  const formats = {};\n  const style = node.style || {};\n  if (style.fontStyle === 'italic') {\n    formats.italic = true;\n  }\n  if (\n    style.fontWeight.startsWith('bold') ||\n    parseInt(style.fontWeight, 10) >= 700\n  ) {\n    formats.bold = true;\n  }\n  if (Object.keys(formats).length > 0) {\n    delta = applyFormat(delta, formats);\n  }\n  if (parseFloat(style.textIndent || 0) > 0) {\n    // Could be 0.5in\n    return new Delta().insert('\\t').concat(delta);\n  }\n  return delta;\n}\n\nfunction matchTable(node, delta) {\n  const table =\n    node.parentNode.tagName === 'TABLE'\n      ? node.parentNode\n      : node.parentNode.parentNode;\n  const rows = Array.from(table.querySelectorAll('tr'));\n  const row = rows.indexOf(node) + 1;\n  return applyFormat(delta, 'table', row);\n}\n\nfunction matchText(node, delta) {\n  let text = node.data;\n  // Word represents empty line with <o:p>&nbsp;</o:p>\n  if (node.parentNode.tagName === 'O:P') {\n    return delta.insert(text.trim());\n  }\n  if (text.trim().length === 0 && text.includes('\\n')) {\n    return delta;\n  }\n  if (!isPre(node)) {\n    const replacer = (collapse, match) => {\n      const replaced = match.replace(/[^\\u00a0]/g, ''); // \\u00a0 is nbsp;\n      return replaced.length < 1 && collapse ? ' ' : replaced;\n    };\n    text = text.replace(/\\r\\n/g, ' ').replace(/\\n/g, ' ');\n    text = text.replace(/\\s\\s+/g, replacer.bind(replacer, true)); // collapse whitespace\n    if (\n      (node.previousSibling == null && isLine(node.parentNode)) ||\n      (node.previousSibling != null && isLine(node.previousSibling))\n    ) {\n      text = text.replace(/^\\s+/, replacer.bind(replacer, false));\n    }\n    if (\n      (node.nextSibling == null && isLine(node.parentNode)) ||\n      (node.nextSibling != null && isLine(node.nextSibling))\n    ) {\n      text = text.replace(/\\s+$/, replacer.bind(replacer, false));\n    }\n  }\n  return delta.insert(text);\n}\n\nexport {\n  Clipboard as default,\n  matchAttributor,\n  matchBlot,\n  matchNewline,\n  matchText,\n  traverse,\n};\n","import Inline from '../blots/inline';\n\nclass Bold extends Inline {\n  static create() {\n    return super.create();\n  }\n\n  static formats() {\n    return true;\n  }\n\n  optimize(context) {\n    super.optimize(context);\n    if (this.domNode.tagName !== this.statics.tagName[0]) {\n      this.replaceWith(this.statics.blotName);\n    }\n  }\n}\nBold.blotName = 'bold';\nBold.tagName = ['STRONG', 'B'];\n\nexport default Bold;\n","import { Scope, ScrollBlot, ContainerBlot } from 'parchment';\nimport Emitter from '../core/emitter';\nimport Block, { BlockEmbed } from './block';\nimport Break from './break';\nimport Container from './container';\n\nfunction isLine(blot) {\n  return blot instanceof Block || blot instanceof BlockEmbed;\n}\n\nclass Scroll extends ScrollBlot {\n  constructor(registry, domNode, { emitter }) {\n    super(registry, domNode);\n    this.emitter = emitter;\n    this.batch = false;\n    this.optimize();\n    this.enable();\n    this.domNode.addEventListener('dragstart', e => this.handleDragStart(e));\n  }\n\n  batchStart() {\n    if (!Array.isArray(this.batch)) {\n      this.batch = [];\n    }\n  }\n\n  batchEnd() {\n    const mutations = this.batch;\n    this.batch = false;\n    this.update(mutations);\n  }\n\n  emitMount(blot) {\n    this.emitter.emit(Emitter.events.SCROLL_BLOT_MOUNT, blot);\n  }\n\n  emitUnmount(blot) {\n    this.emitter.emit(Emitter.events.SCROLL_BLOT_UNMOUNT, blot);\n  }\n\n  deleteAt(index, length) {\n    const [first, offset] = this.line(index);\n    const [last] = this.line(index + length);\n    super.deleteAt(index, length);\n    if (last != null && first !== last && offset > 0) {\n      if (first instanceof BlockEmbed || last instanceof BlockEmbed) {\n        this.optimize();\n        return;\n      }\n      const ref =\n        last.children.head instanceof Break ? null : last.children.head;\n      first.moveChildren(last, ref);\n      first.remove();\n    }\n    this.optimize();\n  }\n\n  enable(enabled = true) {\n    this.domNode.setAttribute('contenteditable', enabled);\n  }\n\n  formatAt(index, length, format, value) {\n    super.formatAt(index, length, format, value);\n    this.optimize();\n  }\n\n  handleDragStart(event) {\n    event.preventDefault();\n  }\n\n  insertAt(index, value, def) {\n    if (index >= this.length()) {\n      if (def == null || this.scroll.query(value, Scope.BLOCK) == null) {\n        const blot = this.scroll.create(this.statics.defaultChild.blotName);\n        this.appendChild(blot);\n        if (def == null && value.endsWith('\\n')) {\n          blot.insertAt(0, value.slice(0, -1), def);\n        } else {\n          blot.insertAt(0, value, def);\n        }\n      } else {\n        const embed = this.scroll.create(value, def);\n        this.appendChild(embed);\n      }\n    } else {\n      super.insertAt(index, value, def);\n    }\n    this.optimize();\n  }\n\n  insertBefore(blot, ref) {\n    if (blot.statics.scope === Scope.INLINE_BLOT) {\n      const wrapper = this.scroll.create(this.statics.defaultChild.blotName);\n      wrapper.appendChild(blot);\n      super.insertBefore(wrapper, ref);\n    } else {\n      super.insertBefore(blot, ref);\n    }\n  }\n\n  isEnabled() {\n    return this.domNode.getAttribute('contenteditable') === 'true';\n  }\n\n  leaf(index) {\n    return this.path(index).pop() || [null, -1];\n  }\n\n  line(index) {\n    if (index === this.length()) {\n      return this.line(index - 1);\n    }\n    return this.descendant(isLine, index);\n  }\n\n  lines(index = 0, length = Number.MAX_VALUE) {\n    const getLines = (blot, blotIndex, blotLength) => {\n      let lines = [];\n      let lengthLeft = blotLength;\n      blot.children.forEachAt(\n        blotIndex,\n        blotLength,\n        (child, childIndex, childLength) => {\n          if (isLine(child)) {\n            lines.push(child);\n          } else if (child instanceof ContainerBlot) {\n            lines = lines.concat(getLines(child, childIndex, lengthLeft));\n          }\n          lengthLeft -= childLength;\n        },\n      );\n      return lines;\n    };\n    return getLines(this, index, length);\n  }\n\n  optimize(mutations = [], context = {}) {\n    if (this.batch) return;\n    super.optimize(mutations, context);\n    if (mutations.length > 0) {\n      this.emitter.emit(Emitter.events.SCROLL_OPTIMIZE, mutations, context);\n    }\n  }\n\n  path(index) {\n    return super.path(index).slice(1); // Exclude self\n  }\n\n  remove() {\n    // Never remove self\n  }\n\n  update(mutations) {\n    if (this.batch) {\n      if (Array.isArray(mutations)) {\n        this.batch = this.batch.concat(mutations);\n      }\n      return;\n    }\n    let source = Emitter.sources.USER;\n    if (typeof mutations === 'string') {\n      source = mutations;\n    }\n    if (!Array.isArray(mutations)) {\n      mutations = this.observer.takeRecords();\n    }\n    if (mutations.length > 0) {\n      this.emitter.emit(Emitter.events.SCROLL_BEFORE_UPDATE, source, mutations);\n    }\n    super.update(mutations.concat([])); // pass copy\n    if (mutations.length > 0) {\n      this.emitter.emit(Emitter.events.SCROLL_UPDATE, source, mutations);\n    }\n  }\n}\nScroll.blotName = 'scroll';\nScroll.className = 'ql-editor';\nScroll.tagName = 'DIV';\nScroll.defaultChild = Block;\nScroll.allowedChildren = [Block, BlockEmbed, Container];\n\nexport default Scroll;\n","import { Scope } from 'parchment';\nimport Quill from '../core/quill';\nimport Module from '../core/module';\n\nclass History extends Module {\n  constructor(quill, options) {\n    super(quill, options);\n    this.lastRecorded = 0;\n    this.ignoreChange = false;\n    this.clear();\n    this.quill.on(\n      Quill.events.EDITOR_CHANGE,\n      (eventName, delta, oldDelta, source) => {\n        if (eventName !== Quill.events.TEXT_CHANGE || this.ignoreChange) return;\n        if (!this.options.userOnly || source === Quill.sources.USER) {\n          this.record(delta, oldDelta);\n        } else {\n          this.transform(delta);\n        }\n      },\n    );\n    this.quill.keyboard.addBinding(\n      { key: 'z', shortKey: true },\n      this.undo.bind(this),\n    );\n    this.quill.keyboard.addBinding(\n      { key: 'z', shortKey: true, shiftKey: true },\n      this.redo.bind(this),\n    );\n    if (/Win/i.test(navigator.platform)) {\n      this.quill.keyboard.addBinding(\n        { key: 'y', shortKey: true },\n        this.redo.bind(this),\n      );\n    }\n  }\n\n  change(source, dest) {\n    if (this.stack[source].length === 0) return;\n    const delta = this.stack[source].pop();\n    const base = this.quill.getContents();\n    const inverseDelta = delta.invert(base);\n    this.stack[dest].push(inverseDelta);\n    this.lastRecorded = 0;\n    this.ignoreChange = true;\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.ignoreChange = false;\n    const index = getLastChangeIndex(this.quill.scroll, delta);\n    this.quill.setSelection(index);\n  }\n\n  clear() {\n    this.stack = { undo: [], redo: [] };\n  }\n\n  cutoff() {\n    this.lastRecorded = 0;\n  }\n\n  record(changeDelta, oldDelta) {\n    if (changeDelta.ops.length === 0) return;\n    this.stack.redo = [];\n    let undoDelta = changeDelta.invert(oldDelta);\n    const timestamp = Date.now();\n    if (\n      this.lastRecorded + this.options.delay > timestamp &&\n      this.stack.undo.length > 0\n    ) {\n      const delta = this.stack.undo.pop();\n      undoDelta = undoDelta.compose(delta);\n    } else {\n      this.lastRecorded = timestamp;\n    }\n    if (undoDelta.length() === 0) return;\n    this.stack.undo.push(undoDelta);\n    if (this.stack.undo.length > this.options.maxStack) {\n      this.stack.undo.shift();\n    }\n  }\n\n  redo() {\n    this.change('redo', 'undo');\n  }\n\n  transform(delta) {\n    transformStack(this.stack.undo, delta);\n    transformStack(this.stack.redo, delta);\n  }\n\n  undo() {\n    this.change('undo', 'redo');\n  }\n}\nHistory.DEFAULTS = {\n  delay: 1000,\n  maxStack: 100,\n  userOnly: false,\n};\n\nfunction transformStack(stack, delta) {\n  let remoteDelta = delta;\n  for (let i = stack.length - 1; i >= 0; i -= 1) {\n    const oldDelta = stack[i];\n    stack[i] = remoteDelta.transform(oldDelta, true);\n    remoteDelta = oldDelta.transform(remoteDelta);\n    if (stack[i].length() === 0) {\n      stack.splice(i, 1);\n    }\n  }\n}\n\nfunction endsWithNewlineChange(scroll, delta) {\n  const lastOp = delta.ops[delta.ops.length - 1];\n  if (lastOp == null) return false;\n  if (lastOp.insert != null) {\n    return typeof lastOp.insert === 'string' && lastOp.insert.endsWith('\\n');\n  }\n  if (lastOp.attributes != null) {\n    return Object.keys(lastOp.attributes).some(attr => {\n      return scroll.query(attr, Scope.BLOCK) != null;\n    });\n  }\n  return false;\n}\n\nfunction getLastChangeIndex(scroll, delta) {\n  const deleteLength = delta.reduce((length, op) => {\n    return length + (op.delete || 0);\n  }, 0);\n  let changeIndex = delta.length() - deleteLength;\n  if (endsWithNewlineChange(scroll, delta)) {\n    changeIndex -= 1;\n  }\n  return changeIndex;\n}\n\nexport { History as default, getLastChangeIndex };\n","import clone from 'clone';\nimport equal from 'deep-equal';\nimport extend from 'extend';\nimport Delta, { AttributeMap } from 'quill-delta';\nimport { EmbedBlot, Scope, TextBlot } from 'parchment';\nimport Quill from '../core/quill';\nimport logger from '../core/logger';\nimport Module from '../core/module';\n\nconst debug = logger('quill:keyboard');\n\nconst SHORTKEY = /Mac/i.test(navigator.platform) ? 'metaKey' : 'ctrlKey';\n\nclass Keyboard extends Module {\n  static match(evt, binding) {\n    if (\n      ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'].some(key => {\n        return !!binding[key] !== evt[key] && binding[key] !== null;\n      })\n    ) {\n      return false;\n    }\n    return binding.key === evt.key || binding.key === evt.which;\n  }\n\n  constructor(quill, options) {\n    super(quill, options);\n    this.bindings = {};\n    Object.keys(this.options.bindings).forEach(name => {\n      if (this.options.bindings[name]) {\n        this.addBinding(this.options.bindings[name]);\n      }\n    });\n    this.addBinding({ key: 'Enter', shiftKey: null }, this.handleEnter);\n    this.addBinding(\n      { key: 'Enter', metaKey: null, ctrlKey: null, altKey: null },\n      () => {},\n    );\n    if (/Firefox/i.test(navigator.userAgent)) {\n      // Need to handle delete and backspace for Firefox in the general case #1171\n      this.addBinding(\n        { key: 'Backspace' },\n        { collapsed: true },\n        this.handleBackspace,\n      );\n      this.addBinding(\n        { key: 'Delete' },\n        { collapsed: true },\n        this.handleDelete,\n      );\n    } else {\n      this.addBinding(\n        { key: 'Backspace' },\n        { collapsed: true, prefix: /^.?$/ },\n        this.handleBackspace,\n      );\n      this.addBinding(\n        { key: 'Delete' },\n        { collapsed: true, suffix: /^.?$/ },\n        this.handleDelete,\n      );\n    }\n    this.addBinding(\n      { key: 'Backspace' },\n      { collapsed: false },\n      this.handleDeleteRange,\n    );\n    this.addBinding(\n      { key: 'Delete' },\n      { collapsed: false },\n      this.handleDeleteRange,\n    );\n    this.addBinding(\n      {\n        key: 'Backspace',\n        altKey: null,\n        ctrlKey: null,\n        metaKey: null,\n        shiftKey: null,\n      },\n      { collapsed: true, offset: 0 },\n      this.handleBackspace,\n    );\n    this.listen();\n  }\n\n  addBinding(keyBinding, context = {}, handler = {}) {\n    const binding = normalize(keyBinding);\n    if (binding == null) {\n      debug.warn('Attempted to add invalid keyboard binding', binding);\n      return;\n    }\n    if (typeof context === 'function') {\n      context = { handler: context };\n    }\n    if (typeof handler === 'function') {\n      handler = { handler };\n    }\n    const keys = Array.isArray(binding.key) ? binding.key : [binding.key];\n    keys.forEach(key => {\n      const singleBinding = extend({}, binding, { key }, context, handler);\n      this.bindings[singleBinding.key] = this.bindings[singleBinding.key] || [];\n      this.bindings[singleBinding.key].push(singleBinding);\n    });\n  }\n\n  listen() {\n    this.quill.root.addEventListener('keydown', evt => {\n      if (evt.defaultPrevented) return;\n      const bindings = (this.bindings[evt.key] || []).concat(\n        this.bindings[evt.which] || [],\n      );\n      const matches = bindings.filter(binding => Keyboard.match(evt, binding));\n      if (matches.length === 0) return;\n      const range = this.quill.getSelection();\n      if (range == null || !this.quill.hasFocus()) return;\n      const [line, offset] = this.quill.getLine(range.index);\n      const [leafStart, offsetStart] = this.quill.getLeaf(range.index);\n      const [leafEnd, offsetEnd] =\n        range.length === 0\n          ? [leafStart, offsetStart]\n          : this.quill.getLeaf(range.index + range.length);\n      const prefixText =\n        leafStart instanceof TextBlot\n          ? leafStart.value().slice(0, offsetStart)\n          : '';\n      const suffixText =\n        leafEnd instanceof TextBlot ? leafEnd.value().slice(offsetEnd) : '';\n      const curContext = {\n        collapsed: range.length === 0,\n        empty: range.length === 0 && line.length() <= 1,\n        format: this.quill.getFormat(range),\n        line,\n        offset,\n        prefix: prefixText,\n        suffix: suffixText,\n        event: evt,\n      };\n      const prevented = matches.some(binding => {\n        if (\n          binding.collapsed != null &&\n          binding.collapsed !== curContext.collapsed\n        ) {\n          return false;\n        }\n        if (binding.empty != null && binding.empty !== curContext.empty) {\n          return false;\n        }\n        if (binding.offset != null && binding.offset !== curContext.offset) {\n          return false;\n        }\n        if (Array.isArray(binding.format)) {\n          // any format is present\n          if (binding.format.every(name => curContext.format[name] == null)) {\n            return false;\n          }\n        } else if (typeof binding.format === 'object') {\n          // all formats must match\n          if (\n            !Object.keys(binding.format).every(name => {\n              if (binding.format[name] === true)\n                return curContext.format[name] != null;\n              if (binding.format[name] === false)\n                return curContext.format[name] == null;\n              return equal(binding.format[name], curContext.format[name]);\n            })\n          ) {\n            return false;\n          }\n        }\n        if (binding.prefix != null && !binding.prefix.test(curContext.prefix)) {\n          return false;\n        }\n        if (binding.suffix != null && !binding.suffix.test(curContext.suffix)) {\n          return false;\n        }\n        return binding.handler.call(this, range, curContext, binding) !== true;\n      });\n      if (prevented) {\n        evt.preventDefault();\n      }\n    });\n  }\n\n  handleBackspace(range, context) {\n    // Check for astral symbols\n    const length = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]$/.test(context.prefix)\n      ? 2\n      : 1;\n    if (range.index === 0 || this.quill.getLength() <= 1) return;\n    let formats = {};\n    const [line] = this.quill.getLine(range.index);\n    let delta = new Delta().retain(range.index - length).delete(length);\n    if (context.offset === 0) {\n      // Always deleting newline here, length always 1\n      const [prev] = this.quill.getLine(range.index - 1);\n      if (prev) {\n        const curFormats = line.formats();\n        const prevFormats = this.quill.getFormat(range.index - 1, 1);\n        formats = AttributeMap.diff(curFormats, prevFormats) || {};\n        if (Object.keys(formats).length > 0) {\n          // line.length() - 1 targets \\n in line, another -1 for newline being deleted\n          const formatDelta = new Delta()\n            .retain(range.index + line.length() - 2)\n            .retain(1, formats);\n          delta = delta.compose(formatDelta);\n        }\n      }\n    }\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.focus();\n  }\n\n  handleDelete(range, context) {\n    // Check for astral symbols\n    const length = /^[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/.test(context.suffix)\n      ? 2\n      : 1;\n    if (range.index >= this.quill.getLength() - length) return;\n    let formats = {};\n    const [line] = this.quill.getLine(range.index);\n    let delta = new Delta().retain(range.index).delete(length);\n    if (context.offset >= line.length() - 1) {\n      const [next] = this.quill.getLine(range.index + 1);\n      if (next) {\n        const curFormats = line.formats();\n        const nextFormats = this.quill.getFormat(range.index, 1);\n        formats = AttributeMap.diff(curFormats, nextFormats) || {};\n        if (Object.keys(formats).length > 0) {\n          delta = delta.retain(next.length() - 1).retain(1, formats);\n        }\n      }\n    }\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.focus();\n  }\n\n  handleDeleteRange(range) {\n    const lines = this.quill.getLines(range);\n    let formats = {};\n    if (lines.length > 1) {\n      const firstFormats = lines[0].formats();\n      const lastFormats = lines[lines.length - 1].formats();\n      formats = AttributeMap.diff(lastFormats, firstFormats) || {};\n    }\n    this.quill.deleteText(range, Quill.sources.USER);\n    if (Object.keys(formats).length > 0) {\n      this.quill.formatLine(range.index, 1, formats, Quill.sources.USER);\n    }\n    this.quill.setSelection(range.index, Quill.sources.SILENT);\n    this.quill.focus();\n  }\n\n  handleEnter(range, context) {\n    const lineFormats = Object.keys(context.format).reduce(\n      (formats, format) => {\n        if (\n          this.quill.scroll.query(format, Scope.BLOCK) &&\n          !Array.isArray(context.format[format])\n        ) {\n          formats[format] = context.format[format];\n        }\n        return formats;\n      },\n      {},\n    );\n    const delta = new Delta()\n      .retain(range.index)\n      .delete(range.length)\n      .insert('\\n', lineFormats);\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n    this.quill.focus();\n\n    Object.keys(context.format).forEach(name => {\n      if (lineFormats[name] != null) return;\n      if (Array.isArray(context.format[name])) return;\n      if (name === 'code' || name === 'link') return;\n      this.quill.format(name, context.format[name], Quill.sources.USER);\n    });\n  }\n}\n\nKeyboard.DEFAULTS = {\n  bindings: {\n    bold: makeFormatHandler('bold'),\n    italic: makeFormatHandler('italic'),\n    underline: makeFormatHandler('underline'),\n    indent: {\n      // highlight tab or tab at beginning of list, indent or blockquote\n      key: 'Tab',\n      format: ['blockquote', 'indent', 'list'],\n      handler(range, context) {\n        if (context.collapsed && context.offset !== 0) return true;\n        this.quill.format('indent', '+1', Quill.sources.USER);\n        return false;\n      },\n    },\n    outdent: {\n      key: 'Tab',\n      shiftKey: true,\n      format: ['blockquote', 'indent', 'list'],\n      // highlight tab or tab at beginning of list, indent or blockquote\n      handler(range, context) {\n        if (context.collapsed && context.offset !== 0) return true;\n        this.quill.format('indent', '-1', Quill.sources.USER);\n        return false;\n      },\n    },\n    'outdent backspace': {\n      key: 'Backspace',\n      collapsed: true,\n      shiftKey: null,\n      metaKey: null,\n      ctrlKey: null,\n      altKey: null,\n      format: ['indent', 'list'],\n      offset: 0,\n      handler(range, context) {\n        if (context.format.indent != null) {\n          this.quill.format('indent', '-1', Quill.sources.USER);\n        } else if (context.format.list != null) {\n          this.quill.format('list', false, Quill.sources.USER);\n        }\n      },\n    },\n    'indent code-block': makeCodeBlockHandler(true),\n    'outdent code-block': makeCodeBlockHandler(false),\n    'remove tab': {\n      key: 'Tab',\n      shiftKey: true,\n      collapsed: true,\n      prefix: /\\t$/,\n      handler(range) {\n        this.quill.deleteText(range.index - 1, 1, Quill.sources.USER);\n      },\n    },\n    tab: {\n      key: 'Tab',\n      handler(range, context) {\n        if (context.format.table) return true;\n        this.quill.history.cutoff();\n        const delta = new Delta()\n          .retain(range.index)\n          .delete(range.length)\n          .insert('\\t');\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.history.cutoff();\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        return false;\n      },\n    },\n    'blockquote empty enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['blockquote'],\n      empty: true,\n      handler() {\n        this.quill.format('blockquote', false, Quill.sources.USER);\n      },\n    },\n    'list empty enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['list'],\n      empty: true,\n      handler(range, context) {\n        const formats = { list: false };\n        if (context.format.indent) {\n          formats.indent = false;\n        }\n        this.quill.formatLine(\n          range.index,\n          range.length,\n          formats,\n          Quill.sources.USER,\n        );\n      },\n    },\n    'checklist enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: { list: 'checked' },\n      handler(range) {\n        const [line, offset] = this.quill.getLine(range.index);\n        const formats = extend({}, line.formats(), { list: 'checked' });\n        const delta = new Delta()\n          .retain(range.index)\n          .insert('\\n', formats)\n          .retain(line.length() - offset - 1)\n          .retain(1, { list: 'unchecked' });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        this.quill.scrollIntoView();\n      },\n    },\n    'header enter': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['header'],\n      suffix: /^$/,\n      handler(range, context) {\n        const [line, offset] = this.quill.getLine(range.index);\n        const delta = new Delta()\n          .retain(range.index)\n          .insert('\\n', context.format)\n          .retain(line.length() - offset - 1)\n          .retain(1, { header: null });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.setSelection(range.index + 1, Quill.sources.SILENT);\n        this.quill.scrollIntoView();\n      },\n    },\n    'table backspace': {\n      key: 'Backspace',\n      format: ['table'],\n      collapsed: true,\n      offset: 0,\n      handler() {},\n    },\n    'table delete': {\n      key: 'Delete',\n      format: ['table'],\n      collapsed: true,\n      suffix: /^$/,\n      handler() {},\n    },\n    'table enter': {\n      key: 'Enter',\n      shiftKey: null,\n      format: ['table'],\n      handler(range) {\n        const module = this.quill.getModule('table');\n        if (module) {\n          const [table, row, cell, offset] = module.getTable(range);\n          const shift = tableSide(table, row, cell, offset);\n          if (shift == null) return;\n          let index = table.offset();\n          if (shift < 0) {\n            const delta = new Delta().retain(index).insert('\\n');\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(\n              range.index + 1,\n              range.length,\n              Quill.sources.SILENT,\n            );\n          } else if (shift > 0) {\n            index += table.length();\n            const delta = new Delta().retain(index).insert('\\n');\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(index, Quill.sources.USER);\n          }\n        }\n      },\n    },\n    'table tab': {\n      key: 'Tab',\n      shiftKey: null,\n      format: ['table'],\n      handler(range, context) {\n        const { event, line: cell } = context;\n        const offset = cell.offset(this.quill.scroll);\n        if (event.shiftKey) {\n          this.quill.setSelection(offset - 1, Quill.sources.USER);\n        } else {\n          this.quill.setSelection(offset + cell.length(), Quill.sources.USER);\n        }\n      },\n    },\n    'list autofill': {\n      key: ' ',\n      shiftKey: null,\n      collapsed: true,\n      format: {\n        list: false,\n        'code-block': false,\n        blockquote: false,\n        header: false,\n        table: false,\n      },\n      prefix: /^\\s*?(\\d+\\.|-|\\*|\\[ ?\\]|\\[x\\])$/,\n      handler(range, context) {\n        if (this.quill.scroll.query('list') == null) return true;\n        const { length } = context.prefix;\n        const [line, offset] = this.quill.getLine(range.index);\n        if (offset > length) return true;\n        let value;\n        switch (context.prefix.trim()) {\n          case '[]':\n          case '[ ]':\n            value = 'unchecked';\n            break;\n          case '[x]':\n            value = 'checked';\n            break;\n          case '-':\n          case '*':\n            value = 'bullet';\n            break;\n          default:\n            value = 'ordered';\n        }\n        this.quill.insertText(range.index, ' ', Quill.sources.USER);\n        this.quill.history.cutoff();\n        const delta = new Delta()\n          .retain(range.index - offset)\n          .delete(length + 1)\n          .retain(line.length() - 2 - offset)\n          .retain(1, { list: value });\n        this.quill.updateContents(delta, Quill.sources.USER);\n        this.quill.history.cutoff();\n        this.quill.setSelection(range.index - length, Quill.sources.SILENT);\n        return false;\n      },\n    },\n    'code exit': {\n      key: 'Enter',\n      collapsed: true,\n      format: ['code-block'],\n      prefix: /^$/,\n      suffix: /^\\s*$/,\n      handler(range) {\n        const [line, offset] = this.quill.getLine(range.index);\n        let numLines = 2;\n        let cur = line;\n        while (\n          cur != null &&\n          cur.length() <= 1 &&\n          cur.formats()['code-block']\n        ) {\n          cur = cur.prev;\n          numLines -= 1;\n          // Requisite prev lines are empty\n          if (numLines <= 0) {\n            const delta = new Delta()\n              .retain(range.index + line.length() - offset - 2)\n              .retain(1, { 'code-block': null })\n              .delete(1);\n            this.quill.updateContents(delta, Quill.sources.USER);\n            this.quill.setSelection(range.index - 1, Quill.sources.SILENT);\n            return false;\n          }\n        }\n        return true;\n      },\n    },\n    'embed left': makeEmbedArrowHandler('ArrowLeft', false),\n    'embed left shift': makeEmbedArrowHandler('ArrowLeft', true),\n    'embed right': makeEmbedArrowHandler('ArrowRight', false),\n    'embed right shift': makeEmbedArrowHandler('ArrowRight', true),\n    'table down': makeTableArrowHandler(false),\n    'table up': makeTableArrowHandler(true),\n  },\n};\n\nfunction makeCodeBlockHandler(indent) {\n  return {\n    key: 'Tab',\n    shiftKey: !indent,\n    format: { 'code-block': true },\n    handler(range) {\n      const CodeBlock = this.quill.scroll.query('code-block');\n      const lines =\n        range.length === 0\n          ? this.quill.getLines(range.index, 1)\n          : this.quill.getLines(range);\n      let { index, length } = range;\n      lines.forEach((line, i) => {\n        if (indent) {\n          line.insertAt(0, CodeBlock.TAB);\n          if (i === 0) {\n            index += CodeBlock.TAB.length;\n          } else {\n            length += CodeBlock.TAB.length;\n          }\n        } else if (line.domNode.textContent.startsWith(CodeBlock.TAB)) {\n          line.deleteAt(0, CodeBlock.TAB.length);\n          if (i === 0) {\n            index -= CodeBlock.TAB.length;\n          } else {\n            length -= CodeBlock.TAB.length;\n          }\n        }\n      });\n      this.quill.update(Quill.sources.USER);\n      this.quill.setSelection(index, length, Quill.sources.SILENT);\n    },\n  };\n}\n\nfunction makeEmbedArrowHandler(key, shiftKey) {\n  const where = key === 'ArrowLeft' ? 'prefix' : 'suffix';\n  return {\n    key,\n    shiftKey,\n    altKey: null,\n    [where]: /^$/,\n    handler(range) {\n      let { index } = range;\n      if (key === 'ArrowRight') {\n        index += range.length + 1;\n      }\n      const [leaf] = this.quill.getLeaf(index);\n      if (!(leaf instanceof EmbedBlot)) return true;\n      if (key === 'ArrowLeft') {\n        if (shiftKey) {\n          this.quill.setSelection(\n            range.index - 1,\n            range.length + 1,\n            Quill.sources.USER,\n          );\n        } else {\n          this.quill.setSelection(range.index - 1, Quill.sources.USER);\n        }\n      } else if (shiftKey) {\n        this.quill.setSelection(\n          range.index,\n          range.length + 1,\n          Quill.sources.USER,\n        );\n      } else {\n        this.quill.setSelection(\n          range.index + range.length + 1,\n          Quill.sources.USER,\n        );\n      }\n      return false;\n    },\n  };\n}\n\nfunction makeFormatHandler(format) {\n  return {\n    key: format[0],\n    shortKey: true,\n    handler(range, context) {\n      this.quill.format(format, !context.format[format], Quill.sources.USER);\n    },\n  };\n}\n\nfunction makeTableArrowHandler(up) {\n  return {\n    key: up ? 'ArrowUp' : 'ArrowDown',\n    collapsed: true,\n    format: ['table'],\n    handler(range, context) {\n      // TODO move to table module\n      const key = up ? 'prev' : 'next';\n      const cell = context.line;\n      const targetRow = cell.parent[key];\n      if (targetRow != null) {\n        if (targetRow.statics.blotName === 'table-row') {\n          let targetCell = targetRow.children.head;\n          let cur = cell;\n          while (cur.prev != null) {\n            cur = cur.prev;\n            targetCell = targetCell.next;\n          }\n          const index =\n            targetCell.offset(this.quill.scroll) +\n            Math.min(context.offset, targetCell.length() - 1);\n          this.quill.setSelection(index, 0, Quill.sources.USER);\n        }\n      } else {\n        const targetLine = cell.table()[key];\n        if (targetLine != null) {\n          if (up) {\n            this.quill.setSelection(\n              targetLine.offset(this.quill.scroll) + targetLine.length() - 1,\n              0,\n              Quill.sources.USER,\n            );\n          } else {\n            this.quill.setSelection(\n              targetLine.offset(this.quill.scroll),\n              0,\n              Quill.sources.USER,\n            );\n          }\n        }\n      }\n      return false;\n    },\n  };\n}\n\nfunction normalize(binding) {\n  if (typeof binding === 'string' || typeof binding === 'number') {\n    binding = { key: binding };\n  } else if (typeof binding === 'object') {\n    binding = clone(binding, false);\n  } else {\n    return null;\n  }\n  if (binding.shortKey) {\n    binding[SHORTKEY] = binding.shortKey;\n    delete binding.shortKey;\n  }\n  return binding;\n}\n\nfunction tableSide(table, row, cell, offset) {\n  if (row.prev == null && row.next == null) {\n    if (cell.prev == null && cell.next == null) {\n      return offset === 0 ? -1 : 1;\n    }\n    return cell.prev == null ? -1 : 1;\n  }\n  if (row.prev == null) {\n    return -1;\n  }\n  if (row.next == null) {\n    return 1;\n  }\n  return null;\n}\n\nexport { Keyboard as default, SHORTKEY, normalize };\n","import Delta from 'quill-delta';\nimport Emitter from '../core/emitter';\nimport Module from '../core/module';\n\nclass Uploader extends Module {\n  constructor(quill, options) {\n    super(quill, options);\n    quill.root.addEventListener('drop', e => {\n      e.preventDefault();\n      let native;\n      if (document.caretRangeFromPoint) {\n        native = document.caretRangeFromPoint(e.clientX, e.clientY);\n      } else if (document.caretPositionFromPoint) {\n        const position = document.caretPositionFromPoint(e.clientX, e.clientY);\n        native = document.createRange();\n        native.setStart(position.offsetNode, position.offset);\n        native.setEnd(position.offsetNode, position.offset);\n      } else {\n        return;\n      }\n      const normalized = quill.selection.normalizeNative(native);\n      const range = quill.selection.normalizedToRange(normalized);\n      this.upload(range, e.dataTransfer.files);\n    });\n  }\n\n  upload(range, files) {\n    const uploads = [];\n    Array.from(files).forEach(file => {\n      if (file && this.options.mimetypes.includes(file.type)) {\n        uploads.push(file);\n      }\n    });\n    if (uploads.length > 0) {\n      this.options.handler.call(this, range, uploads);\n    }\n  }\n}\n\nUploader.DEFAULTS = {\n  mimetypes: ['image/png', 'image/jpeg'],\n  handler(range, files) {\n    const promises = files.map(file => {\n      return new Promise(resolve => {\n        const reader = new FileReader();\n        reader.onload = e => {\n          resolve(e.target.result);\n        };\n        reader.readAsDataURL(file);\n      });\n    });\n    Promise.all(promises).then(images => {\n      const update = images.reduce((delta, image) => {\n        return delta.insert({ image });\n      }, new Delta().retain(range.index).delete(range.length));\n      this.quill.updateContents(update, Emitter.sources.USER);\n      this.quill.setSelection(\n        range.index + images.length,\n        Emitter.sources.SILENT,\n      );\n    });\n  },\n};\n\nexport default Uploader;\n","import Quill from './core/quill';\n\nimport Block, { BlockEmbed } from './blots/block';\nimport Break from './blots/break';\nimport Container from './blots/container';\nimport Cursor from './blots/cursor';\nimport Embed from './blots/embed';\nimport Inline from './blots/inline';\nimport Scroll from './blots/scroll';\nimport TextBlot from './blots/text';\n\nimport Clipboard from './modules/clipboard';\nimport History from './modules/history';\nimport Keyboard from './modules/keyboard';\nimport Uploader from './modules/uploader';\n\nQuill.register({\n  'blots/block': Block,\n  'blots/block/embed': BlockEmbed,\n  'blots/break': Break,\n  'blots/container': Container,\n  'blots/cursor': Cursor,\n  'blots/embed': Embed,\n  'blots/inline': Inline,\n  'blots/scroll': Scroll,\n  'blots/text': TextBlot,\n\n  'modules/clipboard': Clipboard,\n  'modules/history': History,\n  'modules/keyboard': Keyboard,\n  'modules/uploader': Uploader,\n});\n\nexport default Quill;\n","import { EmbedBlot } from 'parchment';\nimport TextBlot from './text';\n\nconst GUARD_TEXT = '\\uFEFF';\n\nclass Embed extends EmbedBlot {\n  constructor(scroll, node) {\n    super(scroll, node);\n    this.contentNode = document.createElement('span');\n    this.contentNode.setAttribute('contenteditable', false);\n    Array.from(this.domNode.childNodes).forEach(childNode => {\n      this.contentNode.appendChild(childNode);\n    });\n    this.leftGuard = document.createTextNode(GUARD_TEXT);\n    this.rightGuard = document.createTextNode(GUARD_TEXT);\n    this.domNode.appendChild(this.leftGuard);\n    this.domNode.appendChild(this.contentNode);\n    this.domNode.appendChild(this.rightGuard);\n  }\n\n  index(node, offset) {\n    if (node === this.leftGuard) return 0;\n    if (node === this.rightGuard) return 1;\n    return super.index(node, offset);\n  }\n\n  restore(node) {\n    let range;\n    let textNode;\n    const text = node.data.split(GUARD_TEXT).join('');\n    if (node === this.leftGuard) {\n      if (this.prev instanceof TextBlot) {\n        const prevLength = this.prev.length();\n        this.prev.insertAt(prevLength, text);\n        range = {\n          startNode: this.prev.domNode,\n          startOffset: prevLength + text.length,\n        };\n      } else {\n        textNode = document.createTextNode(text);\n        this.parent.insertBefore(this.scroll.create(textNode), this);\n        range = {\n          startNode: textNode,\n          startOffset: text.length,\n        };\n      }\n    } else if (node === this.rightGuard) {\n      if (this.next instanceof TextBlot) {\n        this.next.insertAt(0, text);\n        range = {\n          startNode: this.next.domNode,\n          startOffset: text.length,\n        };\n      } else {\n        textNode = document.createTextNode(text);\n        this.parent.insertBefore(this.scroll.create(textNode), this.next);\n        range = {\n          startNode: textNode,\n          startOffset: text.length,\n        };\n      }\n    }\n    node.data = GUARD_TEXT;\n    return range;\n  }\n\n  update(mutations, context) {\n    mutations.forEach(mutation => {\n      if (\n        mutation.type === 'characterData' &&\n        (mutation.target === this.leftGuard ||\n          mutation.target === this.rightGuard)\n      ) {\n        const range = this.restore(mutation.target);\n        if (range) context.range = range;\n      }\n    });\n  }\n}\n\nexport default Embed;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Iterator_1 = __importDefault(require(\"./Iterator\"));\nvar Op;\n(function (Op) {\n    function iterator(ops) {\n        return new Iterator_1.default(ops);\n    }\n    Op.iterator = iterator;\n    function length(op) {\n        if (typeof op.delete === 'number') {\n            return op.delete;\n        }\n        else if (typeof op.retain === 'number') {\n            return op.retain;\n        }\n        else {\n            return typeof op.insert === 'string' ? op.insert.length : 1;\n        }\n    }\n    Op.length = length;\n})(Op || (Op = {}));\nexports.default = Op;\n//# sourceMappingURL=Op.js.map","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import { ClassAttributor, Scope } from 'parchment';\n\nclass IndentAttributor extends ClassAttributor {\n  add(node, value) {\n    if (value === '+1' || value === '-1') {\n      const indent = this.value(node) || 0;\n      value = value === '+1' ? indent + 1 : indent - 1;\n    }\n    if (value === 0) {\n      this.remove(node);\n      return true;\n    }\n    return super.add(node, value);\n  }\n\n  canAdd(node, value) {\n    return super.canAdd(node, value) || super.canAdd(node, parseInt(value, 10));\n  }\n\n  value(node) {\n    return parseInt(super.value(node), 10) || undefined; // Don't return NaN\n  }\n}\n\nconst IndentClass = new IndentAttributor('indent', 'ql-indent', {\n  scope: Scope.BLOCK,\n  whitelist: [1, 2, 3, 4, 5, 6, 7, 8],\n});\n\nexport default IndentClass;\n","import Block from '../blots/block';\n\nclass Blockquote extends Block {}\nBlockquote.blotName = 'blockquote';\nBlockquote.tagName = 'blockquote';\n\nexport default Blockquote;\n","import Block from '../blots/block';\n\nclass Header extends Block {\n  static formats(domNode) {\n    return this.tagName.indexOf(domNode.tagName) + 1;\n  }\n}\nHeader.blotName = 'header';\nHeader.tagName = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];\n\nexport default Header;\n","import Block from '../blots/block';\nimport Container from '../blots/container';\nimport Quill from '../core/quill';\n\nclass ListContainer extends Container {}\nListContainer.blotName = 'list-container';\nListContainer.tagName = 'OL';\n\nclass ListItem extends Block {\n  static create(value) {\n    const node = super.create();\n    node.setAttribute('data-list', value);\n    return node;\n  }\n\n  static formats(domNode) {\n    return domNode.getAttribute('data-list') || undefined;\n  }\n\n  static register() {\n    Quill.register(ListContainer);\n  }\n\n  constructor(scroll, domNode) {\n    super(scroll, domNode);\n    const ui = domNode.ownerDocument.createElement('span');\n    const listEventHandler = e => {\n      if (!scroll.isEnabled()) return;\n      const format = this.statics.formats(domNode, scroll);\n      if (format === 'checked') {\n        this.format('list', 'unchecked');\n        e.preventDefault();\n      } else if (format === 'unchecked') {\n        this.format('list', 'checked');\n        e.preventDefault();\n      }\n    };\n    ui.addEventListener('mousedown', listEventHandler);\n    ui.addEventListener('touchstart', listEventHandler);\n    this.attachUI(ui);\n  }\n\n  format(name, value) {\n    if (name === this.statics.blotName && value) {\n      this.domNode.setAttribute('data-list', value);\n    } else {\n      super.format(name, value);\n    }\n  }\n}\nListItem.blotName = 'list';\nListItem.tagName = 'LI';\n\nListContainer.allowedChildren = [ListItem];\nListItem.requiredContainer = ListContainer;\n\nexport { ListContainer, ListItem as default };\n","import Bold from './bold';\n\nclass Italic extends Bold {}\nItalic.blotName = 'italic';\nItalic.tagName = ['EM', 'I'];\n\nexport default Italic;\n","import Inline from '../blots/inline';\n\nclass Script extends Inline {\n  static create(value) {\n    if (value === 'super') {\n      return document.createElement('sup');\n    }\n    if (value === 'sub') {\n      return document.createElement('sub');\n    }\n    return super.create(value);\n  }\n\n  static formats(domNode) {\n    if (domNode.tagName === 'SUB') return 'sub';\n    if (domNode.tagName === 'SUP') return 'super';\n    return undefined;\n  }\n}\nScript.blotName = 'script';\nScript.tagName = ['SUB', 'SUP'];\n\nexport default Script;\n","import Inline from '../blots/inline';\n\nclass Strike extends Inline {}\nStrike.blotName = 'strike';\nStrike.tagName = 'S';\n\nexport default Strike;\n","import Inline from '../blots/inline';\n\nclass Underline extends Inline {}\nUnderline.blotName = 'underline';\nUnderline.tagName = 'U';\n\nexport default Underline;\n","import { EmbedBlot } from 'parchment';\nimport { sanitize } from './link';\n\nconst ATTRIBUTES = ['alt', 'height', 'width'];\n\nclass Image extends EmbedBlot {\n  static create(value) {\n    const node = super.create(value);\n    if (typeof value === 'string') {\n      node.setAttribute('src', this.sanitize(value));\n    }\n    return node;\n  }\n\n  static formats(domNode) {\n    return ATTRIBUTES.reduce((formats, attribute) => {\n      if (domNode.hasAttribute(attribute)) {\n        formats[attribute] = domNode.getAttribute(attribute);\n      }\n      return formats;\n    }, {});\n  }\n\n  static match(url) {\n    return /\\.(jpe?g|gif|png)$/.test(url) || /^data:image\\/.+;base64/.test(url);\n  }\n\n  static register() {\n    if (/Firefox/i.test(navigator.userAgent)) {\n      setTimeout(() => {\n        // Disable image resizing in Firefox\n        document.execCommand('enableObjectResizing', false, false);\n      }, 1);\n    }\n  }\n\n  static sanitize(url) {\n    return sanitize(url, ['http', 'https', 'data']) ? url : '//:0';\n  }\n\n  static value(domNode) {\n    return domNode.getAttribute('src');\n  }\n\n  format(name, value) {\n    if (ATTRIBUTES.indexOf(name) > -1) {\n      if (value) {\n        this.domNode.setAttribute(name, value);\n      } else {\n        this.domNode.removeAttribute(name);\n      }\n    } else {\n      super.format(name, value);\n    }\n  }\n}\nImage.blotName = 'image';\nImage.tagName = 'IMG';\n\nexport default Image;\n","import Delta from 'quill-delta';\nimport { ClassAttributor, Scope } from 'parchment';\nimport Inline from '../blots/inline';\nimport Quill from '../core/quill';\nimport Module from '../core/module';\nimport { blockDelta } from '../blots/block';\nimport BreakBlot from '../blots/break';\nimport CursorBlot from '../blots/cursor';\nimport TextBlot, { escapeText } from '../blots/text';\nimport CodeBlock, { CodeBlockContainer } from '../formats/code';\nimport { traverse } from './clipboard';\n\nconst TokenAttributor = new ClassAttributor('code-token', 'hljs', {\n  scope: Scope.INLINE,\n});\nclass CodeToken extends Inline {\n  static formats(node, scroll) {\n    while (node != null && node !== scroll.domNode) {\n      if (node.classList.contains(CodeBlock.className)) {\n        return super.formats(node, scroll);\n      }\n      node = node.parentNode;\n    }\n    return undefined;\n  }\n\n  constructor(scroll, domNode, value) {\n    super(scroll, domNode, value);\n    TokenAttributor.add(this.domNode, value);\n  }\n\n  format(format, value) {\n    if (format !== CodeToken.blotName) {\n      super.format(format, value);\n    } else if (value) {\n      TokenAttributor.add(this.domNode, value);\n    } else {\n      TokenAttributor.remove(this.domNode);\n      this.domNode.classList.remove(this.statics.className);\n    }\n  }\n\n  optimize(...args) {\n    super.optimize(...args);\n    if (!TokenAttributor.value(this.domNode)) {\n      this.unwrap();\n    }\n  }\n}\nCodeToken.blotName = 'code-token';\nCodeToken.className = 'ql-token';\n\nclass SyntaxCodeBlock extends CodeBlock {\n  static create(value) {\n    const domNode = super.create(value);\n    if (typeof value === 'string') {\n      domNode.setAttribute('data-language', value);\n    }\n    return domNode;\n  }\n\n  static formats(domNode) {\n    return domNode.getAttribute('data-language') || 'plain';\n  }\n\n  static register() {} // Syntax module will register\n\n  format(name, value) {\n    if (name === this.statics.blotName && value) {\n      this.domNode.setAttribute('data-language', value);\n    } else {\n      super.format(name, value);\n    }\n  }\n\n  replaceWith(name, value) {\n    this.formatAt(0, this.length(), CodeToken.blotName, false);\n    return super.replaceWith(name, value);\n  }\n}\n\nclass SyntaxCodeBlockContainer extends CodeBlockContainer {\n  attach() {\n    super.attach();\n    this.forceNext = false;\n    this.scroll.emitMount(this);\n  }\n\n  format(name, value) {\n    if (name === SyntaxCodeBlock.blotName) {\n      this.forceNext = true;\n      this.children.forEach(child => {\n        child.format(name, value);\n      });\n    }\n  }\n\n  formatAt(index, length, name, value) {\n    if (name === SyntaxCodeBlock.blotName) {\n      this.forceNext = true;\n    }\n    super.formatAt(index, length, name, value);\n  }\n\n  highlight(highlight, forced = false) {\n    if (this.children.head == null) return;\n    const nodes = Array.from(this.domNode.childNodes).filter(\n      node => node !== this.uiNode,\n    );\n    const text = `${nodes.map(node => node.textContent).join('\\n')}\\n`;\n    const language = SyntaxCodeBlock.formats(this.children.head.domNode);\n    if (forced || this.forceNext || this.cachedText !== text) {\n      if (text.trim().length > 0 || this.cachedText == null) {\n        const oldDelta = this.children.reduce((delta, child) => {\n          return delta.concat(blockDelta(child, false));\n        }, new Delta());\n        const delta = highlight(text, language);\n        oldDelta.diff(delta).reduce((index, { retain, attributes }) => {\n          // Should be all retains\n          if (!retain) return index;\n          if (attributes) {\n            Object.keys(attributes).forEach(format => {\n              if (\n                [SyntaxCodeBlock.blotName, CodeToken.blotName].includes(format)\n              ) {\n                this.formatAt(index, retain, format, attributes[format]);\n              }\n            });\n          }\n          return index + retain;\n        }, 0);\n      }\n      this.cachedText = text;\n      this.forceNext = false;\n    }\n  }\n\n  optimize(context) {\n    super.optimize(context);\n    if (\n      this.parent != null &&\n      this.children.head != null &&\n      this.uiNode != null\n    ) {\n      const language = SyntaxCodeBlock.formats(this.children.head.domNode);\n      if (language !== this.uiNode.value) {\n        this.uiNode.value = language;\n      }\n    }\n  }\n}\nSyntaxCodeBlockContainer.allowedChildren = [SyntaxCodeBlock];\nSyntaxCodeBlock.requiredContainer = SyntaxCodeBlockContainer;\nSyntaxCodeBlock.allowedChildren = [CodeToken, CursorBlot, TextBlot, BreakBlot];\n\nclass Syntax extends Module {\n  static register() {\n    Quill.register(CodeToken, true);\n    Quill.register(SyntaxCodeBlock, true);\n    Quill.register(SyntaxCodeBlockContainer, true);\n  }\n\n  constructor(quill, options) {\n    super(quill, options);\n    if (this.options.hljs == null) {\n      throw new Error(\n        'Syntax module requires highlight.js. Please include the library on the page before Quill.',\n      );\n    }\n    this.highlightBlot = this.highlightBlot.bind(this);\n    this.initListener();\n    this.initTimer();\n  }\n\n  initListener() {\n    this.quill.on(Quill.events.SCROLL_BLOT_MOUNT, blot => {\n      if (!(blot instanceof SyntaxCodeBlockContainer)) return;\n      const select = this.quill.root.ownerDocument.createElement('select');\n      this.options.languages.forEach(({ key, label }) => {\n        const option = select.ownerDocument.createElement('option');\n        option.textContent = label;\n        option.setAttribute('value', key);\n        select.appendChild(option);\n      });\n      select.addEventListener('change', () => {\n        blot.format(SyntaxCodeBlock.blotName, select.value);\n        this.quill.root.focus(); // Prevent scrolling\n        this.highlight(blot, true);\n      });\n      if (blot.uiNode == null) {\n        blot.attachUI(select);\n        if (blot.children.head) {\n          select.value = SyntaxCodeBlock.formats(blot.children.head.domNode);\n        }\n      }\n    });\n  }\n\n  initTimer() {\n    let timer = null;\n    this.quill.on(Quill.events.SCROLL_OPTIMIZE, () => {\n      clearTimeout(timer);\n      timer = setTimeout(() => {\n        this.highlight();\n        timer = null;\n      }, this.options.interval);\n    });\n  }\n\n  highlight(blot = null, force = false) {\n    if (this.quill.selection.composing) return;\n    this.quill.update(Quill.sources.USER);\n    const range = this.quill.getSelection();\n    const blots =\n      blot == null\n        ? this.quill.scroll.descendants(SyntaxCodeBlockContainer)\n        : [blot];\n    blots.forEach(container => {\n      container.highlight(this.highlightBlot, force);\n    });\n    this.quill.update(Quill.sources.SILENT);\n    if (range != null) {\n      this.quill.setSelection(range, Quill.sources.SILENT);\n    }\n  }\n\n  highlightBlot(text, language = 'plain') {\n    if (language === 'plain') {\n      return escapeText(text)\n        .split('\\n')\n        .reduce((delta, line, i) => {\n          if (i !== 0) {\n            delta.insert('\\n', { [CodeBlock.blotName]: language });\n          }\n          return delta.insert(line);\n        }, new Delta());\n    }\n    const container = this.quill.root.ownerDocument.createElement('div');\n    container.classList.add(CodeBlock.className);\n    container.innerHTML = this.options.hljs.highlight(language, text).value;\n    return traverse(\n      this.quill.scroll,\n      container,\n      [\n        (node, delta) => {\n          const value = TokenAttributor.value(node);\n          if (value) {\n            return delta.compose(\n              new Delta().retain(delta.length(), {\n                [CodeToken.blotName]: value,\n              }),\n            );\n          }\n          return delta;\n        },\n      ],\n      [\n        (node, delta) => {\n          return node.data.split('\\n').reduce((memo, nodeText, i) => {\n            if (i !== 0) memo.insert('\\n', { [CodeBlock.blotName]: language });\n            return memo.insert(nodeText);\n          }, delta);\n        },\n      ],\n      new WeakMap(),\n    );\n  }\n}\nSyntax.DEFAULTS = {\n  hljs: (() => {\n    return window.hljs;\n  })(),\n  interval: 1000,\n  languages: [\n    { key: 'plain', label: 'Plain' },\n    { key: 'bash', label: 'Bash' },\n    { key: 'cpp', label: 'C++' },\n    { key: 'cs', label: 'C#' },\n    { key: 'css', label: 'CSS' },\n    { key: 'diff', label: 'Diff' },\n    { key: 'xml', label: 'HTML/XML' },\n    { key: 'java', label: 'Java' },\n    { key: 'javascript', label: 'Javascript' },\n    { key: 'markdown', label: 'Markdown' },\n    { key: 'php', label: 'PHP' },\n    { key: 'python', label: 'Python' },\n    { key: 'ruby', label: 'Ruby' },\n    { key: 'sql', label: 'SQL' },\n  ],\n};\n\nexport { SyntaxCodeBlock as CodeBlock, CodeToken, Syntax as default };\n","import Delta from 'quill-delta';\nimport { EmbedBlot, Scope } from 'parchment';\nimport Quill from '../core/quill';\nimport logger from '../core/logger';\nimport Module from '../core/module';\n\nconst debug = logger('quill:toolbar');\n\nclass Toolbar extends Module {\n  constructor(quill, options) {\n    super(quill, options);\n    if (Array.isArray(this.options.container)) {\n      const container = document.createElement('div');\n      addControls(container, this.options.container);\n      quill.container.parentNode.insertBefore(container, quill.container);\n      this.container = container;\n    } else if (typeof this.options.container === 'string') {\n      const rootDocument = ('getRootNode' in document ? quill.container.getRootNode() : document);\n      this.container = rootDocument.querySelector(this.options.container);\n    } else {\n      this.container = this.options.container;\n    }\n    if (!(this.container instanceof HTMLElement)) {\n      return debug.error('Container required for toolbar', this.options);\n    }\n    this.container.classList.add('ql-toolbar');\n    this.controls = [];\n    this.handlers = {};\n    Object.keys(this.options.handlers).forEach(format => {\n      this.addHandler(format, this.options.handlers[format]);\n    });\n    Array.from(this.container.querySelectorAll('button, select')).forEach(\n      input => {\n        this.attach(input);\n      },\n    );\n    this.quill.on(Quill.events.EDITOR_CHANGE, (type, range) => {\n      if (type === Quill.events.SELECTION_CHANGE) {\n        this.update(range);\n      }\n    });\n    this.quill.on(Quill.events.SCROLL_OPTIMIZE, () => {\n      const [range] = this.quill.selection.getRange(); // quill.getSelection triggers update\n      this.update(range);\n    });\n  }\n\n  addHandler(format, handler) {\n    this.handlers[format] = handler;\n  }\n\n  attach(input) {\n    let format = Array.from(input.classList).find(className => {\n      return className.indexOf('ql-') === 0;\n    });\n    if (!format) return;\n    format = format.slice('ql-'.length);\n    if (input.tagName === 'BUTTON') {\n      input.setAttribute('type', 'button');\n    }\n    if (\n      this.handlers[format] == null &&\n      this.quill.scroll.query(format) == null\n    ) {\n      debug.warn('ignoring attaching to nonexistent format', format, input);\n      return;\n    }\n    const eventName = input.tagName === 'SELECT' ? 'change' : 'click';\n    input.addEventListener(eventName, e => {\n      let value;\n      if (input.tagName === 'SELECT') {\n        if (input.selectedIndex < 0) return;\n        const selected = input.options[input.selectedIndex];\n        if (selected.hasAttribute('selected')) {\n          value = false;\n        } else {\n          value = selected.value || false;\n        }\n      } else {\n        if (input.classList.contains('ql-active')) {\n          value = false;\n        } else {\n          value = input.value || !input.hasAttribute('value');\n        }\n        e.preventDefault();\n      }\n      this.quill.focus();\n      const [range] = this.quill.selection.getRange();\n      if (this.handlers[format] != null) {\n        this.handlers[format].call(this, value);\n      } else if (\n        this.quill.scroll.query(format).prototype instanceof EmbedBlot\n      ) {\n        value = prompt(`Enter ${format}`); // eslint-disable-line no-alert\n        if (!value) return;\n        this.quill.updateContents(\n          new Delta()\n            .retain(range.index)\n            .delete(range.length)\n            .insert({ [format]: value }),\n          Quill.sources.USER,\n        );\n      } else {\n        this.quill.format(format, value, Quill.sources.USER);\n      }\n      this.update(range);\n    });\n    this.controls.push([format, input]);\n  }\n\n  update(range) {\n    const formats = range == null ? {} : this.quill.getFormat(range);\n    this.controls.forEach(pair => {\n      const [format, input] = pair;\n      if (input.tagName === 'SELECT') {\n        let option;\n        if (range == null) {\n          option = null;\n        } else if (formats[format] == null) {\n          option = input.querySelector('option[selected]');\n        } else if (!Array.isArray(formats[format])) {\n          let value = formats[format];\n          if (typeof value === 'string') {\n            value = value.replace(/\"/g, '\\\\\"');\n          }\n          option = input.querySelector(`option[value=\"${value}\"]`);\n        }\n        if (option == null) {\n          input.value = ''; // TODO make configurable?\n          input.selectedIndex = -1;\n        } else {\n          option.selected = true;\n        }\n      } else if (range == null) {\n        input.classList.remove('ql-active');\n      } else if (input.hasAttribute('value')) {\n        // both being null should match (default values)\n        // '1' should match with 1 (headers)\n        const isActive =\n          formats[format] === input.getAttribute('value') ||\n          (formats[format] != null &&\n            formats[format].toString() === input.getAttribute('value')) ||\n          (formats[format] == null && !input.getAttribute('value'));\n        input.classList.toggle('ql-active', isActive);\n      } else {\n        input.classList.toggle('ql-active', formats[format] != null);\n      }\n    });\n  }\n}\nToolbar.DEFAULTS = {};\n\nfunction addButton(container, format, value) {\n  const input = document.createElement('button');\n  input.setAttribute('type', 'button');\n  input.classList.add(`ql-${format}`);\n  if (value != null) {\n    input.value = value;\n  }\n  container.appendChild(input);\n}\n\nfunction addControls(container, groups) {\n  if (!Array.isArray(groups[0])) {\n    groups = [groups];\n  }\n  groups.forEach(controls => {\n    const group = document.createElement('span');\n    group.classList.add('ql-formats');\n    controls.forEach(control => {\n      if (typeof control === 'string') {\n        addButton(group, control);\n      } else {\n        const format = Object.keys(control)[0];\n        const value = control[format];\n        if (Array.isArray(value)) {\n          addSelect(group, format, value);\n        } else {\n          addButton(group, format, value);\n        }\n      }\n    });\n    container.appendChild(group);\n  });\n}\n\nfunction addSelect(container, format, values) {\n  const input = document.createElement('select');\n  input.classList.add(`ql-${format}`);\n  values.forEach(value => {\n    const option = document.createElement('option');\n    if (value !== false) {\n      option.setAttribute('value', value);\n    } else {\n      option.setAttribute('selected', 'selected');\n    }\n    input.appendChild(option);\n  });\n  container.appendChild(input);\n}\n\nToolbar.DEFAULTS = {\n  container: null,\n  handlers: {\n    clean() {\n      const range = this.quill.getSelection();\n      if (range == null) return;\n      if (range.length === 0) {\n        const formats = this.quill.getFormat();\n        Object.keys(formats).forEach(name => {\n          // Clean functionality in existing apps only clean inline formats\n          if (this.quill.scroll.query(name, Scope.INLINE) != null) {\n            this.quill.format(name, false, Quill.sources.USER);\n          }\n        });\n      } else {\n        this.quill.removeFormat(range, Quill.sources.USER);\n      }\n    },\n    direction(value) {\n      const { align } = this.quill.getFormat();\n      if (value === 'rtl' && align == null) {\n        this.quill.format('align', 'right', Quill.sources.USER);\n      } else if (!value && align === 'right') {\n        this.quill.format('align', false, Quill.sources.USER);\n      }\n      this.quill.format('direction', value, Quill.sources.USER);\n    },\n    indent(value) {\n      const range = this.quill.getSelection();\n      const formats = this.quill.getFormat(range);\n      const indent = parseInt(formats.indent || 0, 10);\n      if (value === '+1' || value === '-1') {\n        let modifier = value === '+1' ? 1 : -1;\n        if (formats.direction === 'rtl') modifier *= -1;\n        this.quill.format('indent', indent + modifier, Quill.sources.USER);\n      }\n    },\n    link(value) {\n      if (value === true) {\n        value = prompt('Enter link URL:'); // eslint-disable-line no-alert\n      }\n      this.quill.format('link', value, Quill.sources.USER);\n    },\n    list(value) {\n      const range = this.quill.getSelection();\n      const formats = this.quill.getFormat(range);\n      if (value === 'check') {\n        if (formats.list === 'checked' || formats.list === 'unchecked') {\n          this.quill.format('list', false, Quill.sources.USER);\n        } else {\n          this.quill.format('list', 'unchecked', Quill.sources.USER);\n        }\n      } else {\n        this.quill.format('list', value, Quill.sources.USER);\n      }\n    },\n  },\n};\n\nexport { Toolbar as default, addControls };\n","import Block from '../blots/block';\nimport Container from '../blots/container';\n\nclass TableCell extends Block {\n  static create(value) {\n    const node = super.create();\n    if (value) {\n      node.setAttribute('data-row', value);\n    } else {\n      node.setAttribute('data-row', tableId());\n    }\n    return node;\n  }\n\n  static formats(domNode) {\n    if (domNode.hasAttribute('data-row')) {\n      return domNode.getAttribute('data-row');\n    }\n    return undefined;\n  }\n\n  cellOffset() {\n    if (this.parent) {\n      return this.parent.children.indexOf(this);\n    }\n    return -1;\n  }\n\n  format(name, value) {\n    if (name === TableCell.blotName && value) {\n      this.domNode.setAttribute('data-row', value);\n    } else {\n      super.format(name, value);\n    }\n  }\n\n  row() {\n    return this.parent;\n  }\n\n  rowOffset() {\n    if (this.row()) {\n      return this.row().rowOffset();\n    }\n    return -1;\n  }\n\n  table() {\n    return this.row() && this.row().table();\n  }\n}\nTableCell.blotName = 'table';\nTableCell.tagName = 'TD';\n\nclass TableRow extends Container {\n  checkMerge() {\n    if (super.checkMerge() && this.next.children.head != null) {\n      const thisHead = this.children.head.formats();\n      const thisTail = this.children.tail.formats();\n      const nextHead = this.next.children.head.formats();\n      const nextTail = this.next.children.tail.formats();\n      return (\n        thisHead.table === thisTail.table &&\n        thisHead.table === nextHead.table &&\n        thisHead.table === nextTail.table\n      );\n    }\n    return false;\n  }\n\n  optimize(...args) {\n    super.optimize(...args);\n    this.children.forEach(child => {\n      if (child.next == null) return;\n      const childFormats = child.formats();\n      const nextFormats = child.next.formats();\n      if (childFormats.table !== nextFormats.table) {\n        const next = this.splitAfter(child);\n        if (next) {\n          next.optimize();\n        }\n        // We might be able to merge with prev now\n        if (this.prev) {\n          this.prev.optimize();\n        }\n      }\n    });\n  }\n\n  rowOffset() {\n    if (this.parent) {\n      return this.parent.children.indexOf(this);\n    }\n    return -1;\n  }\n\n  table() {\n    return this.parent && this.parent.parent;\n  }\n}\nTableRow.blotName = 'table-row';\nTableRow.tagName = 'TR';\n\nclass TableBody extends Container {}\nTableBody.blotName = 'table-body';\nTableBody.tagName = 'TBODY';\n\nclass TableContainer extends Container {\n  balanceCells() {\n    const rows = this.descendants(TableRow);\n    const maxColumns = rows.reduce((max, row) => {\n      return Math.max(row.children.length, max);\n    }, 0);\n    rows.forEach(row => {\n      new Array(maxColumns - row.children.length).fill(0).forEach(() => {\n        let value;\n        if (row.children.head != null) {\n          value = TableCell.formats(row.children.head.domNode);\n        }\n        const blot = this.scroll.create(TableCell.blotName, value);\n        row.appendChild(blot);\n        blot.optimize(); // Add break blot\n      });\n    });\n  }\n\n  cells(column) {\n    return this.rows().map(row => row.children.at(column));\n  }\n\n  deleteColumn(index) {\n    const [body] = this.descendant(TableBody);\n    if (body == null || body.children.head == null) return;\n    body.children.forEach(row => {\n      const cell = row.children.at(index);\n      if (cell != null) {\n        cell.remove();\n      }\n    });\n  }\n\n  insertColumn(index) {\n    const [body] = this.descendant(TableBody);\n    if (body == null || body.children.head == null) return;\n    body.children.forEach(row => {\n      const ref = row.children.at(index);\n      const value = TableCell.formats(row.children.head.domNode);\n      const cell = this.scroll.create(TableCell.blotName, value);\n      row.insertBefore(cell, ref);\n    });\n  }\n\n  insertRow(index) {\n    const [body] = this.descendant(TableBody);\n    if (body == null || body.children.head == null) return;\n    const id = tableId();\n    const row = this.scroll.create(TableRow.blotName);\n    body.children.head.children.forEach(() => {\n      const cell = this.scroll.create(TableCell.blotName, id);\n      row.appendChild(cell);\n    });\n    const ref = body.children.at(index);\n    body.insertBefore(row, ref);\n  }\n\n  rows() {\n    const body = this.children.head;\n    if (body == null) return [];\n    return body.children.map(row => row);\n  }\n}\nTableContainer.blotName = 'table-container';\nTableContainer.tagName = 'TABLE';\n\nTableContainer.allowedChildren = [TableBody];\nTableBody.requiredContainer = TableContainer;\n\nTableBody.allowedChildren = [TableRow];\nTableRow.requiredContainer = TableBody;\n\nTableRow.allowedChildren = [TableCell];\nTableCell.requiredContainer = TableRow;\n\nfunction tableId() {\n  const id = Math.random()\n    .toString(36)\n    .slice(2, 6);\n  return `row-${id}`;\n}\n\nexport { TableCell, TableRow, TableBody, TableContainer, tableId };\n","import Delta from 'quill-delta';\nimport Quill from '../core/quill';\nimport Module from '../core/module';\nimport {\n  TableCell,\n  TableRow,\n  TableBody,\n  TableContainer,\n  tableId,\n} from '../formats/table';\n\nclass Table extends Module {\n  static register() {\n    Quill.register(TableCell);\n    Quill.register(TableRow);\n    Quill.register(TableBody);\n    Quill.register(TableContainer);\n  }\n\n  constructor(...args) {\n    super(...args);\n    this.listenBalanceCells();\n  }\n\n  balanceTables() {\n    this.quill.scroll.descendants(TableContainer).forEach(table => {\n      table.balanceCells();\n    });\n  }\n\n  deleteColumn() {\n    const [table, , cell] = this.getTable();\n    if (cell == null) return;\n    table.deleteColumn(cell.cellOffset());\n    this.quill.update(Quill.sources.USER);\n  }\n\n  deleteRow() {\n    const [, row] = this.getTable();\n    if (row == null) return;\n    row.remove();\n    this.quill.update(Quill.sources.USER);\n  }\n\n  deleteTable() {\n    const [table] = this.getTable();\n    if (table == null) return;\n    const offset = table.offset();\n    table.remove();\n    this.quill.update(Quill.sources.USER);\n    this.quill.setSelection(offset, Quill.sources.SILENT);\n  }\n\n  getTable(range = this.quill.getSelection()) {\n    if (range == null) return [null, null, null, -1];\n    const [cell, offset] = this.quill.getLine(range.index);\n    if (cell == null || cell.statics.blotName !== TableCell.blotName) {\n      return [null, null, null, -1];\n    }\n    const row = cell.parent;\n    const table = row.parent.parent;\n    return [table, row, cell, offset];\n  }\n\n  insertColumn(offset) {\n    const range = this.quill.getSelection();\n    const [table, row, cell] = this.getTable(range);\n    if (cell == null) return;\n    const column = cell.cellOffset();\n    table.insertColumn(column + offset);\n    this.quill.update(Quill.sources.USER);\n    let shift = row.rowOffset();\n    if (offset === 0) {\n      shift += 1;\n    }\n    this.quill.setSelection(\n      range.index + shift,\n      range.length,\n      Quill.sources.SILENT,\n    );\n  }\n\n  insertColumnLeft() {\n    this.insertColumn(0);\n  }\n\n  insertColumnRight() {\n    this.insertColumn(1);\n  }\n\n  insertRow(offset) {\n    const range = this.quill.getSelection();\n    const [table, row, cell] = this.getTable(range);\n    if (cell == null) return;\n    const index = row.rowOffset();\n    table.insertRow(index + offset);\n    this.quill.update(Quill.sources.USER);\n    if (offset > 0) {\n      this.quill.setSelection(range, Quill.sources.SILENT);\n    } else {\n      this.quill.setSelection(\n        range.index + row.children.length,\n        range.length,\n        Quill.sources.SILENT,\n      );\n    }\n  }\n\n  insertRowAbove() {\n    this.insertRow(0);\n  }\n\n  insertRowBelow() {\n    this.insertRow(1);\n  }\n\n  insertTable(rows, columns) {\n    const range = this.quill.getSelection();\n    if (range == null) return;\n    const delta = new Array(rows).fill(0).reduce(memo => {\n      const text = new Array(columns).fill('\\n').join('');\n      return memo.insert(text, { table: tableId() });\n    }, new Delta().retain(range.index));\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.setSelection(range.index, Quill.sources.SILENT);\n    this.balanceTables();\n  }\n\n  listenBalanceCells() {\n    this.quill.on(Quill.events.SCROLL_OPTIMIZE, mutations => {\n      mutations.some(mutation => {\n        if (['TD', 'TR', 'TBODY', 'TABLE'].includes(mutation.target.tagName)) {\n          this.quill.once(Quill.events.TEXT_CHANGE, (delta, old, source) => {\n            if (source !== Quill.sources.USER) return;\n            this.balanceTables();\n          });\n          return true;\n        }\n        return false;\n      });\n    });\n  }\n}\n\nexport default Table;\n","exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n","var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n","/**\n * This library modifies the diff-patch-match library by Neil Fraser\n * by removing the patch and match functionality and certain advanced\n * options in the diff function. The original license is as follows:\n *\n * ===\n *\n * Diff Match and Patch\n *\n * Copyright 2006 Google Inc.\n * http://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {Int|Object} [cursor_pos] Edit position in text1 or object with more info\n * @return {Array} Array of diff tuples.\n */\nfunction diff_main(text1, text2, cursor_pos, _fix_unicode) {\n  // Check for equality\n  if (text1 === text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (cursor_pos != null) {\n    var editdiff = find_cursor_edit_diff(text1, text2, cursor_pos);\n    if (editdiff) {\n      return editdiff;\n    }\n  }\n\n  // Trim off common prefix (speedup).\n  var commonlength = diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = diff_compute_(text1, text2);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  diff_cleanupMerge(diffs, _fix_unicode);\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_compute_(text1, text2) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i !== -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [\n      [DIFF_INSERT, longtext.substring(0, i)],\n      [DIFF_EQUAL, shorttext],\n      [DIFF_INSERT, longtext.substring(i + shorttext.length)]\n    ];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length === 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = diff_main(text1_a, text2_a);\n    var diffs_b = diff_main(text1_b, text2_b);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  return diff_bisect_(text1, text2);\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @return {Array} Array of diff tuples.\n * @private\n */\nfunction diff_bisect_(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 !== 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 === -d || (k1 !== d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (\n        x1 < text1_length && y1 < text2_length &&\n        text1.charAt(x1) === text2.charAt(y1)\n      ) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] !== -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 === -d || (k2 !== d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (\n        x2 < text1_length && y2 < text2_length &&\n        text1.charAt(text1_length - x2 - 1) === text2.charAt(text2_length - y2 - 1)\n      ) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] !== -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return diff_bisectSplit_(text1, text2, x1, y1);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @return {Array} Array of diff tuples.\n */\nfunction diff_bisectSplit_(text1, text2, x, y) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = diff_main(text1a, text2a);\n  var diffsb = diff_main(text1b, text2b);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\nfunction diff_commonPrefix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) !== text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(pointerstart, pointermid) ==\n      text2.substring(pointerstart, pointermid)\n    ) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_start(text1.charCodeAt(pointermid - 1))) {\n    pointermid--;\n  }\n\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\nfunction diff_commonSuffix(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.slice(-1) !== text2.slice(-1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (\n      text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n      text2.substring(text2.length - pointermid, text2.length - pointerend)\n    ) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n\n  if (is_surrogate_pair_end(text1.charCodeAt(text1.length - pointermid))) {\n    pointermid--;\n  }\n\n  return pointermid;\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n */\nfunction diff_halfMatch_(text1, text2) {\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) !== -1) {\n      var prefixLength = diff_commonPrefix(\n        longtext.substring(i), shorttext.substring(j));\n      var suffixLength = diff_commonSuffix(\n        longtext.substring(0, i), shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(\n          j - suffixLength, j) + shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [\n        best_longtext_a, best_longtext_b,\n        best_shorttext_a, best_shorttext_b, best_common\n      ];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {Array} diffs Array of diff tuples.\n * @param {boolean} fix_unicode Whether to normalize to a unicode-correct diff\n */\nfunction diff_cleanupMerge(diffs, fix_unicode) {\n  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n      diffs.splice(pointer, 1);\n      continue;\n    }\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        var previous_equality = pointer - count_insert - count_delete - 1;\n        if (fix_unicode) {\n          // prevent splitting of unicode surrogate pairs.  when fix_unicode is true,\n          // we assume that the old and new text in the diff are complete and correct\n          // unicode-encoded JS strings, but the tuple boundaries may fall between\n          // surrogate pairs.  we fix this by shaving off stray surrogates from the end\n          // of the previous equality and the beginning of this equality.  this may create\n          // empty equalities or a common prefix or suffix.  for example, if AB and AC are\n          // emojis, `[[0, 'A'], [-1, 'BA'], [0, 'C']]` would turn into deleting 'ABAC' and\n          // inserting 'AC', and then the common suffix 'AC' will be eliminated.  in this\n          // particular case, both equalities go away, we absorb any previous inequalities,\n          // and we keep scanning for the next equality before rewriting the tuples.\n          if (previous_equality >= 0 && ends_with_pair_start(diffs[previous_equality][1])) {\n            var stray = diffs[previous_equality][1].slice(-1);\n            diffs[previous_equality][1] = diffs[previous_equality][1].slice(0, -1);\n            text_delete = stray + text_delete;\n            text_insert = stray + text_insert;\n            if (!diffs[previous_equality][1]) {\n              // emptied out previous equality, so delete it and include previous delete/insert\n              diffs.splice(previous_equality, 1);\n              pointer--;\n              var k = previous_equality - 1;\n              if (diffs[k] && diffs[k][0] === DIFF_INSERT) {\n                count_insert++;\n                text_insert = diffs[k][1] + text_insert;\n                k--;\n              }\n              if (diffs[k] && diffs[k][0] === DIFF_DELETE) {\n                count_delete++;\n                text_delete = diffs[k][1] + text_delete;\n                k--;\n              }\n              previous_equality = k;\n            }\n          }\n          if (starts_with_pair_end(diffs[pointer][1])) {\n            var stray = diffs[pointer][1].charAt(0);\n            diffs[pointer][1] = diffs[pointer][1].slice(1);\n            text_delete += stray;\n            text_insert += stray;\n          }\n        }\n        if (pointer < diffs.length - 1 && !diffs[pointer][1]) {\n          // for empty equality not at end, wait for next equality\n          diffs.splice(pointer, 1);\n          break;\n        }\n        if (text_delete.length > 0 || text_insert.length > 0) {\n          // note that diff_commonPrefix and diff_commonSuffix are unicode-aware\n          if (text_delete.length > 0 && text_insert.length > 0) {\n            // Factor out any common prefixes.\n            commonlength = diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if (previous_equality >= 0) {\n                diffs[previous_equality][1] += text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, [DIFF_EQUAL, text_insert.substring(0, commonlength)]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixes.\n            commonlength = diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] =\n                text_insert.substring(text_insert.length - commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length - commonlength);\n              text_delete = text_delete.substring(0, text_delete.length - commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          var n = count_insert + count_delete;\n          if (text_delete.length === 0 && text_insert.length === 0) {\n            diffs.splice(pointer - n, n);\n            pointer = pointer - n;\n          } else if (text_delete.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 1;\n          } else if (text_insert.length === 0) {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete]);\n            pointer = pointer - n + 1;\n          } else {\n            diffs.splice(pointer - n, n, [DIFF_DELETE, text_delete], [DIFF_INSERT, text_insert]);\n            pointer = pointer - n + 2;\n          }\n        }\n        if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] === DIFF_EQUAL &&\n      diffs[pointer + 1][0] === DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n        diffs[pointer - 1][1].length) === diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n          diffs[pointer][1].substring(0, diffs[pointer][1].length -\n            diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n        diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n          diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n          diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    diff_cleanupMerge(diffs, fix_unicode);\n  }\n};\n\nfunction is_surrogate_pair_start(charCode) {\n  return charCode >= 0xD800 && charCode <= 0xDBFF;\n}\n\nfunction is_surrogate_pair_end(charCode) {\n  return charCode >= 0xDC00 && charCode <= 0xDFFF;\n}\n\nfunction starts_with_pair_end(str) {\n  return is_surrogate_pair_end(str.charCodeAt(0));\n}\n\nfunction ends_with_pair_start(str) {\n  return is_surrogate_pair_start(str.charCodeAt(str.length - 1));\n}\n\nfunction remove_empty_tuples(tuples) {\n  var ret = [];\n  for (var i = 0; i < tuples.length; i++) {\n    if (tuples[i][1].length > 0) {\n      ret.push(tuples[i]);\n    }\n  }\n  return ret;\n}\n\nfunction make_edit_splice(before, oldMiddle, newMiddle, after) {\n  if (ends_with_pair_start(before) || starts_with_pair_end(after)) {\n    return null;\n  }\n  return remove_empty_tuples([\n    [DIFF_EQUAL, before],\n    [DIFF_DELETE, oldMiddle],\n    [DIFF_INSERT, newMiddle],\n    [DIFF_EQUAL, after]\n  ]);\n}\n\nfunction find_cursor_edit_diff(oldText, newText, cursor_pos) {\n  // note: this runs after equality check has ruled out exact equality\n  var oldRange = typeof cursor_pos === 'number' ?\n    { index: cursor_pos, length: 0 } : cursor_pos.oldRange;\n  var newRange = typeof cursor_pos === 'number' ?\n    null : cursor_pos.newRange;\n  // take into account the old and new selection to generate the best diff\n  // possible for a text edit.  for example, a text change from \"xxx\" to \"xx\"\n  // could be a delete or forwards-delete of any one of the x's, or the\n  // result of selecting two of the x's and typing \"x\".\n  var oldLength = oldText.length;\n  var newLength = newText.length;\n  if (oldRange.length === 0 && (newRange === null || newRange.length === 0)) {\n    // see if we have an insert or delete before or after cursor\n    var oldCursor = oldRange.index;\n    var oldBefore = oldText.slice(0, oldCursor);\n    var oldAfter = oldText.slice(oldCursor);\n    var maybeNewCursor = newRange ? newRange.index : null;\n    editBefore: {\n      // is this an insert or delete right before oldCursor?\n      var newCursor = oldCursor + newLength - oldLength;\n      if (maybeNewCursor !== null && maybeNewCursor !== newCursor) {\n        break editBefore;\n      }\n      if (newCursor < 0 || newCursor > newLength) {\n        break editBefore;\n      }\n      var newBefore = newText.slice(0, newCursor);\n      var newAfter = newText.slice(newCursor);\n      if (newAfter !== oldAfter) {\n        break editBefore;\n      }\n      var prefixLength = Math.min(oldCursor, newCursor);\n      var oldPrefix = oldBefore.slice(0, prefixLength);\n      var newPrefix = newBefore.slice(0, prefixLength);\n      if (oldPrefix !== newPrefix) {\n        break editBefore;\n      }\n      var oldMiddle = oldBefore.slice(prefixLength);\n      var newMiddle = newBefore.slice(prefixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldAfter);\n    }\n    editAfter: {\n      // is this an insert or delete right after oldCursor?\n      if (maybeNewCursor !== null && maybeNewCursor !== oldCursor) {\n        break editAfter;\n      }\n      var cursor = oldCursor;\n      var newBefore = newText.slice(0, cursor);\n      var newAfter = newText.slice(cursor);\n      if (newBefore !== oldBefore) {\n        break editAfter;\n      }\n      var suffixLength = Math.min(oldLength - cursor, newLength - cursor);\n      var oldSuffix = oldAfter.slice(oldAfter.length - suffixLength);\n      var newSuffix = newAfter.slice(newAfter.length - suffixLength);\n      if (oldSuffix !== newSuffix) {\n        break editAfter;\n      }\n      var oldMiddle = oldAfter.slice(0, oldAfter.length - suffixLength);\n      var newMiddle = newAfter.slice(0, newAfter.length - suffixLength);\n      return make_edit_splice(oldBefore, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n  if (oldRange.length > 0 && newRange && newRange.length === 0) {\n    replaceRange: {\n      // see if diff could be a splice of the old selection range\n      var oldPrefix = oldText.slice(0, oldRange.index);\n      var oldSuffix = oldText.slice(oldRange.index + oldRange.length);\n      var prefixLength = oldPrefix.length;\n      var suffixLength = oldSuffix.length;\n      if (newLength < prefixLength + suffixLength) {\n        break replaceRange;\n      }\n      var newPrefix = newText.slice(0, prefixLength);\n      var newSuffix = newText.slice(newLength - suffixLength);\n      if (oldPrefix !== newPrefix || oldSuffix !== newSuffix) {\n        break replaceRange;\n      }\n      var oldMiddle = oldText.slice(prefixLength, oldLength - suffixLength);\n      var newMiddle = newText.slice(prefixLength, newLength - suffixLength);\n      return make_edit_splice(oldPrefix, oldMiddle, newMiddle, oldSuffix);\n    }\n  }\n\n  return null;\n}\n\nfunction diff(text1, text2, cursor_pos) {\n  // only pass fix_unicode=true at the top level, not when diff_main is\n  // recursively invoked\n  return diff_main(text1, text2, cursor_pos, true);\n}\n\ndiff.INSERT = DIFF_INSERT;\ndiff.DELETE = DIFF_DELETE;\ndiff.EQUAL = DIFF_EQUAL;\n\nmodule.exports = diff;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar deep_equal_1 = __importDefault(require(\"deep-equal\"));\nvar extend_1 = __importDefault(require(\"extend\"));\nvar AttributeMap;\n(function (AttributeMap) {\n    function compose(a, b, keepNull) {\n        if (a === void 0) { a = {}; }\n        if (b === void 0) { b = {}; }\n        if (typeof a !== 'object') {\n            a = {};\n        }\n        if (typeof b !== 'object') {\n            b = {};\n        }\n        var attributes = extend_1.default(true, {}, b);\n        if (!keepNull) {\n            attributes = Object.keys(attributes).reduce(function (copy, key) {\n                if (attributes[key] != null) {\n                    copy[key] = attributes[key];\n                }\n                return copy;\n            }, {});\n        }\n        for (var key in a) {\n            if (a[key] !== undefined && b[key] === undefined) {\n                attributes[key] = a[key];\n            }\n        }\n        return Object.keys(attributes).length > 0 ? attributes : undefined;\n    }\n    AttributeMap.compose = compose;\n    function diff(a, b) {\n        if (a === void 0) { a = {}; }\n        if (b === void 0) { b = {}; }\n        if (typeof a !== 'object') {\n            a = {};\n        }\n        if (typeof b !== 'object') {\n            b = {};\n        }\n        var attributes = Object.keys(a)\n            .concat(Object.keys(b))\n            .reduce(function (attrs, key) {\n            if (!deep_equal_1.default(a[key], b[key])) {\n                attrs[key] = b[key] === undefined ? null : b[key];\n            }\n            return attrs;\n        }, {});\n        return Object.keys(attributes).length > 0 ? attributes : undefined;\n    }\n    AttributeMap.diff = diff;\n    function invert(attr, base) {\n        if (attr === void 0) { attr = {}; }\n        if (base === void 0) { base = {}; }\n        attr = attr || {};\n        var baseInverted = Object.keys(base).reduce(function (memo, key) {\n            if (base[key] !== attr[key] && attr[key] !== undefined) {\n                memo[key] = base[key];\n            }\n            return memo;\n        }, {});\n        return Object.keys(attr).reduce(function (memo, key) {\n            if (attr[key] !== base[key] && base[key] === undefined) {\n                memo[key] = null;\n            }\n            return memo;\n        }, baseInverted);\n    }\n    AttributeMap.invert = invert;\n    function transform(a, b, priority) {\n        if (priority === void 0) { priority = false; }\n        if (typeof a !== 'object') {\n            return b;\n        }\n        if (typeof b !== 'object') {\n            return undefined;\n        }\n        if (!priority) {\n            return b; // b simply overwrites us without priority\n        }\n        var attributes = Object.keys(b).reduce(function (attrs, key) {\n            if (a[key] === undefined) {\n                attrs[key] = b[key]; // null is a valid value\n            }\n            return attrs;\n        }, {});\n        return Object.keys(attributes).length > 0 ? attributes : undefined;\n    }\n    AttributeMap.transform = transform;\n})(AttributeMap || (AttributeMap = {}));\nexports.default = AttributeMap;\n//# sourceMappingURL=AttributeMap.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Op_1 = __importDefault(require(\"./Op\"));\nvar Iterator = /** @class */ (function () {\n    function Iterator(ops) {\n        this.ops = ops;\n        this.index = 0;\n        this.offset = 0;\n    }\n    Iterator.prototype.hasNext = function () {\n        return this.peekLength() < Infinity;\n    };\n    Iterator.prototype.next = function (length) {\n        if (!length) {\n            length = Infinity;\n        }\n        var nextOp = this.ops[this.index];\n        if (nextOp) {\n            var offset = this.offset;\n            var opLength = Op_1.default.length(nextOp);\n            if (length >= opLength - offset) {\n                length = opLength - offset;\n                this.index += 1;\n                this.offset = 0;\n            }\n            else {\n                this.offset += length;\n            }\n            if (typeof nextOp.delete === 'number') {\n                return { delete: length };\n            }\n            else {\n                var retOp = {};\n                if (nextOp.attributes) {\n                    retOp.attributes = nextOp.attributes;\n                }\n                if (typeof nextOp.retain === 'number') {\n                    retOp.retain = length;\n                }\n                else if (typeof nextOp.insert === 'string') {\n                    retOp.insert = nextOp.insert.substr(offset, length);\n                }\n                else {\n                    // offset should === 0, length should === 1\n                    retOp.insert = nextOp.insert;\n                }\n                return retOp;\n            }\n        }\n        else {\n            return { retain: Infinity };\n        }\n    };\n    Iterator.prototype.peek = function () {\n        return this.ops[this.index];\n    };\n    Iterator.prototype.peekLength = function () {\n        if (this.ops[this.index]) {\n            // Should never return 0 if our index is being managed correctly\n            return Op_1.default.length(this.ops[this.index]) - this.offset;\n        }\n        else {\n            return Infinity;\n        }\n    };\n    Iterator.prototype.peekType = function () {\n        if (this.ops[this.index]) {\n            if (typeof this.ops[this.index].delete === 'number') {\n                return 'delete';\n            }\n            else if (typeof this.ops[this.index].retain === 'number') {\n                return 'retain';\n            }\n            else {\n                return 'insert';\n            }\n        }\n        return 'retain';\n    };\n    Iterator.prototype.rest = function () {\n        if (!this.hasNext()) {\n            return [];\n        }\n        else if (this.offset === 0) {\n            return this.ops.slice(this.index);\n        }\n        else {\n            var offset = this.offset;\n            var index = this.index;\n            var next = this.next();\n            var rest = this.ops.slice(this.index);\n            this.offset = offset;\n            this.index = index;\n            return [next].concat(rest);\n        }\n    };\n    return Iterator;\n}());\nexports.default = Iterator;\n//# sourceMappingURL=Iterator.js.map","import Quill from './core';\n\nimport { AlignClass, AlignStyle } from './formats/align';\nimport {\n  DirectionAttribute,\n  DirectionClass,\n  DirectionStyle,\n} from './formats/direction';\nimport Indent from './formats/indent';\n\nimport Blockquote from './formats/blockquote';\nimport Header from './formats/header';\nimport List from './formats/list';\n\nimport { BackgroundClass, BackgroundStyle } from './formats/background';\nimport { ColorClass, ColorStyle } from './formats/color';\nimport { FontClass, FontStyle } from './formats/font';\nimport { SizeClass, SizeStyle } from './formats/size';\n\nimport Bold from './formats/bold';\nimport Italic from './formats/italic';\nimport Link from './formats/link';\nimport Script from './formats/script';\nimport Strike from './formats/strike';\nimport Underline from './formats/underline';\n\n// import Formula from './formats/formula';\nimport Image from './formats/image';\n// import Video from './formats/video';\n\nimport CodeBlock, { Code as InlineCode } from './formats/code';\n\nimport Syntax from './modules/syntax';\nimport Table from './modules/table';\nimport Toolbar from './modules/toolbar';\n\n// import Icons from './ui/icons';\n// import Picker from './ui/picker';\n// import ColorPicker from './ui/color-picker';\n// import IconPicker from './ui/icon-picker';\n// import Tooltip from './ui/tooltip';\n//\n// import BubbleTheme from './themes/bubble';\n// import SnowTheme from './themes/snow';\n\nQuill.register(\n  {\n    'attributors/attribute/direction': DirectionAttribute,\n\n    'attributors/class/align': AlignClass,\n    'attributors/class/background': BackgroundClass,\n    'attributors/class/color': ColorClass,\n    'attributors/class/direction': DirectionClass,\n    'attributors/class/font': FontClass,\n    'attributors/class/size': SizeClass,\n\n    'attributors/style/align': AlignStyle,\n    'attributors/style/background': BackgroundStyle,\n    'attributors/style/color': ColorStyle,\n    'attributors/style/direction': DirectionStyle,\n    'attributors/style/font': FontStyle,\n    'attributors/style/size': SizeStyle,\n  },\n  true,\n);\n\nQuill.register(\n  {\n    'formats/align': AlignClass,\n    'formats/direction': DirectionClass,\n    'formats/indent': Indent,\n\n    'formats/background': BackgroundStyle,\n    'formats/color': ColorStyle,\n    'formats/font': FontClass,\n    'formats/size': SizeClass,\n\n    'formats/blockquote': Blockquote,\n    'formats/code-block': CodeBlock,\n    'formats/header': Header,\n    'formats/list': List,\n\n    'formats/bold': Bold,\n    'formats/code': InlineCode,\n    'formats/italic': Italic,\n    'formats/link': Link,\n    'formats/script': Script,\n    'formats/strike': Strike,\n    'formats/underline': Underline,\n\n    // 'formats/formula': Formula,\n    'formats/image': Image,\n    // 'formats/video': Video,\n\n    'modules/syntax': Syntax,\n    'modules/table': Table,\n    'modules/toolbar': Toolbar,\n\n    // 'themes/bubble': BubbleTheme,\n    // 'themes/snow': SnowTheme,\n\n    // 'ui/icons': Icons,\n    // 'ui/picker': Picker,\n    // 'ui/icon-picker': IconPicker,\n    // 'ui/color-picker': ColorPicker,\n    // 'ui/tooltip': Tooltip,\n  },\n  true,\n);\n\nexport default Quill;\n"],"sourceRoot":""}